{
  "openapi": "3.0.3",
  "info": {
    "title": "HERE Fleet Telematics API",
    "description": "HERE Fleet Telematics API comprises the 4 HERE Location Services 'Geofencing', 'Map Attributes', 'Route Matching' and 'Waypoints Sequence'. It supersedes the services CLE, CRE, GFE, GFE on Maps, PDE, RME, TCE, WSE and Advanced Datasets.",
    "contact": {
    },
    "license": {
    },
    "version": "8.0.7",
    "x-document-meta-data": {
      "copyright": "Â© 2021 HERE Europe B.V.",
      "document-id": "c1ed2e22-b75c-4839-b051-d3b73fee1acd",
      "date-created": "2021-08-03T05:36:24+00:00"
    }
  },
  "servers": [
    {
      "url": "https://fleet.ls.hereapi.com"
    }
  ],
  "tags": [
    {
      "name": "Geofencing",
      "description": "The HERE Geofencing API can geofence asset positions against HERE Map objects or custom fence objects"
    },
    {
      "name": "Map Attributes",
      "description": "The HERE Map Attributes API offes simple and fast access to the rich HERE Map Content, seamlessly extensible by your own map data"
    },
    {
      "name": "Route Matching",
      "description": "Match GPS traces onto the most probably driven path"
    },
    {
      "name": "Routing Extensions & Route Matching",
      "description": "Route calculation with enterprise features"
    },
    {
      "name": "Search",
      "description": "Retrieve map features & custom features"
    },
    {
      "name": "Upload Data",
      "description": "Upload custom roads/restrictions and custom POIs"
    },
    {
      "name": "Waypoints Sequence",
      "description": "Compute best Sequence for Waypoints (Travelling Salesman Problem)"
    }
  ],
  "paths": {
    "/2/doc/maps.json": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "List the available custom maps",
        "operationId": "mapsJSONUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "Optional. Restrict the search to return only the info on this map. Default: All maps of this app_id.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "public_maps",
            "in": "query",
            "description": "Optional. If '1' then the public maps are also listed.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/MapDocResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/v8/geofence": {
      "get": {
        "tags": [
          "Geofence",
          "Geofencing"
        ],
        "summary": "Simple and fast search for geometries on HERE Map Content layers, extensible with custom geometry layers",
        "description": "Simple and fast search for geometries on HERE Map Content layers, extensible with custom geometry layers",
        "operationId": "geofenceUsingGET",
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layers",
            "in": "query",
            "description": "Comma separated list of layer names to be searched. Layer names are not case sensitive. The maximum length of a layer name and the permitted characters can be looked up up in the service via /serviceconfiguration.json",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "in",
            "in": "query",
            "description": "Spatial filtering. Supported is polygon. \r\nThe format is &in=polygon:{polygon coordinates e.g., lat1,lon1,lat2,lon2,lat3,lon3,...}.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "link2stabletopologyid",
            "in": "query",
            "description": "When set to 1 then stable topology ids are returned in the response. The default value is 1.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "When set to 1 then meta info is returned in the response. The default value is 1.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/MapAttributesV8Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/layers/access/grant.json": {
      "get": {
        "tags": [
          "Upload Data"
        ],
        "summary": "Grant other app_ids Access to Geometry Layers",
        "operationId": "grantPermissionUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer_id",
            "in": "query",
            "description": "name of layer for which to grant access",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "granted_app_id",
            "in": "query",
            "description": "Other app_id that will get access to the layer",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "permissions",
            "in": "query",
            "description": "Comma separated list containing read, write and/or export. read allows searches on the layer (except all.json or all.txt), write allows uploading or modifying the layer and export allows all searches. Regardless of the previous permissions, the granted_app_id replaces these access rights. An empty list revokes all permissions.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "set the permissions for the layer in this map, default = set the permissions for the layer in app_id's default map",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayerPermissionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/layers/delete.json": {
      "get": {
        "tags": [
          "Upload Data"
        ],
        "summary": "Delete some of my Geometry Layers",
        "operationId": "deleteLayersUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer_ids",
            "in": "query",
            "description": "Comma separated list of layers to delete",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "delete the layers within this map, default = delete the layers in app_id's default map",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteLayersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/layers/list.json": {
      "get": {
        "tags": [
          "Search",
          "Upload Data"
        ],
        "summary": "List custom geometry Layers",
        "operationId": "listUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storage",
            "in": "query",
            "description": "Either updatable or readonly. Default = both.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "show only the layers of this map, default = show the layers of all maps",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "public_maps",
            "in": "query",
            "description": "Optional. if '1' then the public HERE map layers are listed as well.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListLayersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/layers/modify.json": {
      "get": {
        "tags": [
          "Upload Data"
        ],
        "summary": "Modify Geometries in Existing Layers",
        "description": "Modify geometries using an HTTP GET or POST request. After the response there is a delay of several seconds to compile, store and make the modified geometries available in the service.\r\nNote: The level (tile grid size) of the layer can only be changed by uploading the whole layer, not as a modification operation.",
        "operationId": "modifyGetUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "changes",
            "in": "query",
            "description": "For GET requests: URL-encoded WKT file content as parameter value. For POST requests: Instead of this parameter, a multipart/form-data body is sent. The supported file formats and the parameter name are the same as for upload.json.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer_id",
            "in": "query",
            "description": "name of layer to modify",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "append, update or delete. Geometries are identified by their geometry_id column value. For append, the geometries must not exist yet and will be added. For update, the geometries must exist and will be replaced. All column values must be specified, not only the changes. For update and delete, the columns must not change - names, sequence orders and type must be identical. For delete, the geometries must exist and will be replaced. Only the geometry_id column is required.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wkt_quote",
            "in": "query",
            "description": "Specify the quote character to use. Default = \" (double quotes). Specifying NONE disables quotes.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "update the layer in this map, default = update the layer within the app_id's default map",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayerModifyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Modify Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayerModifyResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Upload Data"
        ],
        "summary": "Modify Geometries in Existing Layers",
        "description": "Modify geometries using an HTTP GET or POST request. After the response there is a delay of several seconds to compile, store and make the modified geometries available in the service.\r\nNote: The level (tile grid size) of the layer can only be changed by uploading the whole layer, not as a modification operation.",
        "operationId": "modifyPostUsingPOST",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer_id",
            "in": "query",
            "description": "name of layer to modify",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "append, update or delete. Geometries are identified by their geometry_id column value. For append, the geometries must not exist yet and will be added. For update, the geometries must exist and will be replaced. All column values must be specified, not only the changes. For update and delete, the columns must not change - names, sequence orders and type must be identical. For delete, the geometries must exist and will be replaced. Only the geometry_id column is required.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "update the layer in this map, default = update the layer within the app_id's default map",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wkt_quote",
            "in": "query",
            "description": "Specify the quote character to use. Default = \" (double quotes). Specifying NONE disables quotes.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayerModifyResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Modify Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayerModifyResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/layers/upload.json": {
      "get": {
        "tags": [
          "Upload Data"
        ],
        "summary": "Import Geometries in a WKT or Shape File",
        "description": "Import polygons, polylines or points in WKT (Wellknown Text) or Shapefile format geometries using an HTTP POST request, or import WKT geometries using HTTP GET. A layer can contain only one geometry type - polygons, polylines or points, but not a mix of different types. After the response there is a delay of several seconds to compile, store and make the geometries available in the service.",
        "operationId": "uploadGetUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file",
            "in": "query",
            "description": "For GET requests: URL-encoded WKT file content as parameter value. For POST requests: Instead of this parameter, a multipart/form-data body is sent. The filename of the multipart entity is arbitrary. The file can be a plain or zipped WKT text file ending with .wkt, or a zipped archive containing a .shp, .shx and .dbf file (optionally .prj or .cpg files). A WKT file consists of TAB separated elements. The first line contains the column names, the last column must be \"wkt\". The subsequent lines contain the content, the attributes and the geometry. To create an index on a set of columns for faster all.json responses, append ;* to these column names.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer_id",
            "in": "query",
            "description": "name of layer to create/replace",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "level",
            "in": "query",
            "description": "Specify tile size for the database for performance optimization",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "storage",
            "in": "query",
            "description": "Either updatable or readonly. Default = updatable.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wkt_quote",
            "in": "query",
            "description": "Specify the quote character to use. Default = \" (double quotes). Specifying NONE disables quotes.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "upload the layer into this map, default = upload the layer into the app_id's default map",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "indexColumns",
            "in": "query",
            "description": "Specify columns of the layer that should be indexed. Column name is followed by semi-colon(;) and indexing type. Supported indexing type are: order(o), text(t) or both order,text(o,t). Columns are separated by pipe(|). Example &indexColumns=POI_ID;order|CAT_ID;text|ADMIN_IDS;order,text",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "granted_app_ids",
            "in": "query",
            "description": "granted_app_ids",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayerUploadResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Upload Data"
        ],
        "summary": "Import Geometries in a WKT or Shape File",
        "description": "Import polygons, polylines or points in WKT (Wellknown Text) or Shapefile format geometries using an HTTP POST request, or import WKT geometries using HTTP GET. A layer can contain only one geometry type - polygons, polylines or points, but not a mix of different types. After the response there is a delay of several seconds to compile, store and make the geometries available in the service.",
        "operationId": "uploadPostUsingPOST",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer_id",
            "in": "query",
            "description": "name of layer to create/replace",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "level",
            "in": "query",
            "description": "Specify tile size for the database for performance optimization",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "storage",
            "in": "query",
            "description": "Either updatable or readonly. Default = updatable.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wkt_quote",
            "in": "query",
            "description": "Specify the quote character to use. Default = \" (double quotes). Specifying NONE disables quotes.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "upload the layer into this map, default = upload the layer into the app_id's default map",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "indexColumns",
            "in": "query",
            "description": "Specify columns of the layer that should be indexed. Column name is followed by semi-colon(;) and indexing type. Supported indexing type are: order(o), text(t) or both order,text(o,t). Columns are separated by pipe(|). Example &indexColumns=POI_ID;order|CAT_ID;text|ADMIN_IDS;order,text",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "granted_app_ids",
            "in": "query",
            "description": "granted_app_ids",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "binary"
              },
              "encoding": {
                "file": {
                  "contentType": "text/plain"
                }
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              },
              "encoding": {
                "file": {
                  "contentType": "text/plain"
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "string"
              },
              "encoding": {
                "file": {
                  "contentType": "text/plain"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LayerUploadResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/maps/delete.json": {
      "get": {
        "tags": [
          "Upload Data"
        ],
        "summary": "Delete one of my Maps",
        "operationId": "deleteMapsUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "name of map to delete",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storage",
            "in": "query",
            "description": "Either updatable or readonly. Default = both.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteLayersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/1/doc/attributes.json": {
      "get": {
        "tags": [
          "Map Attributes",
          "Search"
        ],
        "summary": "List the layer attributes across all layers",
        "description": "List the map layer attributes across all layers. Does not list the custom layers.",
        "operationId": "attributesJSONUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeDocBean"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/1/doc/indexes.json": {
      "get": {
        "tags": [
          "Map Attributes",
          "Search"
        ],
        "summary": "List available layer indexes",
        "description": "List the available indexes of all available layers. Does not list indexes of custom layers.",
        "operationId": "indexesJSONUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/IndexDocBean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/1/doc/layer.json": {
      "get": {
        "tags": [
          "Map Attributes",
          "Search"
        ],
        "summary": "List the layer attributes",
        "description": "List the attributes of a given layer. Does not list the custom layers.",
        "operationId": "layerJSONUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer",
            "in": "query",
            "description": "layer",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/LayerDetailDocBean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/1/doc/layers.json": {
      "get": {
        "tags": [
          "Map Attributes",
          "Search"
        ],
        "summary": "List the available map layers",
        "description": "List available map layers. To see only the layers of a given map region, like Postal Code Boundaries, then specify it as map 'region'. Does not list the custom layers.",
        "operationId": "layersJSONUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LayerDocBean"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/1/doc/maps.json": {
      "get": {
        "tags": [
          "Map Attributes",
          "Search"
        ],
        "summary": "List available map regions/releases",
        "description": "List available map regions/releases. Does not list custom maps.",
        "operationId": "mapsJSONUsingGET_1",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/MapDocResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/1/doc/scontent.json": {
      "get": {
        "tags": [
          "Map Attributes",
          "Search"
        ],
        "summary": "List static layer's attributes",
        "description": "List the attributes of a given static (non tiled) layer. Does not work for custom layers.",
        "operationId": "staticContentJSONUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "description": "Static content layer name",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/StaticContentDetailDocBean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/1/doc/scontents.json": {
      "get": {
        "tags": [
          "Map Attributes",
          "Search"
        ],
        "summary": "List static content layers",
        "description": "List the available static content (non-tiled) layers. Does not list custom layers.",
        "operationId": "staticContentsJSONUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/StaticContentDocBean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/1/file.bin": {
      "get": {
        "tags": [
          "Map Attributes",
          "Search"
        ],
        "summary": "File content",
        "description": "Retrieve the binary content of a file, like a junction view image",
        "operationId": "getFileUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer",
            "in": "query",
            "description": "layer name",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "path",
            "in": "query",
            "description": "file path, as specified in the referencing layer's attribute value",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/1/index.json": {
      "get": {
        "tags": [
          "Map Attributes",
          "Search"
        ],
        "summary": "Tile IDs containing a given value",
        "description": "Retrieve the IDs of tiles that contain a given (set of) attribute value(s). Does not work for custom layers.",
        "operationId": "indexJSONUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer",
            "in": "query",
            "description": "layer name",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "comma separated list of index attribute names",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "values",
            "in": "query",
            "description": "comma separated list of index attribute values, corresponding to the attribute names",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/IndexResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/1/search/bbox.json": {
      "get": {
        "tags": [
          "Map Attributes",
          "Search"
        ],
        "summary": "Retrieve layer content within given geo rectangle",
        "description": "Retrieve the layer content records within given geo bounding box. Does not work for custom layers.",
        "operationId": "searchBboxUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer_id",
            "in": "query",
            "description": "Layer name to be searched. Layer name is not case sensitive. The maximum length of a layer name and the permitted characters can be looked up up in the service via /serviceconfiguration.json",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key_attribute",
            "in": "query",
            "description": "the key column(s) of this layer, as defined in the layer specification",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "List of comma separated column names to specify which attributes shall appear in the result. Column names are not case sensitive. Default = all.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "A bounding box, provided as upper, left, lower and right coordinates in WGS84 degrees. All geometries overlapping this rectangle will be returned.\r\nThe format is north latitude,west longitude;south latitude,east longitude.\r\nExample: bbox=37.8,-122.1;37.2,-122.0",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "geom",
            "in": "query",
            "description": "local, full or none. Specifies the geometry representation in the result. Default = local. Local geometry is used for map display purposes, returning geometry pieces that cover the given search radius, bounding box or corridor polygon. Full geometry is used for interactive editing, where the original geometry is required. None is used for applications like geofencing, which most of the time want to know only the ids of the geofence points/lines polygons they are in or near.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Optional (default=whole world excl. JPN, CHN, SK). Map coverage region, e.g. APAC, AUS, WEU, IND, MEA, NA, SAM, TWN, JPN. The region may contain hints to distinguish specific content. E.g. there can be an WEU and PCBEU, where the 2nd map contains only Postal Code Boundary layers. If not specified, the service will find the region(s) automatically, that cover the request. The parameter can contain a comma separated list of regions (f.e. WEU,MEA). If the region parameter is specified, the service will use these region(s) and skip region(s) that may also cover the response (f.e. EEU). Except of JPN, specifying a region is strongly discouraged, because regions might change and hence applications that specify a region might stop working when the region gets discontinued, renamed, split or changed otherwise. As the APAC region contains a simplified entry map content of JPN, JPN needs to be specified as region to access the full JPN content.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "release",
            "in": "query",
            "description": "Map release quarter, e.g. 2015Q4, 161J0, 16153 or LATEST (= default) for the latest available map release quarter. Specifying a map release is strongly discouraged, because there is no guarantee how long old map releases are available, hence applications that specify a release might stop working when the release gets retired. To choose a specific snapshot of the weather archive layer, a UNIX timestamp (number of milliseconds since 1970) or a date in 2017-12-01T17:30:00+01:00 format can be passed.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GeometrySearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/1/search/corridor.json": {
      "get": {
        "tags": [
          "Map Attributes",
          "Search"
        ],
        "summary": "Retrieve layer content within given geo corridor",
        "description": "Retrieve the layer content records within an airline distance along a given polyline. Does not work for custom layers.",
        "operationId": "searchCorridorUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer_ids",
            "in": "query",
            "description": "Comma separated list of layer names to be searched. Layer names are not case sensitive. The maximum length of a layer name and the permitted characters can be looked up up in the service via /serviceconfiguration.json",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key_attributes",
            "in": "query",
            "description": "the key column(s) of this layer, as defined in the layer specification",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "List of comma separated column names to specify which attributes shall appear in the result. Column names are not case sensitive. Default = all.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "corridor",
            "in": "query",
            "description": "Either corridor, route_id or routeHandle is required.\r\nThe WGS84 degree coordinates of the polyline used as corridor center line.\r\nFor example:\r\nlatitude 1,longitude 1;latitude 2,longitude 2;...",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "route_id",
            "in": "query",
            "description": "Either corridor, route_id or routeHandle is required.\r\nA route_id obtained from a previous v7.2 Router call. This route_id will be turned into a corridor polyline.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeHandle",
            "in": "query",
            "description": "Either corridor, route_id or routeHandle is required.\r\nA routeHandle obtained from a previous v8 Router call. This routeHandle will be turned into a corridor polyline.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "The buffer search radius in meters.All geometries overlapping the corridor polygon will be returned.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "geom",
            "in": "query",
            "description": "local, full or none. Specifies the geometry representation in the result. Default = local. Local geometry is used for map display purposes, returning geometry pieces that cover the given search radius, bounding box or corridor polygon. Full geometry is used for interactive editing, where the original geometry is required. None is used for applications like geofencing, which most of the time want to know only the ids of the geofence points/lines polygons they are in or near.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The routing mode (e.g. fastest;car;traffic:disabled) that determines how the route is calculated. When route_id/routeHandle is used for the corridor search then please specify the same mode which was used to get the route id or route handle.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transportMode",
            "in": "query",
            "description": "Mode of transport to be used for the route calculation: car, truck, pedestrian;It determines how the route is calculated. When routeHandle is used for the corridor search then please specify the same transportMode which was used to get the route handle.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routingMode",
            "in": "query",
            "description": "Specifies which optimization is applied during route calculation: fast, short;It determines how the route is calculated. When routeHandle is used for the corridor search then please specify the same routingMode which was used to get the route handle.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Optional (default=whole world excl. JPN, CHN, SK). Map coverage region, e.g. APAC, AUS, WEU, IND, MEA, NA, SAM, TWN, JPN. The region may contain hints to distinguish specific content. E.g. there can be an WEU and PCBEU, where the 2nd map contains only Postal Code Boundary layers. If not specified, the service will find the region(s) automatically, that cover the request. The parameter can contain a comma separated list of regions (f.e. WEU,MEA). If the region parameter is specified, the service will use these region(s) and skip region(s) that may also cover the response (f.e. EEU). Except of JPN, specifying a region is strongly discouraged, because regions might change and hence applications that specify a region might stop working when the region gets discontinued, renamed, split or changed otherwise. As the APAC region contains a simplified entry map content of JPN, JPN needs to be specified as region to access the full JPN content.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "release",
            "in": "query",
            "description": "Map release quarter, e.g. 2015Q4, 161J0, 16153 or LATEST (= default) for the latest available map release quarter. Specifying a map release is strongly discouraged, because there is no guarantee how long old map releases are available, hence applications that specify a release might stop working when the release gets retired. To choose a specific snapshot of the weather archive layer, a UNIX timestamp (number of milliseconds since 1970) or a date in 2017-12-01T17:30:00+01:00 format can be passed.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GeometrySearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Map Attributes",
          "Search"
        ],
        "summary": "Retrieve layer content within given geo corridor",
        "description": "Retrieve the layer content records within an airline distance along a given polyline. Does not work for custom layers.",
        "operationId": "searchCorridorUsingPOST",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer_ids",
            "in": "query",
            "description": "Comma separated list of layer names to be searched. Layer names are not case sensitive. The maximum length of a layer name and the permitted characters can be looked up up in the service via /serviceconfiguration.json",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key_attributes",
            "in": "query",
            "description": "the key column(s) of this layer, as defined in the layer specification",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "List of comma separated column names to specify which attributes shall appear in the result. Column names are not case sensitive. Default = all.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "corridor",
            "in": "query",
            "description": "Either corridor, route_id or routeHandle is required.\r\nThe WGS84 degree coordinates of the polyline used as corridor center line.\r\nFor example:\r\nlatitude 1,longitude 1;latitude 2,longitude 2;...",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "route_id",
            "in": "query",
            "description": "Either corridor, route_id or routeHandle is required.\r\nA route_id obtained from a previous v7.2 Router call. This route_id will be turned into a corridor polyline.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeHandle",
            "in": "query",
            "description": "Either corridor, route_id or routeHandle is required.\r\nA routeHandle obtained from a previous v8 Router call. This routeHandle will be turned into a corridor polyline.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "The buffer search radius in meters.All geometries overlapping the corridor polygon will be returned.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "geom",
            "in": "query",
            "description": "local, full or none. Specifies the geometry representation in the result. Default = local. Local geometry is used for map display purposes, returning geometry pieces that cover the given search radius, bounding box or corridor polygon. Full geometry is used for interactive editing, where the original geometry is required. None is used for applications like geofencing, which most of the time want to know only the ids of the geofence points/lines polygons they are in or near.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The routing mode (e.g. fastest;car;traffic:disabled) that determines how the route is calculated. When route_id/routeHandle is used for the corridor search then please specify the same mode which was used to get the route id or route handle.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transportMode",
            "in": "query",
            "description": "Mode of transport to be used for the route calculation: car, truck, pedestrian;It determines how the route is calculated. When routeHandle is used for the corridor search then please specify the same transportMode which was used to get the route handle.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routingMode",
            "in": "query",
            "description": "Specifies which optimization is applied during route calculation: fast, short;It determines how the route is calculated. When routeHandle is used for the corridor search then please specify the same routingMode which was used to get the route handle.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Optional (default=whole world excl. JPN, CHN, SK). Map coverage region, e.g. APAC, AUS, WEU, IND, MEA, NA, SAM, TWN, JPN. The region may contain hints to distinguish specific content. E.g. there can be an WEU and PCBEU, where the 2nd map contains only Postal Code Boundary layers. If not specified, the service will find the region(s) automatically, that cover the request. The parameter can contain a comma separated list of regions (f.e. WEU,MEA). If the region parameter is specified, the service will use these region(s) and skip region(s) that may also cover the response (f.e. EEU). Except of JPN, specifying a region is strongly discouraged, because regions might change and hence applications that specify a region might stop working when the region gets discontinued, renamed, split or changed otherwise. As the APAC region contains a simplified entry map content of JPN, JPN needs to be specified as region to access the full JPN content.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "release",
            "in": "query",
            "description": "Map release quarter, e.g. 2015Q4, 161J0, 16153 or LATEST (= default) for the latest available map release quarter. Specifying a map release is strongly discouraged, because there is no guarantee how long old map releases are available, hence applications that specify a release might stop working when the release gets retired. To choose a specific snapshot of the weather archive layer, a UNIX timestamp (number of milliseconds since 1970) or a date in 2017-12-01T17:30:00+01:00 format can be passed.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GeometrySearchResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/1/search/quadkey.json": {
      "get": {
        "tags": [
          "Map Attributes",
          "Search"
        ],
        "summary": "Retrieve layer content within a quadkey",
        "description": "Retrieve the layer content records within a given geo rectangle specified by a (standard WGS84 Mercator) quadkey. Does not work for custom layers.",
        "operationId": "searchQuadKeyUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer_id",
            "in": "query",
            "description": "Layer name to be searched. Layer name is not case sensitive. The maximum length of a layer name and the permitted characters can be looked up up in the service via /serviceconfiguration.json",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key_attribute",
            "in": "query",
            "description": "the key column(s) of this layer, as defined in the layer specification",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "List of comma separated column names to specify which attributes shall appear in the result. Column names are not case sensitive. Default = all.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quad_key",
            "in": "query",
            "description": "The quad key number of the map tile area to search from.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "geom",
            "in": "query",
            "description": "local, full or none. Specifies the geometry representation in the result. Default = local. Local geometry is used for map display purposes, returning geometry pieces that cover the given search radius, bounding box or corridor polygon. Full geometry is used for interactive editing, where the original geometry is required. None is used for applications like geofencing, which most of the time want to know only the ids of the geofence points/lines polygons they are in or near.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Optional (default=whole world excl. JPN, CHN, SK). Map coverage region, e.g. APAC, AUS, WEU, IND, MEA, NA, SAM, TWN, JPN. The region may contain hints to distinguish specific content. E.g. there can be an WEU and PCBEU, where the 2nd map contains only Postal Code Boundary layers. If not specified, the service will find the region(s) automatically, that cover the request. The parameter can contain a comma separated list of regions (f.e. WEU,MEA). If the region parameter is specified, the service will use these region(s) and skip region(s) that may also cover the response (f.e. EEU). Except of JPN, specifying a region is strongly discouraged, because regions might change and hence applications that specify a region might stop working when the region gets discontinued, renamed, split or changed otherwise. As the APAC region contains a simplified entry map content of JPN, JPN needs to be specified as region to access the full JPN content.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "release",
            "in": "query",
            "description": "Map release quarter, e.g. 2015Q4, 161J0, 16153 or LATEST (= default) for the latest available map release quarter. Specifying a map release is strongly discouraged, because there is no guarantee how long old map releases are available, hence applications that specify a release might stop working when the release gets retired. To choose a specific snapshot of the weather archive layer, a UNIX timestamp (number of milliseconds since 1970) or a date in 2017-12-01T17:30:00+01:00 format can be passed.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GeometrySearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/1/serviceconfiguration.json": {
      "get": {
        "tags": [
          "Map Attributes",
          "Search"
        ],
        "summary": "Service parameter boundary values",
        "description": "Numeric constants and limits for the service calls. Will never become more strict, but can become more relaxed in future releases.",
        "operationId": "getServiceConfigurationUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceConfigurationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/1/static.json": {
      "get": {
        "tags": [
          "Map Attributes",
          "Search"
        ],
        "summary": "Static layer's content",
        "description": "Retrieve the rows from the static layer's content. Does not include custom layers.",
        "operationId": "staticJSONUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "description": "Static content layer name",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "link2stabletopologyid",
            "in": "query",
            "description": "Optional. If '1' then the result records have 2 additional columns: TOPOLOGY_ID and START_OFFSET. The HERE topology segment PVID identifies a stretch of roads between 2 intersections. Links are subsets of a topology segment, hence the offset attributes define the range of the link within the topology segment [0..1].",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/TileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/1/tile.json": {
      "get": {
        "tags": [
          "Map Attributes",
          "Search"
        ],
        "summary": "Tile of rows from a layer",
        "description": "Retrieve the rows from within a given tile of this layer. Does not work for custom layers.",
        "operationId": "tileJsonUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer",
            "in": "query",
            "description": "Thematic layer name",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Optional (default=whole world excl. JPN, CHN, SK). Map coverage region, e.g. APAC, AUS, WEU, IND, MEA, NA, SAM, TWN, JPN. The region may contain hints to distinguish specific content. E.g. there can be an WEU and PCBEU, where the 2nd map contains only Postal Code Boundary layers. If not specified, the service will find the region(s) automatically, that cover the request. The parameter can contain a comma separated list of regions (f.e. WEU,MEA). If the region parameter is specified, the service will use these region(s) and skip region(s) that may also cover the response (f.e. EEU). Except of JPN, specifying a region is strongly discouraged, because regions might change and hence applications that specify a region might stop working when the region gets discontinued, renamed, split or changed otherwise. As the APAC region contains a simplified entry map content of JPN, JPN needs to be specified as region to access the full JPN content.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "release",
            "in": "query",
            "description": "Map release quarter, e.g. 2015Q4, 161J0, 16153 or LATEST (= default) for the latest available map release quarter. Specifying a map release is strongly discouraged, because there is no guarantee how long old map releases are available, hence applications that specify a release might stop working when the release gets retired. To choose a (nearest to) specific snapshot of the live traffic speed record layer, a UNIX timestamp (number of milliseconds since 1970) or a date in 2017-12-01T17:30:00+01:00 format can be passed.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "level",
            "in": "query",
            "description": "Level of the requested layer, as specified in layer's documentation.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tilex",
            "in": "query",
            "description": "Tile number in West-East direction. Depends on the level. The tile covering the longitude LON [WGS84 degree] has tileX = floor((LON + 180.0) / tileSize), where tileSize = 180 / 2^level. The tile with a given tileX value covers the longitude range [ tileX * tileSize - 180.0 ... (tileX + 1) * tileSize - 180.0 ].",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tiley",
            "in": "query",
            "description": "Tile number in South-North direction. Depends on the level. The tile covering the latitude LAT [WGS84 degree] has tileY = floor((LAT + 90.0) / tileSize), where tileSize = 180 / (2^level). The tile with a given tileY value covers the latitude range [ tileY * tileSize - 90.0 ... (tileY + 1) * tileSize - 90.0 [.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Optional. If '1' then each response tile is framed with meta information (layer, level, tilex, tiley, region, release).",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cols",
            "in": "query",
            "description": "Optional. Selects the subset of attributes in the response. Semicolon separated list of attributes, within a per-tile comma separated list. Example: cols=LAT;LON,LAT will retain only LAT and LON in first tile's result rows and retain only LAT in second tile's result.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "link2stabletopologyid",
            "in": "query",
            "description": "Optional. If '1' then the result records have 2 additional columns: TOPOLOGY_ID and START_OFFSET. The HERE topology segment PVID identifies a stretch of roads between 2 intersections. Links are subsets of a topology segment, hence the offset attributes define the range of the link within the topology segment [0..1].",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/TileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/1/tiles.json": {
      "get": {
        "tags": [
          "Map Attributes",
          "Search"
        ],
        "summary": "Multiple tiles' rows from layer(s)",
        "description": "Retrieve the rows from within given tile(s) out of one or more layers. Does not work for custom layers.",
        "operationId": "tilesJSONUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layers",
            "in": "query",
            "description": "Thematic Layer names, one per requested tile, comma separated list.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Optional (default=whole world excl. JPN, CHN, SK). Map coverage region, e.g. APAC, AUS, WEU, IND, MEA, NA, SAM, TWN, JPN. The region may contain hints to distinguish specific content. E.g. there can be an WEU and PCBEU, where the 2nd map contains only Postal Code Boundary layers. If not specified, the service will find the region(s) automatically, that cover the request. The parameter can contain a comma separated list of regions (f.e. WEU,MEA). If the region parameter is specified, the service will use these region(s) and skip region(s) that may also cover the response (f.e. EEU). Except of JPN, specifying a region is strongly discouraged, because regions might change and hence applications that specify a region might stop working when the region gets discontinued, renamed, split or changed otherwise. As the APAC region contains a simplified entry map content of JPN, JPN needs to be specified as region to access the full JPN content.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "release",
            "in": "query",
            "description": "Map release quarter, e.g. 2015Q4, 161J0, 16153 or LATEST (= default) for the latest available map release quarter. Specifying a map release is strongly discouraged, because there is no guarantee how long old map releases are available, hence applications that specify a release might stop working when the release gets retired. To choose a (nearest to) specific snapshot of the live traffic speed record layer, a UNIX timestamp (number of milliseconds since 1970) or a date in 2017-12-01T17:30:00+01:00 format can be passed.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "levels",
            "in": "query",
            "description": "Level of each requested layer, as specified in the layers' documentation, comma separated list.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tilexy",
            "in": "query",
            "description": "Comma separated sequence of tilex,tiley pairs for the requested tiles. The tilex and tiley values are described in the tile.json resource.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Optional. If '1' then each response tile is framed with meta information (layer, level, tilex, tiley, region, release).",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cols",
            "in": "query",
            "description": "Optional. Selects the subset of attributes in the response. Semicolon separated list of attributes, within a per-tile comma separated list. Example: cols=LAT;LON,LAT will retain only LAT and LON in first tile's result rows and retain only LAT in second tile's result.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "link2stabletopologyid",
            "in": "query",
            "description": "Optional. If '1' then the result records have 2 additional columns: TOPOLOGY_ID and START_OFFSET. The HERE topology segment PVID identifies a stretch of roads between 2 intersections. Links are subsets of a topology segment, hence the offset attributes define the range of the link within the topology segment [0..1].",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TileResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/v8/maps/attributes": {
      "get": {
        "tags": [
          "Map Attributes"
        ],
        "summary": "Simple and fast access to the rich HERE Map Content, seamlessly extensible by your own map data",
        "description": "Simple and fast access to the rich HERE Map Content, seamlessly extensible by your own map data",
        "operationId": "getMapAttributesUsingGET",
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layers",
            "in": "query",
            "description": "Comma separated list of layer names to be searched. Layer names are not case sensitive. The maximum length of a layer name and the permitted characters can be looked up up in the service via /serviceconfiguration.json",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "in",
            "in": "query",
            "description": "Spatial filtering. Supported are bbox, corridor, proximity and tile. \r\nThe format is &in=bbox:{west longitude},{south latitude},{east longitude},{north latitude} or &in=corridor:{polyline};r={radius} or &in=proximity:latitude,longitude;r={radius} or &in=tile:{comma separated list of tile ids. The number of tile ids must match with the number of layers.}.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "link2stabletopologyid",
            "in": "query",
            "description": "When set to 1 then stable topology ids are returned in the response. The default value is 1.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "When set to 1 then meta info is returned in the response. The default value is 1.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/MapAttributesV8Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/overlays/upload.json": {
      "get": {
        "tags": [
          "Upload Data"
        ],
        "summary": "Submit an overlay map for customized routing.",
        "description": "Submit an overlay map with custom modifications, such as block road links, remove restrictions from road links, or insert new road links into the network. The modifications that you submit, as part of your overlay maps, are only visible to you but not to other customers. Also, these modifications are not uploaded to the official HERE map. Routing can consider overlay maps.",
        "operationId": "upload_jsonUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overlay_spec",
            "in": "query",
            "description": "mandatory (unless in POST body). string. JSON structure describing the map changes.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "point_order_obeys_one_ways",
            "in": "query",
            "description": "optional. true/false. If true then geometry is not matched onto links if it is against the legal driving direction.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "multidigitized_handling",
            "in": "query",
            "description": "multidigitized_handling",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storage",
            "in": "query",
            "description": "optional. string. Currently only readonly is supported.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "mandatory. string. Overlay map name. Case insensitive. Must start with OVERLAY and contain only characters.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "private_link_handling",
            "in": "query",
            "description": "optional. string. Three values are supported: PLAIN = normal behavior (default), UNCONNECTED = don't connect new links to existing private links (use to avoid connecting new links to an unrelated neighboring facility), DROPEXISTING = block the existing private links (use if an existing link overlaps with a new link and is less",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_distance_to_match",
            "in": "query",
            "description": "optional. number. Specifies how many meters apart the geometries of two new links can be, to establish a connection. Should not exceed a few meters.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_distance_to_connect",
            "in": "query",
            "description": "optional. number. Specifies how many meters apart the geometries of a new link and an existing link can be, to establish connection. Should not exceed a few meters.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "min_match_confidence",
            "in": "query",
            "description": "optional, default 0.6. 0.0 ... 1.0. Specify the minimum required road match confidence level. If a match is below this level, the service throws an error.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "optional. string. Specifies the name of a user-defined function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fullTable",
            "in": "query",
            "description": "optional, default 'true'. Set to 'false' if the layer upload response time is too big otherwise. If 'false' then /search/all.json will not work on this layer.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_match_search_distance",
            "in": "query",
            "description": "optional. number. Default 100 meter. Specifies how many meters around a given point to search for existing geometries. Should not exceed a few meters.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "matchMode",
            "in": "query",
            "description": "optional. 0 or 1. Default 0. 0 does sophisticated geometry match. 1 does a quicker check which is usually sufficient if the geometries fit exactly to the existing road network.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent_overlay",
            "in": "query",
            "description": "parent_overlay",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id_space_offset",
            "in": "query",
            "description": "id_space_offset",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverlaySubmitResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Upload Data"
        ],
        "summary": "Submit an overlay map for customized routing.",
        "description": "Submit an overlay map with custom modifications, such as block road links, remove restrictions from road links, or insert new road links into the network. The modifications that you submit, as part of your overlay maps, are only visible to you but not to other customers. Also, these modifications are not uploaded to the official HERE map. Routing can consider overlay maps.",
        "operationId": "upload_jsonUsingPOST",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overlay_spec",
            "in": "query",
            "description": "mandatory (unless in POST body). string. JSON structure describing the map changes.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "point_order_obeys_one_ways",
            "in": "query",
            "description": "optional. true/false. If true then geometry is not matched onto links if it is against the legal driving direction.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "multidigitized_handling",
            "in": "query",
            "description": "multidigitized_handling",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storage",
            "in": "query",
            "description": "optional. string. Currently only readonly is supported.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "mandatory. string. Overlay map name. Case insensitive. Must start with OVERLAY and contain only characters.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "private_link_handling",
            "in": "query",
            "description": "optional. string. Three values are supported: PLAIN = normal behavior (default), UNCONNECTED = don't connect new links to existing private links (use to avoid connecting new links to an unrelated neighboring facility), DROPEXISTING = block the existing private links (use if an existing link overlaps with a new link and is less",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_distance_to_match",
            "in": "query",
            "description": "optional. number. Specifies how many meters apart the geometries of two new links can be, to establish a connection. Should not exceed a few meters.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_distance_to_connect",
            "in": "query",
            "description": "optional. number. Specifies how many meters apart the geometries of a new link and an existing link can be, to establish connection. Should not exceed a few meters.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "min_match_confidence",
            "in": "query",
            "description": "optional, default 0.6. 0.0 ... 1.0. Specify the minimum required road match confidence level. If a match is below this level, the service throws an error.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "optional. string. Specifies the name of a user-defined function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fullTable",
            "in": "query",
            "description": "optional, default 'true'. Set to 'false' if the layer upload response time is too big otherwise. If 'false' then /search/all.json will not work on this layer.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_match_search_distance",
            "in": "query",
            "description": "optional. number. Default 100 meter. Specifies how many meters around a given point to search for existing geometries. Should not exceed a few meters.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "matchMode",
            "in": "query",
            "description": "optional. 0 or 1. Default 0. 0 does sophisticated geometry match. 1 does a quicker check which is usually sufficient if the geometries fit exactly to the existing road network.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent_overlay",
            "in": "query",
            "description": "parent_overlay",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id_space_offset",
            "in": "query",
            "description": "id_space_offset",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OverlaySubmitResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/v8/match/routelinks": {
      "get": {
        "tags": [
          "Route Matching"
        ],
        "summary": "Match GPS traces to get the most probably driven path. Compatible with version 2.",
        "operationId": "matchRouteV8compatibilityToV2UsingGET",
        "parameters": [
          {
            "name": "ISO3Country",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ISO3Language",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commercial",
            "in": "query",
            "description": "1=vehicle registered for commercial use, 0=otherwise. For toll cost, environmental zone regulations and delivery-only zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabledEquipped",
            "in": "query",
            "description": "1=vehicle equipped to carry disabled people, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayCountry",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayLanguage",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayName",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayScript",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayVariant",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionType",
            "in": "query",
            "description": "1=EURO I, 2=EURO II, 3=EURO III, 4=EURO IV, 5=EURO V, 6=EURO VI, 7=EURO EEV, 8=Electric Vehicles. For toll cost and environmental zone restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionTypeForEnvZones",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "extensionKeys",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fuelAndEmissionType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelType",
            "in": "query",
            "description": "Defines the fuel powering the vehicle. Can be Diesel, Petrol, LPG, LNG, CNG, Ethanol, Propane, Hydrogen, Electric. (LPG=Liquefied Petroleum Gas,  LNG=Liquefied Natural Gas). Used f.e. for environmental zone restrictions, toll cost calculation, consumption based routing for Electric vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "heightAbove1stAxle",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hybrid",
            "in": "query",
            "description": "1=fuel+electric, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jsonCallback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitedWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload and trailers/caravan incl. their payload. 7.5t or 7500kg or 16500lbs. For truck restrictions, speed profile, toll cost and environmental zone restrictions. See also vehicleWeight. Note that country wide weight restrictions depend on the number of axles and trailers as well, so it might be necessary to specify tem as well.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numericFuelType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "passengersCount",
            "in": "query",
            "description": "actual number of passengers. For toll cost. See also vehicle type carHOV.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "script",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedHazardousGoods",
            "in": "query",
            "description": "Comma separated list from explosive, gas, flammable, combustible, organic, poison, radioActive, corrosive, poisonousInhalation, harmfulToWater, other, allhazardousGoods, explosiveFlammable. For toll cost (only explosive and other) and for truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tiresCount",
            "in": "query",
            "description": "Number of tires. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerHeight",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerNumberAxles",
            "in": "query",
            "description": "Number of trailer axles. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerType",
            "in": "query",
            "description": "0=None, 1=Caravan, 2=Trailer, 3=RVTrailer, 4=BoatTrailer. For toll cost and recreational vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerWeight",
            "in": "query",
            "description": "Actual total weight of trailers with their payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailersCount",
            "in": "query",
            "description": "Number of trailers, 0...4. For toll cost and truck restrictions. 0=no trailer, 1=one or more trailers, 2=two or more trailers, 3=three or more trailers. For truck restrictions: 4=one or more semi-trailers.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnelCategory",
            "in": "query",
            "description": "Defines the tunnel categories the truck must NOT use. B, C, D or E. A tunnels have no restrictions. E tunnels have most restrictions. If C is defined, the route will use A and B tunnels but not C, D or E.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unicodeLocaleAttributes",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "unicodeLocaleKeys",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "variant",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleNumberAxles",
            "in": "query",
            "description": "Number of axles excluding trailers. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload, but not trailers' weight or payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "waypoint0 ... waypointN",
            "in": "query",
            "description": "Comma separated waypoint latitude, longitude in WGS-84 degree. The coordinates may be directly followed by ;transitRadius;label;heading[;optional specifications]. \r\nA route must consist of at least 2 waypoints (start and destination). The coordinates may be directly followed by ;transitRadius;label;heading. \r\nThe maximum number of waypoints is limited. However, this limit is not a fixed number but is a result of the limit for the overall processing time. \r\nSet a transit radius to only influence the route to go via a certain city (Example: &waypoint1=50.12,8.65;10000). \r\nSet a heading (degree clockwise from North) to improve map matching (Example: latitude,longitude;;;140). \r\nTo define a loading time or delay time at a waypoint, use stopOver[,timeInSeconds]! (Example: &waypoint1=stopOver,300!50.12,8.65). \r\nThe optional specifications altitude, custom label, !StreetPosition and !LinkPosition, ignoreRestriction are currently supported.\r\nTo define a radius around the waypoint where vehicle restrictions should be ignored use optional specification ';ignoreRestriction:radius[,drivePenalty[,type[,entryPenalty]]]. Example: &waypoint1=50.12,8.65;ignoreRestriction:8000,0.9,all,1800 . \r\nThis is similar to the global parameter 'ignoreWaypointVehicleRestriction' which applies to all waypoint. But when specified explicitly for a waypoint, the 'ignoreRestriction' specification of waypoint is applied. \r\nWaypoints can have opening and closing times, can be unsorted or optional. Details are in Key Concepts / Waypoint sorting, optional Pickup and Opening Times",
            "required": true,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxle",
            "in": "query",
            "description": "Actual total weight per axle, incl. payload. 7.5t or 7500kg or 16500lbs. For toll cost and truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxleGroup",
            "in": "query",
            "description": "Semicolon separated list of vehicle weight [tons] per axle group. Each item is a tuple (name,value). Supported names are drive, single, tandem, triple, quad, quint. Example: &weightPerAxleGroup=drive:12;single:11;tandem:18",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "driver_cost",
            "in": "query",
            "description": "Cost per hour in target currency.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicle_cost",
            "in": "query",
            "description": "Cost per kilometer in target currency.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleCostOnFerry",
            "in": "query",
            "description": "Cost per kilometer on ferry in target currency. Default = vehicle_cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "3 letter ISO currency symbol, like EUR or USD. Required if toll cost must be added up across different currencies and/or be added to driver/vehicle/fuel cost in different currencies.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Optional (default=whole world excl. JPN, CHN, SK). Map coverage region, e.g. APAC, AUS, WEU, IND, MEA, NA, SAM, TWN, JPN. The region may contain hints to distinguish specific content. E.g. there can be an WEU and PCBEU, where the 2nd map contains only Postal Code Boundary layers. If not specified, the service will find the region(s) automatically, that cover the request. The parameter can contain a comma separated list of regions (f.e. WEU,MEA). If the region parameter is specified, the service will use these region(s) and skip region(s) that may also cover the response (f.e. EEU). Except of JPN, specifying a region is strongly discouraged, because regions might change and hence applications that specify a region might stop working when the region gets discontinued, renamed, split or changed otherwise. As the APAC region contains a simplified entry map content of JPN, JPN needs to be specified as region to access the full JPN content.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure",
            "in": "query",
            "description": "Format: now, yyyy-MM-dd'T'HH:mm:ss or yyyy-MM-dd'T'HH:mm:ssX. If no timezone is specified, then the local timezone at the route start link is used. Default: Ignore all time dependent access restrictions. Special values: ignoreTimeDepRestr (like default), obeyTimeDepRestr (all time dependent restrictions apply).",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tollVehicleType",
            "in": "query",
            "description": "1=Motorcycle, 2=Auto, 3=Truck, 4=Motor home, 5=Minibus, 6=Bus, 7=Motorcycle Sidecar(EU), 8=Tricycle(EU), 9=Delivery Truck(EU+India), 10=Snowmobile(US), 11=Pick-up(US+India), 12=Tractor(US+India), 13=Taxi, 14=HCM/EME (India Heavy Construction Machinery/Earth Moving Equipment)",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overlays",
            "in": "query",
            "description": "Overlay map name. Case insensitive. Must start with OVERLAY and contain only characters.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "fastest;car;traffic:disabled;[optional parameters] As optional parameters motorway (0, -1, -2, -3), tollroad (0, -1, -2, -3), boatFerry (0, -1, -2, -3), railFerry (0, -1, -2, -3), and tunnel (0, -1, -2, -3) can follow. \"shortest\" and \"balanced\" are not supported but can be individually tuned using &driver_cost and &vehicle_cost. Vehicle types: bdouble, bicycle, bus, car, carHOV, custom1, emergency, motorcycle, pedestrian, roadtrain, taxi, truck",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restTimes",
            "in": "query",
            "description": "Legal drive/rest intervals. Specify 'local' to obey the legal driver rest times of the respective country. If the driver is not fresh then add ,TimeAlreadyDrivenSinceLastShortBreak,TimeAlreadyDrivenSinceLastLongRest in seconds. Alternatively, proprietary values can be set for DriveTimeUntilShortBreak, ElapsedTimeUntilShortBreak, ShortBreakDuration, DriveTimeUntilLongRest, ElapsedTimeUntilLongBreak, LongRestDuration. E.g. EU requires after 4.5h a 45min break + after 9h an 11h rest.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language for the maneuver instructions in the response. Currently de-de, en-us, it-it, fr-fr, es-es, pt-pt, pl-pl, zh-cn, zh-tw, zh-hk and ja-jp are supported. If not specified, en-us is used.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidLinks",
            "in": "query",
            "description": "Comma separated list of link ids or lat,lon[;heading] coordinates to be avoided. Positive ids are not driven from reference node, negative ids are not driven towards reference node. Use '*' prefix to avoid both directions. For coordinates direction of blocking depends on the heading. If no heading given both directions will be avoided.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidAreas",
            "in": "query",
            "description": "List of areas (rectangles or polygons) to be avoided. Areas are separated by '!'. Rectangles can be specified with two diagonal coordinates separated by ';', e.g. latMax,lonMin;latMin,lonMax. Polygons are specified with consecutive vertex coordinates separated by ';', e.g. lat1,lon1;lat2,lon2;lat3,lon3;... ",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "arrival",
            "in": "query",
            "description": "Format like departure. Use this to find out when you have to start the journey to arrive at the given time. Note that toll cost is not considered when arrival time is specified.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rollups",
            "in": "query",
            "description": "Comma separated list of rollups (groupings, aggregation levels) in the result. Currently supported rollups are none (per link details), total (totals), tollsys (per toll system summaries), country (per country summaries), country;tollsys (per country and toll system summaries). Example: &rollups=none,country;tollsys,country returns the cost details and 2 different summaries.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "speedFcCat",
            "in": "query",
            "description": "Comma separated list of speeds driven in kilometer per hour per road functional class (1-5 + Virtual Connections VC) and speed category (1-8) (f.e. FC1-SC1,FC1-SC2,...,FC1-SC8;FC2-SC1,FC2-SC2,...;...;VC-SC1,FC-SC2,...VC-SC8). Functional classes are semicolon separated. Can contain empty entries (no change to default f.e. 80,76,,,,,,;,,,54,46,,,;...). Overrides router's default driven speed values. Also one of the predefined profiles can be activated by value car, light-truck, medium-truck or heavy-truck",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeAttributes",
            "in": "query",
            "description": "Defines which information is included in the response route part of the calculated route. Defaults to mode (mo), waypoints (wp), summary (sm), flags (fl). Also supported: speedProfile (sp), shape (sh), summaryByCountry (sc), boundingBox (bb), none. Can be excluded in the response by putting a hyphen in the front. e.g. -wp",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the calculated route. Defaults to warnings (wn). Also supported: language (lg), none. Can be excluded in the response by putting a hyphen in the front. e.g. -wn",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metaAttributes",
            "in": "query",
            "description": "Defines which information is included in the meta part of the calculated route. Defaults to none. Also supported: version (ver). Can be excluded in the response by putting a hyphen in the front. e.g. -ver",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maneuverAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the data representation of the route maneuvers. Defaults to position (po), length (le), travelTime (tt). Also supported: direction (di), action (ac), indices (ix), lanes (ln), roadName(rn), nextRoadName (nr), beforeAfter (ba) and none.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the route legs. Defaults to links (li), maneuvers (mn), length (le), travelTime (tt), baseTime (bt), trafficTime (tm). Also supported: shape (sh), boundingBox (bb), turnbyturnmaneuvers (mm), none. Can be excluded in the response by putting a hyphen in the front. e.g. -mn. Also in RouteMatch mode legAttributes=mn is supported.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkAttributes",
            "in": "query",
            "description": "Define optional attributes to be returned for each link. Defaults to shape (sh), length (le), remainTime (rt), remainDistance (rd), functionalClass (fc), warnings (wn), confidence (cd). Also supported: cost (co), maneuver (ma), timezone (tz), none. Can be excluded in the response by putting a hyphen in the front. e.g. -ma",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "traverseGates",
            "in": "query",
            "description": "Assume the driver has keys/permissions to traverse gates, if \"true\". Default = don't traverse any gates unless vehicle type is emergency.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeMatch",
            "in": "query",
            "description": "Default: Compute a legal route that goes through all way points. 1 = treat the waypoints (or trace file POST body) as GPS trace and return the most probable route along this trace. 2 = ETA Tracking mode, compute the route and take the POST body GPS trace into account to detect taken driver rest times and reached/skipped waypoints. To get maneuvers for a matched route specify &legAttributes=mn.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legal",
            "in": "query",
            "description": "For routeMatch=1. Enforces a legal route w.r.t. the listed maneuver types. Support maneuver types (comma separated list): access,gate,oneway,thrutraf,turn. Passing all of them yields a legal route as from a router. access=use only links allowed for the vehicle type (incl. truck measures). gate=don't traverse gates. oneway=don't drive links into forbidden direction. thrutraf=don't enter+leaving 'no through traffic' zones. turn=don't turn/u-turn illegally. Default: avoid illegal maneuvers, but use them if the trace obviously used them. If used, return respective warnings.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "Comma separated list of PDE layer names, to get link attributes along the route. Only link attribute layers (roughly those ending in _FC1, _FC2 ... ) are supported. Specify FCn to get the layers of all functional classes. Behind each layer name attributes can be listed, or (*) to get all. Example: &attributes=ROAD_GEOM_FCn(TUNNEL), SPEED_LIMITS_FCn (FROM_REF_SPEED_LIMIT, TO_REF_SPEED_LIMIT), ADAS_ATTRIB_FCn (SLOPES). A maximum of 32 layers can be requested per request.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tollPass",
            "in": "query",
            "description": "Comma separated list of owned passes: Senior_Pass, transponder (meaning the car has all transponders), allPasses, Annual, Nr_of_Days, Nr_of_Months (meaning the car has all passes valid for this number of months), AutoPass, SunPass, E-Z Pass (last 2 are examples for real toll transponders). Can also list toll system ids or toll booth condition ids. Allows traversal of 'transponder-only' toll booths, allows cost free traversal of certain toll sections and allows using cheaper prices for transponder/pass owners.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "capacity",
            "in": "query",
            "description": "Comma separated list of numeric truck capacity limits. E.g. 8,25,6 for max. 8t payload and max. 25 square meter floor space and max 6 passengers. Must match the 'load' values of way points. For unsorted or optional way points.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customConsumptionDetails",
            "in": "query",
            "description": "Semicolon separated list of speed/ascent/descent/builtupFactor/auxilliaryConsumption fuel consumption parameters. Speed is a list of $/km for different speeds. Ascent/descent are additional $/km per altitude climbed or descended. Builtup factor is an optional heuristic consumption multiplier for urban area, default value is 1.55. auxilliaryConsumption is the additional consumption (per hour) for running auxilliary units (climate control, infotainment, lights, etc.). Cost unit is not $ but 'currency'. Example: speed,0,0.102,10,0.084,30,0.066,50,0.06,70,0.066,100,0.072,120,0.084,140,0.108; ascent,0.4; descent,0.1; builtupFactor,1.4 = at 70 kph the car consumes 6.6$/100km and 0.4$/km altitude climbed, consumption increases 40% in urban area. Alternatively, user can specify default consumption profile: 3.5t, 7.5t, 18t, 40t or weightDependent. In case of the weightDependent consumption profiles will be decided based on the limitedWeight so this parameter also needs to be specified.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alternatives",
            "in": "query",
            "description": "Maximum number of alternative route options to return. Can return less or no alternatives. Only returns route alternatives that significantly differ from the best route but are not much more costly.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeout",
            "in": "query",
            "description": "Routing calculation must be finished within this amount of milliseconds. Default 50000. Maximum 50000.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreWaypointVehicleRestriction",
            "in": "query",
            "description": "Format: radius[;drivePenaltyFactor[;type[;entryPenalty]]]. radius: in meters around a waypoint to ignore various vehicle restrictions (vehicle type, admin truck, time-based) if necessary. drivePenaltyFactor: (cost multiplier 0...10) to control how strict to avoid restrictions. type: restrictions types (time based restrictions/all permanent restriction) to be ignored, accepted values are: all/allTimed. entryPenalty: penalty in seconds (0....7200) applied once while ignoring each restriction type (like entering a 'no through traffic' or entering a 'admin truck restricted' area). Example1: ignoreWaypointVehicleRestriction=2000. Example2: ignoreWaypointVehicleRestriction=2000;;allTimed . Example3: ignoreWaypointVehicleRestriction=5000;0.9;all;1800 .",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxSpeed",
            "in": "query",
            "description": "Maximum speed allowed for the whole routing. Supported units are kmh (kilometres per hour), mph (miles per hour) and mps (metres per second). If no unit is provided, kmh will be used as default unit.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alignToGpsTime",
            "in": "query",
            "description": "Route matching tries to align the driving time to the GPS timestamps. On per default. Set to 0 to switch it off.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customAttributes",
            "in": "query",
            "description": "Comma separated list of CLE layer names, to get link attributes along the route. Format follows the 'attribute' parameter. No FCn notation supported",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mapMatchRadius",
            "in": "query",
            "description": "Maximum adaptive map match search radius [meter]. Will be applied to each way point. If given it overrides waypoints' transitRadius values and the default maximum adatpive search radius. For routing, default 1600. Limit 5000.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeCountries",
            "in": "query",
            "description": "excludeCountries",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeZoneTypes",
            "in": "query",
            "description": "Checks if a route may enter a zone. Currently supported values: environmental,vignette and congestionPricing. If omitted or empty, zone restrictions are not taken into account. Not supported for route matching.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requestId",
            "in": "query",
            "description": "Mirrored RequestId value from the request structure. Used to trace requests.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instructionFormat",
            "in": "query",
            "description": "Defines the representation format of the maneuver's instruction text. Supported formats are text|html",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "oneway",
            "in": "query",
            "description": "Default: Obey oneways. 'penalty:0.5' allows oneway violation if the time benefit is more than 0.5 sec/meter. For bicycle recommended value 0.125, for emergencies 0.5. Not allowed for other vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "drivingReport",
            "in": "query",
            "description": "Defines whether driving report is added to the route match response. Set to 1 to switch it on. Turned off by default.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignorePreferredRoutes",
            "in": "query",
            "description": "Preferred routes for a specific vehicle type, are taken by default. To turn if off set ignorePreferredRoutes to true.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidTurns",
            "in": "query",
            "description": "Comma separated list of elements like left[;minAngleDegree;penaltySec] or right... or uTurn[;penaltySec] if a left/right turn is sharper than the specified angle (0...180) then the given time penalty is applied. uTurnAtWaypoint avoids u-turning on the link directly where the waypoint was reached.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreZeroSpeedPoints",
            "in": "query",
            "description": "Only for route matching. Default = consider all points. 1 = ignore trace points that have zero speed (only in traces that provide speed but not time).",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wpDist",
            "in": "query",
            "description": "Only for route matching. 0 = default value, feature is disabled. 1 = return spatial distance between matched trace points. 2 = return spatial distance between original trace points",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chargingStationFilters",
            "in": "query",
            "description": "URL Encoded comma separated list of charging stations to filter out the electric vehicle charging stations, along the route.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "makeReachable",
            "in": "query",
            "description": "A route will be returned even there are not sufficient fuel/EV-charging stations along the route consumption/energy details if this parameter is set to true. Default = false.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellularSignals",
            "in": "query",
            "description": "cellularSignals",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plannedWaypointReachTolerance",
            "in": "query",
            "description": "Only for routeMatch=2 with learned stops. Default = 20000 meter. If the trace gets closer then the learned stop is considered reached",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customRestrLimit",
            "in": "query",
            "description": "Comma separated list of key value pairs of custom restriction limits. The key and value of individual custom restriction limit must be numeric and must be separated by colon. Example: 0:10,1:20,2:50",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "evPoiLayer",
            "in": "query",
            "description": "Name of the layer which will be used to find the Electric Charging Stations along the route for Electric Vehicle Routing",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeMatch2PlannedWayPointReachRadius",
            "in": "query",
            "description": "Only for routeMatch=2. If vehicle apporaches a planned waypoint closer than this then the waypoint is considered reached. Default 20000.0m.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreWaypointsFarFromNeighbors",
            "in": "query",
            "description": "Only for routeMatch> 0. Default true. If false then doesn't ignore a trace point when it is much further away from its neighbors than the usual distances in the trace",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wayPointHeadingMismatchPenaltyFactor",
            "in": "query",
            "description": "Tie waypoints closer to links where the GPS heading matches the link's heading, and try harder to meet waypoints in the given driving direction. Default = 1.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidPrivate",
            "in": "query",
            "description": "Use private streets for routing. Set to 1 to always allow it or -1 to always forbid it. Default is 0 - access is allowed if there is a waypoint in the private street.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "licensePlate",
            "in": "query",
            "description": "Licenseplate of the vehicle. The vehicles registration number can influence the permission to drive in certain zones, mostly environmental zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "adminTruckRestrictions",
            "in": "query",
            "description": "Per default admin wide truck restrictions are obeyed. 'ignore' ignores them.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mapMatchTolerance",
            "in": "query",
            "description": "Map match tolerance [meter]. Will be applied to each way point. Routing can meet the waypoint on all links that are that much further away from the coordinate than the nearest. Default 3.0.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "privateChargingStation",
            "in": "query",
            "description": "If true then private charging stations will be considered during routing. Default is false.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "costPerConsumptionUnit",
            "in": "query",
            "description": "The cost of a consumption unit in targetCurrency. Default is 1.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restTimeDriverCost",
            "in": "query",
            "description": "Cost per hour in target currency while driver is taking a legal rest time. Can be between 0 and driver_cost value.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidFeatures",
            "in": "query",
            "description": "Comma separated list of road features to be avoided. Currently supported: unpaved[;300;50]. Avoids unpaved roads by the specified seconds to enter (Entry penalty) and seconds/km driven (drive peanlty), or a default penalty",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "truckVerified",
            "in": "query",
            "description": "Make use of truck verified roads for truck routing. Set to 1 to prefer transport verified roads, -1 to avoid them. Default is 0 - access is allowed, but truck verified routes are not prefered or avoided.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string"
              },
              "encoding": {
                "file": {
                  "contentType": "text/plain"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Route Matching"
        ],
        "summary": "Match GPS traces to get the most probably driven path. Compatible with version 2.",
        "operationId": "matchRouteV8compatibilityToV2UsingPOST",
        "parameters": [
          {
            "name": "ISO3Country",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ISO3Language",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commercial",
            "in": "query",
            "description": "1=vehicle registered for commercial use, 0=otherwise. For toll cost, environmental zone regulations and delivery-only zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabledEquipped",
            "in": "query",
            "description": "1=vehicle equipped to carry disabled people, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayCountry",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayLanguage",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayName",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayScript",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayVariant",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionType",
            "in": "query",
            "description": "1=EURO I, 2=EURO II, 3=EURO III, 4=EURO IV, 5=EURO V, 6=EURO VI, 7=EURO EEV, 8=Electric Vehicles. For toll cost and environmental zone restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionTypeForEnvZones",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "extensionKeys",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fuelAndEmissionType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelType",
            "in": "query",
            "description": "Defines the fuel powering the vehicle. Can be Diesel, Petrol, LPG, LNG, CNG, Ethanol, Propane, Hydrogen, Electric. (LPG=Liquefied Petroleum Gas,  LNG=Liquefied Natural Gas). Used f.e. for environmental zone restrictions, toll cost calculation, consumption based routing for Electric vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "heightAbove1stAxle",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hybrid",
            "in": "query",
            "description": "1=fuel+electric, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jsonCallback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitedWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload and trailers/caravan incl. their payload. 7.5t or 7500kg or 16500lbs. For truck restrictions, speed profile, toll cost and environmental zone restrictions. See also vehicleWeight. Note that country wide weight restrictions depend on the number of axles and trailers as well, so it might be necessary to specify tem as well.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numericFuelType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "passengersCount",
            "in": "query",
            "description": "actual number of passengers. For toll cost. See also vehicle type carHOV.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "script",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedHazardousGoods",
            "in": "query",
            "description": "Comma separated list from explosive, gas, flammable, combustible, organic, poison, radioActive, corrosive, poisonousInhalation, harmfulToWater, other, allhazardousGoods, explosiveFlammable. For toll cost (only explosive and other) and for truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tiresCount",
            "in": "query",
            "description": "Number of tires. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerHeight",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerNumberAxles",
            "in": "query",
            "description": "Number of trailer axles. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerType",
            "in": "query",
            "description": "0=None, 1=Caravan, 2=Trailer, 3=RVTrailer, 4=BoatTrailer. For toll cost and recreational vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerWeight",
            "in": "query",
            "description": "Actual total weight of trailers with their payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailersCount",
            "in": "query",
            "description": "Number of trailers, 0...4. For toll cost and truck restrictions. 0=no trailer, 1=one or more trailers, 2=two or more trailers, 3=three or more trailers. For truck restrictions: 4=one or more semi-trailers.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnelCategory",
            "in": "query",
            "description": "Defines the tunnel categories the truck must NOT use. B, C, D or E. A tunnels have no restrictions. E tunnels have most restrictions. If C is defined, the route will use A and B tunnels but not C, D or E.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unicodeLocaleAttributes",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "unicodeLocaleKeys",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "variant",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleNumberAxles",
            "in": "query",
            "description": "Number of axles excluding trailers. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload, but not trailers' weight or payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "waypoint0 ... waypointN",
            "in": "query",
            "description": "Comma separated waypoint latitude, longitude in WGS-84 degree. The coordinates may be directly followed by ;transitRadius;label;heading[;optional specifications]. \r\nA route must consist of at least 2 waypoints (start and destination). The coordinates may be directly followed by ;transitRadius;label;heading. \r\nThe maximum number of waypoints is limited. However, this limit is not a fixed number but is a result of the limit for the overall processing time. \r\nSet a transit radius to only influence the route to go via a certain city (Example: &waypoint1=50.12,8.65;10000). \r\nSet a heading (degree clockwise from North) to improve map matching (Example: latitude,longitude;;;140). \r\nTo define a loading time or delay time at a waypoint, use stopOver[,timeInSeconds]! (Example: &waypoint1=stopOver,300!50.12,8.65). \r\nThe optional specifications altitude, custom label, !StreetPosition and !LinkPosition, ignoreRestriction are currently supported.\r\nTo define a radius around the waypoint where vehicle restrictions should be ignored use optional specification ';ignoreRestriction:radius[,drivePenalty[,type[,entryPenalty]]]. Example: &waypoint1=50.12,8.65;ignoreRestriction:8000,0.9,all,1800 . \r\nThis is similar to the global parameter 'ignoreWaypointVehicleRestriction' which applies to all waypoint. But when specified explicitly for a waypoint, the 'ignoreRestriction' specification of waypoint is applied. \r\nWaypoints can have opening and closing times, can be unsorted or optional. Details are in Key Concepts / Waypoint sorting, optional Pickup and Opening Times",
            "required": true,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxle",
            "in": "query",
            "description": "Actual total weight per axle, incl. payload. 7.5t or 7500kg or 16500lbs. For toll cost and truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxleGroup",
            "in": "query",
            "description": "Semicolon separated list of vehicle weight [tons] per axle group. Each item is a tuple (name,value). Supported names are drive, single, tandem, triple, quad, quint. Example: &weightPerAxleGroup=drive:12;single:11;tandem:18",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "driver_cost",
            "in": "query",
            "description": "Cost per hour in target currency.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicle_cost",
            "in": "query",
            "description": "Cost per kilometer in target currency.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleCostOnFerry",
            "in": "query",
            "description": "Cost per kilometer on ferry in target currency. Default = vehicle_cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "3 letter ISO currency symbol, like EUR or USD. Required if toll cost must be added up across different currencies and/or be added to driver/vehicle/fuel cost in different currencies.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Optional (default=whole world excl. JPN, CHN, SK). Map coverage region, e.g. APAC, AUS, WEU, IND, MEA, NA, SAM, TWN, JPN. The region may contain hints to distinguish specific content. E.g. there can be an WEU and PCBEU, where the 2nd map contains only Postal Code Boundary layers. If not specified, the service will find the region(s) automatically, that cover the request. The parameter can contain a comma separated list of regions (f.e. WEU,MEA). If the region parameter is specified, the service will use these region(s) and skip region(s) that may also cover the response (f.e. EEU). Except of JPN, specifying a region is strongly discouraged, because regions might change and hence applications that specify a region might stop working when the region gets discontinued, renamed, split or changed otherwise. As the APAC region contains a simplified entry map content of JPN, JPN needs to be specified as region to access the full JPN content.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure",
            "in": "query",
            "description": "Format: now, yyyy-MM-dd'T'HH:mm:ss or yyyy-MM-dd'T'HH:mm:ssX. If no timezone is specified, then the local timezone at the route start link is used. Default: Ignore all time dependent access restrictions. Special values: ignoreTimeDepRestr (like default), obeyTimeDepRestr (all time dependent restrictions apply).",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tollVehicleType",
            "in": "query",
            "description": "1=Motorcycle, 2=Auto, 3=Truck, 4=Motor home, 5=Minibus, 6=Bus, 7=Motorcycle Sidecar(EU), 8=Tricycle(EU), 9=Delivery Truck(EU+India), 10=Snowmobile(US), 11=Pick-up(US+India), 12=Tractor(US+India), 13=Taxi, 14=HCM/EME (India Heavy Construction Machinery/Earth Moving Equipment)",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overlays",
            "in": "query",
            "description": "Overlay map name. Case insensitive. Must start with OVERLAY and contain only characters.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "fastest;car;traffic:disabled;[optional parameters] As optional parameters motorway (0, -1, -2, -3), tollroad (0, -1, -2, -3), boatFerry (0, -1, -2, -3), railFerry (0, -1, -2, -3), and tunnel (0, -1, -2, -3) can follow. \"shortest\" and \"balanced\" are not supported but can be individually tuned using &driver_cost and &vehicle_cost. Vehicle types: bdouble, bicycle, bus, car, carHOV, custom1, emergency, motorcycle, pedestrian, roadtrain, taxi, truck",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restTimes",
            "in": "query",
            "description": "Legal drive/rest intervals. Specify 'local' to obey the legal driver rest times of the respective country. If the driver is not fresh then add ,TimeAlreadyDrivenSinceLastShortBreak,TimeAlreadyDrivenSinceLastLongRest in seconds. Alternatively, proprietary values can be set for DriveTimeUntilShortBreak, ElapsedTimeUntilShortBreak, ShortBreakDuration, DriveTimeUntilLongRest, ElapsedTimeUntilLongBreak, LongRestDuration. E.g. EU requires after 4.5h a 45min break + after 9h an 11h rest.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language for the maneuver instructions in the response. Currently de-de, en-us, it-it, fr-fr, es-es, pt-pt, pl-pl, zh-cn, zh-tw, zh-hk and ja-jp are supported. If not specified, en-us is used.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidLinks",
            "in": "query",
            "description": "Comma separated list of link ids or lat,lon[;heading] coordinates to be avoided. Positive ids are not driven from reference node, negative ids are not driven towards reference node. Use '*' prefix to avoid both directions. For coordinates direction of blocking depends on the heading. If no heading given both directions will be avoided.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidAreas",
            "in": "query",
            "description": "List of areas (rectangles or polygons) to be avoided. Areas are separated by '!'. Rectangles can be specified with two diagonal coordinates separated by ';', e.g. latMax,lonMin;latMin,lonMax. Polygons are specified with consecutive vertex coordinates separated by ';', e.g. lat1,lon1;lat2,lon2;lat3,lon3;... ",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "arrival",
            "in": "query",
            "description": "Format like departure. Use this to find out when you have to start the journey to arrive at the given time. Note that toll cost is not considered when arrival time is specified.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rollups",
            "in": "query",
            "description": "Comma separated list of rollups (groupings, aggregation levels) in the result. Currently supported rollups are none (per link details), total (totals), tollsys (per toll system summaries), country (per country summaries), country;tollsys (per country and toll system summaries). Example: &rollups=none,country;tollsys,country returns the cost details and 2 different summaries.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "speedFcCat",
            "in": "query",
            "description": "Comma separated list of speeds driven in kilometer per hour per road functional class (1-5 + Virtual Connections VC) and speed category (1-8) (f.e. FC1-SC1,FC1-SC2,...,FC1-SC8;FC2-SC1,FC2-SC2,...;...;VC-SC1,FC-SC2,...VC-SC8). Functional classes are semicolon separated. Can contain empty entries (no change to default f.e. 80,76,,,,,,;,,,54,46,,,;...). Overrides router's default driven speed values. Also one of the predefined profiles can be activated by value car, light-truck, medium-truck or heavy-truck",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeAttributes",
            "in": "query",
            "description": "Defines which information is included in the response route part of the calculated route. Defaults to mode (mo), waypoints (wp), summary (sm), flags (fl). Also supported: speedProfile (sp), shape (sh), summaryByCountry (sc), boundingBox (bb), none. Can be excluded in the response by putting a hyphen in the front. e.g. -wp",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the calculated route. Defaults to warnings (wn). Also supported: language (lg), none. Can be excluded in the response by putting a hyphen in the front. e.g. -wn",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metaAttributes",
            "in": "query",
            "description": "Defines which information is included in the meta part of the calculated route. Defaults to none. Also supported: version (ver). Can be excluded in the response by putting a hyphen in the front. e.g. -ver",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maneuverAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the data representation of the route maneuvers. Defaults to position (po), length (le), travelTime (tt). Also supported: direction (di), action (ac), indices (ix), lanes (ln), roadName(rn), nextRoadName (nr), beforeAfter (ba) and none.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the route legs. Defaults to links (li), maneuvers (mn), length (le), travelTime (tt), baseTime (bt), trafficTime (tm). Also supported: shape (sh), boundingBox (bb), turnbyturnmaneuvers (mm), none. Can be excluded in the response by putting a hyphen in the front. e.g. -mn. Also in RouteMatch mode legAttributes=mn is supported.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkAttributes",
            "in": "query",
            "description": "Define optional attributes to be returned for each link. Defaults to shape (sh), length (le), remainTime (rt), remainDistance (rd), functionalClass (fc), warnings (wn), confidence (cd). Also supported: cost (co), maneuver (ma), timezone (tz), none. Can be excluded in the response by putting a hyphen in the front. e.g. -ma",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "traverseGates",
            "in": "query",
            "description": "Assume the driver has keys/permissions to traverse gates, if \"true\". Default = don't traverse any gates unless vehicle type is emergency.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeMatch",
            "in": "query",
            "description": "Default: Compute a legal route that goes through all way points. 1 = treat the waypoints (or trace file POST body) as GPS trace and return the most probable route along this trace. 2 = ETA Tracking mode, compute the route and take the POST body GPS trace into account to detect taken driver rest times and reached/skipped waypoints. To get maneuvers for a matched route specify &legAttributes=mn.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legal",
            "in": "query",
            "description": "For routeMatch=1. Enforces a legal route w.r.t. the listed maneuver types. Support maneuver types (comma separated list): access,gate,oneway,thrutraf,turn. Passing all of them yields a legal route as from a router. access=use only links allowed for the vehicle type (incl. truck measures). gate=don't traverse gates. oneway=don't drive links into forbidden direction. thrutraf=don't enter+leaving 'no through traffic' zones. turn=don't turn/u-turn illegally. Default: avoid illegal maneuvers, but use them if the trace obviously used them. If used, return respective warnings.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "Comma separated list of PDE layer names, to get link attributes along the route. Only link attribute layers (roughly those ending in _FC1, _FC2 ... ) are supported. Specify FCn to get the layers of all functional classes. Behind each layer name attributes can be listed, or (*) to get all. Example: &attributes=ROAD_GEOM_FCn(TUNNEL), SPEED_LIMITS_FCn (FROM_REF_SPEED_LIMIT, TO_REF_SPEED_LIMIT), ADAS_ATTRIB_FCn (SLOPES). A maximum of 32 layers can be requested per request.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tollPass",
            "in": "query",
            "description": "Comma separated list of owned passes: Senior_Pass, transponder (meaning the car has all transponders), allPasses, Annual, Nr_of_Days, Nr_of_Months (meaning the car has all passes valid for this number of months), AutoPass, SunPass, E-Z Pass (last 2 are examples for real toll transponders). Can also list toll system ids or toll booth condition ids. Allows traversal of 'transponder-only' toll booths, allows cost free traversal of certain toll sections and allows using cheaper prices for transponder/pass owners.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "capacity",
            "in": "query",
            "description": "Comma separated list of numeric truck capacity limits. E.g. 8,25,6 for max. 8t payload and max. 25 square meter floor space and max 6 passengers. Must match the 'load' values of way points. For unsorted or optional way points.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customConsumptionDetails",
            "in": "query",
            "description": "Semicolon separated list of speed/ascent/descent/builtupFactor/auxilliaryConsumption fuel consumption parameters. Speed is a list of $/km for different speeds. Ascent/descent are additional $/km per altitude climbed or descended. Builtup factor is an optional heuristic consumption multiplier for urban area, default value is 1.55. auxilliaryConsumption is the additional consumption (per hour) for running auxilliary units (climate control, infotainment, lights, etc.). Cost unit is not $ but 'currency'. Example: speed,0,0.102,10,0.084,30,0.066,50,0.06,70,0.066,100,0.072,120,0.084,140,0.108; ascent,0.4; descent,0.1; builtupFactor,1.4 = at 70 kph the car consumes 6.6$/100km and 0.4$/km altitude climbed, consumption increases 40% in urban area. Alternatively, user can specify default consumption profile: 3.5t, 7.5t, 18t, 40t or weightDependent. In case of the weightDependent consumption profiles will be decided based on the limitedWeight so this parameter also needs to be specified.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alternatives",
            "in": "query",
            "description": "Maximum number of alternative route options to return. Can return less or no alternatives. Only returns route alternatives that significantly differ from the best route but are not much more costly.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeout",
            "in": "query",
            "description": "Routing calculation must be finished within this amount of milliseconds. Default 50000. Maximum 50000.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreWaypointVehicleRestriction",
            "in": "query",
            "description": "Format: radius[;drivePenaltyFactor[;type[;entryPenalty]]]. radius: in meters around a waypoint to ignore various vehicle restrictions (vehicle type, admin truck, time-based) if necessary. drivePenaltyFactor: (cost multiplier 0...10) to control how strict to avoid restrictions. type: restrictions types (time based restrictions/all permanent restriction) to be ignored, accepted values are: all/allTimed. entryPenalty: penalty in seconds (0....7200) applied once while ignoring each restriction type (like entering a 'no through traffic' or entering a 'admin truck restricted' area). Example1: ignoreWaypointVehicleRestriction=2000. Example2: ignoreWaypointVehicleRestriction=2000;;allTimed . Example3: ignoreWaypointVehicleRestriction=5000;0.9;all;1800 .",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxSpeed",
            "in": "query",
            "description": "Maximum speed allowed for the whole routing. Supported units are kmh (kilometres per hour), mph (miles per hour) and mps (metres per second). If no unit is provided, kmh will be used as default unit.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alignToGpsTime",
            "in": "query",
            "description": "Route matching tries to align the driving time to the GPS timestamps. On per default. Set to 0 to switch it off.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customAttributes",
            "in": "query",
            "description": "Comma separated list of CLE layer names, to get link attributes along the route. Format follows the 'attribute' parameter. No FCn notation supported",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mapMatchRadius",
            "in": "query",
            "description": "Maximum adaptive map match search radius [meter]. Will be applied to each way point. If given it overrides waypoints' transitRadius values and the default maximum adatpive search radius. For routing, default 1600. Limit 5000.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeCountries",
            "in": "query",
            "description": "excludeCountries",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeZoneTypes",
            "in": "query",
            "description": "Checks if a route may enter a zone. Currently supported values: environmental,vignette and congestionPricing. If omitted or empty, zone restrictions are not taken into account. Not supported for route matching.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requestId",
            "in": "query",
            "description": "Mirrored RequestId value from the request structure. Used to trace requests.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instructionFormat",
            "in": "query",
            "description": "Defines the representation format of the maneuver's instruction text. Supported formats are text|html",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "oneway",
            "in": "query",
            "description": "Default: Obey oneways. 'penalty:0.5' allows oneway violation if the time benefit is more than 0.5 sec/meter. For bicycle recommended value 0.125, for emergencies 0.5. Not allowed for other vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "drivingReport",
            "in": "query",
            "description": "Defines whether driving report is added to the route match response. Set to 1 to switch it on. Turned off by default.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignorePreferredRoutes",
            "in": "query",
            "description": "Preferred routes for a specific vehicle type, are taken by default. To turn if off set ignorePreferredRoutes to true.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidTurns",
            "in": "query",
            "description": "Comma separated list of elements like left[;minAngleDegree;penaltySec] or right... or uTurn[;penaltySec] if a left/right turn is sharper than the specified angle (0...180) then the given time penalty is applied. uTurnAtWaypoint avoids u-turning on the link directly where the waypoint was reached.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreZeroSpeedPoints",
            "in": "query",
            "description": "Only for route matching. Default = consider all points. 1 = ignore trace points that have zero speed (only in traces that provide speed but not time).",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wpDist",
            "in": "query",
            "description": "Only for route matching. 0 = default value, feature is disabled. 1 = return spatial distance between matched trace points. 2 = return spatial distance between original trace points",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chargingStationFilters",
            "in": "query",
            "description": "URL Encoded comma separated list of charging stations to filter out the electric vehicle charging stations, along the route.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "makeReachable",
            "in": "query",
            "description": "A route will be returned even there are not sufficient fuel/EV-charging stations along the route consumption/energy details if this parameter is set to true. Default = false.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellularSignals",
            "in": "query",
            "description": "cellularSignals",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plannedWaypointReachTolerance",
            "in": "query",
            "description": "Only for routeMatch=2 with learned stops. Default = 20000 meter. If the trace gets closer then the learned stop is considered reached",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customRestrLimit",
            "in": "query",
            "description": "Comma separated list of key value pairs of custom restriction limits. The key and value of individual custom restriction limit must be numeric and must be separated by colon. Example: 0:10,1:20,2:50",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "evPoiLayer",
            "in": "query",
            "description": "Name of the layer which will be used to find the Electric Charging Stations along the route for Electric Vehicle Routing",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeMatch2PlannedWayPointReachRadius",
            "in": "query",
            "description": "Only for routeMatch=2. If vehicle apporaches a planned waypoint closer than this then the waypoint is considered reached. Default 20000.0m.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreWaypointsFarFromNeighbors",
            "in": "query",
            "description": "Only for routeMatch> 0. Default true. If false then doesn't ignore a trace point when it is much further away from its neighbors than the usual distances in the trace",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wayPointHeadingMismatchPenaltyFactor",
            "in": "query",
            "description": "Tie waypoints closer to links where the GPS heading matches the link's heading, and try harder to meet waypoints in the given driving direction. Default = 1.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidPrivate",
            "in": "query",
            "description": "Use private streets for routing. Set to 1 to always allow it or -1 to always forbid it. Default is 0 - access is allowed if there is a waypoint in the private street.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "licensePlate",
            "in": "query",
            "description": "Licenseplate of the vehicle. The vehicles registration number can influence the permission to drive in certain zones, mostly environmental zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "adminTruckRestrictions",
            "in": "query",
            "description": "Per default admin wide truck restrictions are obeyed. 'ignore' ignores them.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mapMatchTolerance",
            "in": "query",
            "description": "Map match tolerance [meter]. Will be applied to each way point. Routing can meet the waypoint on all links that are that much further away from the coordinate than the nearest. Default 3.0.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "privateChargingStation",
            "in": "query",
            "description": "If true then private charging stations will be considered during routing. Default is false.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "costPerConsumptionUnit",
            "in": "query",
            "description": "The cost of a consumption unit in targetCurrency. Default is 1.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restTimeDriverCost",
            "in": "query",
            "description": "Cost per hour in target currency while driver is taking a legal rest time. Can be between 0 and driver_cost value.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidFeatures",
            "in": "query",
            "description": "Comma separated list of road features to be avoided. Currently supported: unpaved[;300;50]. Avoids unpaved roads by the specified seconds to enter (Entry penalty) and seconds/km driven (drive peanlty), or a default penalty",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "truckVerified",
            "in": "query",
            "description": "Make use of truck verified roads for truck routing. Set to 1 to prefer transport verified roads, -1 to avoid them. Default is 0 - access is allowed, but truck verified routes are not prefered or avoided.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string"
              },
              "encoding": {
                "file": {
                  "contentType": "text/plain"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/v8/matchroute": {
      "get": {
        "tags": [
          "Route Matching"
        ],
        "summary": "Match GPS traces onto the most probably driven path. Compatible with the Platform Path Matcher Library. PREVIEW - SUBJECT TO CHANGE!",
        "operationId": "matchRouteOLPPathMatcherStyleUsingGET",
        "parameters": [
          {
            "name": "ISO3Country",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ISO3Language",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commercial",
            "in": "query",
            "description": "1=vehicle registered for commercial use, 0=otherwise. For toll cost, environmental zone regulations and delivery-only zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabledEquipped",
            "in": "query",
            "description": "1=vehicle equipped to carry disabled people, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayCountry",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayLanguage",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayName",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayScript",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayVariant",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionType",
            "in": "query",
            "description": "1=EURO I, 2=EURO II, 3=EURO III, 4=EURO IV, 5=EURO V, 6=EURO VI, 7=EURO EEV, 8=Electric Vehicles. For toll cost and environmental zone restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionTypeForEnvZones",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "extensionKeys",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fuelAndEmissionType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelType",
            "in": "query",
            "description": "Defines the fuel powering the vehicle. Can be Diesel, Petrol, LPG, LNG, CNG, Ethanol, Propane, Hydrogen, Electric. (LPG=Liquefied Petroleum Gas,  LNG=Liquefied Natural Gas). Used f.e. for environmental zone restrictions, toll cost calculation, consumption based routing for Electric vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "heightAbove1stAxle",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hybrid",
            "in": "query",
            "description": "1=fuel+electric, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jsonCallback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitedWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload and trailers/caravan incl. their payload. 7.5t or 7500kg or 16500lbs. For truck restrictions, speed profile, toll cost and environmental zone restrictions. See also vehicleWeight. Note that country wide weight restrictions depend on the number of axles and trailers as well, so it might be necessary to specify tem as well.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numericFuelType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "passengersCount",
            "in": "query",
            "description": "actual number of passengers. For toll cost. See also vehicle type carHOV.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "script",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedHazardousGoods",
            "in": "query",
            "description": "Comma separated list from explosive, gas, flammable, combustible, organic, poison, radioActive, corrosive, poisonousInhalation, harmfulToWater, other, allhazardousGoods, explosiveFlammable. For toll cost (only explosive and other) and for truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tiresCount",
            "in": "query",
            "description": "Number of tires. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerHeight",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerNumberAxles",
            "in": "query",
            "description": "Number of trailer axles. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerType",
            "in": "query",
            "description": "0=None, 1=Caravan, 2=Trailer, 3=RVTrailer, 4=BoatTrailer. For toll cost and recreational vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerWeight",
            "in": "query",
            "description": "Actual total weight of trailers with their payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailersCount",
            "in": "query",
            "description": "Number of trailers, 0...4. For toll cost and truck restrictions. 0=no trailer, 1=one or more trailers, 2=two or more trailers, 3=three or more trailers. For truck restrictions: 4=one or more semi-trailers.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "truck",
            "in": "query",
            "description": "Truck parameters to be used during truck route calculation. eg: 'truck[axleCount]=5&truck[tunnelCategory]=b&truck[grossWeight]=25' ",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnelCategory",
            "in": "query",
            "description": "Defines the tunnel categories the truck must NOT use. B, C, D or E. A tunnels have no restrictions. E tunnels have most restrictions. If C is defined, the route will use A and B tunnels but not C, D or E.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unicodeLocaleAttributes",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "unicodeLocaleKeys",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "variant",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleNumberAxles",
            "in": "query",
            "description": "Number of axles excluding trailers. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload, but not trailers' weight or payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxle",
            "in": "query",
            "description": "Actual total weight per axle, incl. payload. 7.5t or 7500kg or 16500lbs. For toll cost and truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxleGroup",
            "in": "query",
            "description": "Semicolon separated list of vehicle weight [tons] per axle group. Each item is a tuple (name,value). Supported names are drive, single, tandem, triple, quad, quint. Example: &weightPerAxleGroup=drive:12;single:11;tandem:18",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transportMode",
            "in": "query",
            "description": "Mode of transport to be used for the calculation of the route: car, truck, pedestrian",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legal",
            "in": "query",
            "description": "For routeMatch=1. Enforces a legal route w.r.t. the listed maneuver types. Support maneuver types (comma separated list): access,gate,oneway,thrutraf,turn. Passing all of them yields a legal route as from a router. access=use only links allowed for the vehicle type (incl. truck measures). gate=don't traverse gates. oneway=don't drive links into forbidden direction. thrutraf=don't enter+leaving 'no through traffic' zones. turn=don't turn/u-turn illegally. Default: avoid illegal maneuvers, but use them if the trace obviously used them. If used, return respective warnings.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string"
              },
              "encoding": {
                "file": {
                  "contentType": "text/plain"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/OLSRouteMatch"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/OLSRouteMatch"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Route Matching"
        ],
        "summary": "Match GPS traces onto the most probably driven path. Compatible with the Platform Path Matcher Library. PREVIEW - SUBJECT TO CHANGE!",
        "operationId": "matchRouteOLPPathMatcherStyleUsingPOST",
        "parameters": [
          {
            "name": "ISO3Country",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ISO3Language",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commercial",
            "in": "query",
            "description": "1=vehicle registered for commercial use, 0=otherwise. For toll cost, environmental zone regulations and delivery-only zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabledEquipped",
            "in": "query",
            "description": "1=vehicle equipped to carry disabled people, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayCountry",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayLanguage",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayName",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayScript",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayVariant",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionType",
            "in": "query",
            "description": "1=EURO I, 2=EURO II, 3=EURO III, 4=EURO IV, 5=EURO V, 6=EURO VI, 7=EURO EEV, 8=Electric Vehicles. For toll cost and environmental zone restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionTypeForEnvZones",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "extensionKeys",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fuelAndEmissionType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelType",
            "in": "query",
            "description": "Defines the fuel powering the vehicle. Can be Diesel, Petrol, LPG, LNG, CNG, Ethanol, Propane, Hydrogen, Electric. (LPG=Liquefied Petroleum Gas,  LNG=Liquefied Natural Gas). Used f.e. for environmental zone restrictions, toll cost calculation, consumption based routing for Electric vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "heightAbove1stAxle",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hybrid",
            "in": "query",
            "description": "1=fuel+electric, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jsonCallback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitedWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload and trailers/caravan incl. their payload. 7.5t or 7500kg or 16500lbs. For truck restrictions, speed profile, toll cost and environmental zone restrictions. See also vehicleWeight. Note that country wide weight restrictions depend on the number of axles and trailers as well, so it might be necessary to specify tem as well.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numericFuelType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "passengersCount",
            "in": "query",
            "description": "actual number of passengers. For toll cost. See also vehicle type carHOV.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "script",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedHazardousGoods",
            "in": "query",
            "description": "Comma separated list from explosive, gas, flammable, combustible, organic, poison, radioActive, corrosive, poisonousInhalation, harmfulToWater, other, allhazardousGoods, explosiveFlammable. For toll cost (only explosive and other) and for truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tiresCount",
            "in": "query",
            "description": "Number of tires. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerHeight",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerNumberAxles",
            "in": "query",
            "description": "Number of trailer axles. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerType",
            "in": "query",
            "description": "0=None, 1=Caravan, 2=Trailer, 3=RVTrailer, 4=BoatTrailer. For toll cost and recreational vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerWeight",
            "in": "query",
            "description": "Actual total weight of trailers with their payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailersCount",
            "in": "query",
            "description": "Number of trailers, 0...4. For toll cost and truck restrictions. 0=no trailer, 1=one or more trailers, 2=two or more trailers, 3=three or more trailers. For truck restrictions: 4=one or more semi-trailers.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "truck",
            "in": "query",
            "description": "Truck parameters to be used during truck route calculation. eg: 'truck[axleCount]=5&truck[tunnelCategory]=b&truck[grossWeight]=25' ",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnelCategory",
            "in": "query",
            "description": "Defines the tunnel categories the truck must NOT use. B, C, D or E. A tunnels have no restrictions. E tunnels have most restrictions. If C is defined, the route will use A and B tunnels but not C, D or E.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unicodeLocaleAttributes",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "unicodeLocaleKeys",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "variant",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleNumberAxles",
            "in": "query",
            "description": "Number of axles excluding trailers. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload, but not trailers' weight or payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxle",
            "in": "query",
            "description": "Actual total weight per axle, incl. payload. 7.5t or 7500kg or 16500lbs. For toll cost and truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxleGroup",
            "in": "query",
            "description": "Semicolon separated list of vehicle weight [tons] per axle group. Each item is a tuple (name,value). Supported names are drive, single, tandem, triple, quad, quint. Example: &weightPerAxleGroup=drive:12;single:11;tandem:18",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transportMode",
            "in": "query",
            "description": "Mode of transport to be used for the calculation of the route: car, truck, pedestrian",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legal",
            "in": "query",
            "description": "For routeMatch=1. Enforces a legal route w.r.t. the listed maneuver types. Support maneuver types (comma separated list): access,gate,oneway,thrutraf,turn. Passing all of them yields a legal route as from a router. access=use only links allowed for the vehicle type (incl. truck measures). gate=don't traverse gates. oneway=don't drive links into forbidden direction. thrutraf=don't enter+leaving 'no through traffic' zones. turn=don't turn/u-turn illegally. Default: avoid illegal maneuvers, but use them if the trace obviously used them. If used, return respective warnings.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string"
              },
              "encoding": {
                "file": {
                  "contentType": "text/plain"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/OLSRouteMatch"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/OLSRouteMatch"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/calculateisoline.json": {
      "get": {
        "tags": [
          "Routing Extensions & Route Matching"
        ],
        "summary": "Return polygon or links that can be reached from a given start (or to a given destination) within a given amount of driving time, distance or cost.",
        "operationId": "calculateIsolineUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commercial",
            "in": "query",
            "description": "1=vehicle registered for commercial use, 0=otherwise. For toll cost, environmental zone regulations and delivery-only zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabledEquipped",
            "in": "query",
            "description": "1=vehicle equipped to carry disabled people, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionType",
            "in": "query",
            "description": "1=EURO I, 2=EURO II, 3=EURO III, 4=EURO IV, 5=EURO V, 6=EURO VI, 7=EURO EEV, 8=Electric Vehicles. For toll cost and environmental zone restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionTypeForEnvZones",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelAndEmissionType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelType",
            "in": "query",
            "description": "Defines the fuel powering the vehicle. Can be Diesel, Petrol, LPG, LNG, CNG, Ethanol, Propane, Hydrogen, Electric. (LPG=Liquefied Petroleum Gas,  LNG=Liquefied Natural Gas). Used f.e. for environmental zone restrictions, toll cost calculation, consumption based routing for Electric vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "heightAbove1stAxle",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hybrid",
            "in": "query",
            "description": "1=fuel+electric, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitedWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload and trailers/caravan incl. their payload. 7.5t or 7500kg or 16500lbs. For truck restrictions, speed profile, toll cost and environmental zone restrictions. See also vehicleWeight. Note that country wide weight restrictions depend on the number of axles and trailers as well, so it might be necessary to specify tem as well.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numericFuelType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "passengersCount",
            "in": "query",
            "description": "actual number of passengers. For toll cost. See also vehicle type carHOV.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedHazardousGoods",
            "in": "query",
            "description": "Comma separated list from explosive, gas, flammable, combustible, organic, poison, radioActive, corrosive, poisonousInhalation, harmfulToWater, other, allhazardousGoods, explosiveFlammable. For toll cost (only explosive and other) and for truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tiresCount",
            "in": "query",
            "description": "Number of tires. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerHeight",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerNumberAxles",
            "in": "query",
            "description": "Number of trailer axles. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerType",
            "in": "query",
            "description": "0=None, 1=Caravan, 2=Trailer, 3=RVTrailer, 4=BoatTrailer. For toll cost and recreational vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerWeight",
            "in": "query",
            "description": "Actual total weight of trailers with their payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailersCount",
            "in": "query",
            "description": "Number of trailers, 0...4. For toll cost and truck restrictions. 0=no trailer, 1=one or more trailers, 2=two or more trailers, 3=three or more trailers. For truck restrictions: 4=one or more semi-trailers.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnelCategory",
            "in": "query",
            "description": "Defines the tunnel categories the truck must NOT use. B, C, D or E. A tunnels have no restrictions. E tunnels have most restrictions. If C is defined, the route will use A and B tunnels but not C, D or E.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleNumberAxles",
            "in": "query",
            "description": "Number of axles excluding trailers. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload, but not trailers' weight or payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxle",
            "in": "query",
            "description": "Actual total weight per axle, incl. payload. 7.5t or 7500kg or 16500lbs. For toll cost and truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxleGroup",
            "in": "query",
            "description": "Semicolon separated list of vehicle weight [tons] per axle group. Each item is a tuple (name,value). Supported names are drive, single, tandem, triple, quad, quint. Example: &weightPerAxleGroup=drive:12;single:11;tandem:18",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Start location. Syntax like a routing waypoint. Either start or destionation must be specified",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination",
            "in": "query",
            "description": "Destination location. Syntax like a routing waypoint. Either start or destionation must be specified",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rangeType",
            "in": "query",
            "description": "time, distance or consumption",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "range",
            "in": "query",
            "description": "Comma seperated list of ranges. For time: seconds, for distance: meters, for consumption: cost (in either specified currency unit or in the same unit like the consumptiondetails or driver/vehicle cost). Up to 10 isolines are supported.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure",
            "in": "query",
            "description": "Format: now, yyyy-MM-dd'T'HH:mm:ss or yyyy-MM-dd'T'HH:mm:ssX. Default: Ignore all time dependent access restrictions. If no timezone is specified, then the local timezone at the route start link is used.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "arrival",
            "in": "query",
            "description": "Format: Like depature. Use for reverse isoline (destination specified)",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "fastest;car[;traffic:disabled][;optional parameters...] Traffic can be disabled or enabled (real time + traffic pattern usage), default disabled. As optional parameters motorway (0, -1, -2, -3) and tollroad (0, -1, -2, -3) can follow. See chapter 'Vehicle Types and Measures' for supported vehicle types.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customConsumptionDetails",
            "in": "query",
            "description": "Semicolon separated list of speed/ascent/descent/builtupFactor fuel consumption parameters. Speed is a list of $/km for different speeds. Ascent/descent are additional $/km per altitude climbed or descended. Builtup factor is an optional heuristic consumption multiplier for urban area, default value is 1.55. Cost unit is not $ but 'currency'. Example: speed,0,0.102,10,0.084,30,0.066,50,0.06,70,0.066,100,0.072,120,0.084,140,0.108; ascent,0.4; descent,0.1; builtupFactor,1.4 = at 70 kph the car consumes 6$/100km and 0.4$/km altitude climbed, consumption increases 40% in urban area. Alternatively, user can specify default consumption profile: 3.5t, 7.5t, 18t, 40t or weightDependent. In case of the weightDependent consumption profiles will be decided based on the limitedWeight so this parameter also needs to be specified.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isolineAttributes",
            "in": "query",
            "description": "links or shape or links,shape",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overlays",
            "in": "query",
            "description": "Overlay map name. Case insensitive. Must start with OVERLAY and contain only characters.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "speedFcCat",
            "in": "query",
            "description": "Comma separated list of speeds driven in kilometer per hour per road functional class (1-5 + Virtual Connections VC) and speed category (1-8) (f.e. FC1-SC1,FC1-SC2,...,FC1-SC8;FC2-SC1,FC2-SC2,...;...;VC-SC1,FC-SC2,...VC-SC8). Functional classes are semicolon separated. Can contain empty entries (no change to default f.e. 80,76,,,,,,;,,,54,46,,,;...). Overrides router's default driven speed values.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Optional (default=whole world excl. JPN, CHN, SK). Map coverage region, e.g. APAC, AUS, WEU, IND, MEA, NA, SAM, TWN, JPN. The region may contain hints to distinguish specific content. E.g. there can be an WEU and PCBEU, where the 2nd map contains only Postal Code Boundary layers. If not specified, the service will find the region(s) automatically, that cover the request. The parameter can contain a comma separated list of regions (f.e. WEU,MEA). If the region parameter is specified, the service will use these region(s) and skip region(s) that may also cover the response (f.e. EEU). Except of JPN, specifying a region is strongly discouraged, because regions might change and hence applications that specify a region might stop working when the region gets discontinued, renamed, split or changed otherwise. As the APAC region contains a simplified entry map content of JPN, JPN needs to be specified as region to access the full JPN content.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/IsolineResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/calculateroute.json": {
      "get": {
        "tags": [
          "Routing Extensions & Route Matching"
        ],
        "summary": "Calculates a route with additional fleet telematics features",
        "description": "Calculates a route with additional fleet telematics features.\r\nThis resource provides a similar interface as the Routing REST API.\r\nNote: If using the cre.api.here.com endpoint, then requests that don't need specific features may get redirected to the Routing REST API. This doesn't happen when using the fleet.api.here.com endpoint.",
        "operationId": "calculateRouteUsingGET",
        "parameters": [
          {
            "name": "ISO3Country",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ISO3Language",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commercial",
            "in": "query",
            "description": "1=vehicle registered for commercial use, 0=otherwise. For toll cost, environmental zone regulations and delivery-only zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabledEquipped",
            "in": "query",
            "description": "1=vehicle equipped to carry disabled people, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayCountry",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayLanguage",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayName",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayScript",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayVariant",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionType",
            "in": "query",
            "description": "1=EURO I, 2=EURO II, 3=EURO III, 4=EURO IV, 5=EURO V, 6=EURO VI, 7=EURO EEV, 8=Electric Vehicles. For toll cost and environmental zone restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionTypeForEnvZones",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "extensionKeys",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fuelAndEmissionType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelType",
            "in": "query",
            "description": "Defines the fuel powering the vehicle. Can be Diesel, Petrol, LPG, LNG, CNG, Ethanol, Propane, Hydrogen, Electric. (LPG=Liquefied Petroleum Gas,  LNG=Liquefied Natural Gas). Used f.e. for environmental zone restrictions, toll cost calculation, consumption based routing for Electric vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "heightAbove1stAxle",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hybrid",
            "in": "query",
            "description": "1=fuel+electric, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jsonCallback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitedWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload and trailers/caravan incl. their payload. 7.5t or 7500kg or 16500lbs. For truck restrictions, speed profile, toll cost and environmental zone restrictions. See also vehicleWeight. Note that country wide weight restrictions depend on the number of axles and trailers as well, so it might be necessary to specify tem as well.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numericFuelType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "passengersCount",
            "in": "query",
            "description": "actual number of passengers. For toll cost. See also vehicle type carHOV.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "script",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedHazardousGoods",
            "in": "query",
            "description": "Comma separated list from explosive, gas, flammable, combustible, organic, poison, radioActive, corrosive, poisonousInhalation, harmfulToWater, other, allhazardousGoods, explosiveFlammable. For toll cost (only explosive and other) and for truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tiresCount",
            "in": "query",
            "description": "Number of tires. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerHeight",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerNumberAxles",
            "in": "query",
            "description": "Number of trailer axles. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerType",
            "in": "query",
            "description": "0=None, 1=Caravan, 2=Trailer, 3=RVTrailer, 4=BoatTrailer. For toll cost and recreational vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerWeight",
            "in": "query",
            "description": "Actual total weight of trailers with their payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailersCount",
            "in": "query",
            "description": "Number of trailers, 0...4. For toll cost and truck restrictions. 0=no trailer, 1=one or more trailers, 2=two or more trailers, 3=three or more trailers. For truck restrictions: 4=one or more semi-trailers.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnelCategory",
            "in": "query",
            "description": "Defines the tunnel categories the truck must NOT use. B, C, D or E. A tunnels have no restrictions. E tunnels have most restrictions. If C is defined, the route will use A and B tunnels but not C, D or E.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unicodeLocaleAttributes",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "unicodeLocaleKeys",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "variant",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleNumberAxles",
            "in": "query",
            "description": "Number of axles excluding trailers. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload, but not trailers' weight or payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "waypoint0 ... waypointN",
            "in": "query",
            "description": "Comma separated waypoint latitude, longitude in WGS-84 degree. The coordinates may be directly followed by ;transitRadius;label;heading[;optional specifications]. \r\nA route must consist of at least 2 waypoints (start and destination). The coordinates may be directly followed by ;transitRadius;label;heading. \r\nThe maximum number of waypoints is limited. However, this limit is not a fixed number but is a result of the limit for the overall processing time. \r\nSet a transit radius to only influence the route to go via a certain city (Example: &waypoint1=50.12,8.65;10000). \r\nSet a heading (degree clockwise from North) to improve map matching (Example: latitude,longitude;;;140). \r\nTo define a loading time or delay time at a waypoint, use stopOver[,timeInSeconds]! (Example: &waypoint1=stopOver,300!50.12,8.65). \r\nThe optional specifications altitude, custom label, !StreetPosition and !LinkPosition, ignoreRestriction are currently supported.\r\nTo define a radius around the waypoint where vehicle restrictions should be ignored use optional specification ';ignoreRestriction:radius[,drivePenalty[,type[,entryPenalty]]]. Example: &waypoint1=50.12,8.65;ignoreRestriction:8000,0.9,all,1800 . \r\nThis is similar to the global parameter 'ignoreWaypointVehicleRestriction' which applies to all waypoint. But when specified explicitly for a waypoint, the 'ignoreRestriction' specification of waypoint is applied. \r\nWaypoints can have opening and closing times, can be unsorted or optional. Details are in Key Concepts / Waypoint sorting, optional Pickup and Opening Times",
            "required": true,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxle",
            "in": "query",
            "description": "Actual total weight per axle, incl. payload. 7.5t or 7500kg or 16500lbs. For toll cost and truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxleGroup",
            "in": "query",
            "description": "Semicolon separated list of vehicle weight [tons] per axle group. Each item is a tuple (name,value). Supported names are drive, single, tandem, triple, quad, quint. Example: &weightPerAxleGroup=drive:12;single:11;tandem:18",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "driver_cost",
            "in": "query",
            "description": "Cost per hour in target currency.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicle_cost",
            "in": "query",
            "description": "Cost per kilometer in target currency.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleCostOnFerry",
            "in": "query",
            "description": "Cost per kilometer on ferry in target currency. Default = vehicle_cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "3 letter ISO currency symbol, like EUR or USD. Required if toll cost must be added up across different currencies and/or be added to driver/vehicle/fuel cost in different currencies.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Optional (default=whole world excl. JPN, CHN, SK). Map coverage region, e.g. APAC, AUS, WEU, IND, MEA, NA, SAM, TWN, JPN. The region may contain hints to distinguish specific content. E.g. there can be an WEU and PCBEU, where the 2nd map contains only Postal Code Boundary layers. If not specified, the service will find the region(s) automatically, that cover the request. The parameter can contain a comma separated list of regions (f.e. WEU,MEA). If the region parameter is specified, the service will use these region(s) and skip region(s) that may also cover the response (f.e. EEU). Except of JPN, specifying a region is strongly discouraged, because regions might change and hence applications that specify a region might stop working when the region gets discontinued, renamed, split or changed otherwise. As the APAC region contains a simplified entry map content of JPN, JPN needs to be specified as region to access the full JPN content.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure",
            "in": "query",
            "description": "Format: now, yyyy-MM-dd'T'HH:mm:ss or yyyy-MM-dd'T'HH:mm:ssX. If no timezone is specified, then the local timezone at the route start link is used. Default: Ignore all time dependent access restrictions. Special values: ignoreTimeDepRestr (like default), obeyTimeDepRestr (all time dependent restrictions apply).",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tollVehicleType",
            "in": "query",
            "description": "1=Motorcycle, 2=Auto, 3=Truck, 4=Motor home, 5=Minibus, 6=Bus, 7=Motorcycle Sidecar(EU), 8=Tricycle(EU), 9=Delivery Truck(EU+India), 10=Snowmobile(US), 11=Pick-up(US+India), 12=Tractor(US+India), 13=Taxi, 14=HCM/EME (India Heavy Construction Machinery/Earth Moving Equipment)",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overlays",
            "in": "query",
            "description": "Overlay map name. Case insensitive. Must start with OVERLAY and contain only characters.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "fastest;car;traffic:disabled;[optional parameters] As optional parameters motorway (0, -1, -2, -3), tollroad (0, -1, -2, -3), boatFerry (0, -1, -2, -3), railFerry (0, -1, -2, -3), and tunnel (0, -1, -2, -3) can follow. \"shortest\" and \"balanced\" are not supported but can be individually tuned using &driver_cost and &vehicle_cost. Vehicle types: bdouble, bicycle, bus, car, carHOV, custom1, emergency, motorcycle, pedestrian, roadtrain, taxi, truck",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restTimes",
            "in": "query",
            "description": "Legal drive/rest intervals. Specify 'local' to obey the legal driver rest times of the respective country. If the driver is not fresh then add ,TimeAlreadyDrivenSinceLastShortBreak,TimeAlreadyDrivenSinceLastLongRest in seconds. Alternatively, proprietary values can be set for DriveTimeUntilShortBreak, ElapsedTimeUntilShortBreak, ShortBreakDuration, DriveTimeUntilLongRest, ElapsedTimeUntilLongBreak, LongRestDuration. E.g. EU requires after 4.5h a 45min break + after 9h an 11h rest.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language for the maneuver instructions in the response. Currently de-de, en-us, it-it, fr-fr, es-es, pt-pt, pl-pl, zh-cn, zh-tw, zh-hk and ja-jp are supported. If not specified, en-us is used.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidLinks",
            "in": "query",
            "description": "Comma separated list of link ids or lat,lon[;heading] coordinates to be avoided. Positive ids are not driven from reference node, negative ids are not driven towards reference node. Use '*' prefix to avoid both directions. For coordinates direction of blocking depends on the heading. If no heading given both directions will be avoided.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidAreas",
            "in": "query",
            "description": "List of areas (rectangles or polygons) to be avoided. Areas are separated by '!'. Rectangles can be specified with two diagonal coordinates separated by ';', e.g. latMax,lonMin;latMin,lonMax. Polygons are specified with consecutive vertex coordinates separated by ';', e.g. lat1,lon1;lat2,lon2;lat3,lon3;... . Optionally an entry penalty (applied once while entering the area) and drive penalty (applied to every link driven inside the area) can be specified individually for each area to be avoided, format: 'polygon1Coords[;penalty:entryPenaltySec[,drivePenaltyFactor]]!polygon2Coords[;penalty:entryPenaltySec[,drivePenaltyFactor]]'. entryPenalty should be between -120 and 600 (-ve penalty implies prefer), drivePenaltyFactor should be between 0.1 and 20.0 (1.0 implies no penalty, < 1.0 implies prefer). e.g. poly1lat1,poly1lon1,poly1lat2,poly1lon2,poly1lat3,poly1lon3;penalty:60,1.5!poly2lat1,poly2lon1,poly2lat2,poly2lon2,poly2lat3,poly2lon3;penalty:-100,0.5 .",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "arrival",
            "in": "query",
            "description": "Format like departure. Use this to find out when you have to start the journey to arrive at the given time. Note that toll cost is not considered when arrival time is specified.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rollups",
            "in": "query",
            "description": "Comma separated list of rollups (groupings, aggregation levels) in the result. Currently supported rollups are none (per link details), total (totals), tollsys (per toll system summaries), country (per country summaries), country;tollsys (per country and toll system summaries). Example: &rollups=none,country;tollsys,country returns the cost details and 2 different summaries.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "speedFcCat",
            "in": "query",
            "description": "Comma separated list of speeds driven in kilometer per hour per road functional class (1-5 + Virtual Connections VC) and speed category (1-8) (f.e. FC1-SC1,FC1-SC2,...,FC1-SC8;FC2-SC1,FC2-SC2,...;...;VC-SC1,FC-SC2,...VC-SC8). Functional classes are semicolon separated. Can contain empty entries (no change to default f.e. 80,76,,,,,,;,,,54,46,,,;...). Overrides router's default driven speed values. Also one of the predefined profiles can be activated by value car, light-truck, medium-truck or heavy-truck",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeAttributes",
            "in": "query",
            "description": "Defines which information is included in the response route part of the calculated route. Defaults to mode (mo), waypoints (wp), summary (sm), flags (fl). Also supported: speedProfile (sp), shape (sh), summaryByCountry (sc), boundingBox (bb), none. Can be excluded in the response by putting a hyphen in the front. e.g. -wp",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the calculated route. Defaults to warnings (wn). Also supported: language (lg), none. Can be excluded in the response by putting a hyphen in the front. e.g. -wn",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metaAttributes",
            "in": "query",
            "description": "Defines which information is included in the meta part of the calculated route. Defaults to none. Also supported: version (ver), coverage (cov). Can be excluded in the response by putting a hyphen in the front. e.g. -ver",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maneuverAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the data representation of the route maneuvers. Defaults to position (po), length (le), travelTime (tt). Also supported: direction (di), action (ac), indices (ix), lanes (ln), roadName(rn), nextRoadName (nr), beforeAfter (ba) and none.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the route legs. Defaults to links (li), maneuvers (mn), length (le), travelTime (tt), baseTime (bt), trafficTime (tm). Also supported: shape (sh), boundingBox (bb), turnbyturnmaneuvers (mm), none. Can be excluded in the response by putting a hyphen in the front. e.g. -mn. Also in RouteMatch mode legAttributes=mn is supported.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkAttributes",
            "in": "query",
            "description": "Define optional attributes to be returned for each link. Defaults to shape (sh), length (le), remainTime (rt), remainDistance (rd), functionalClass (fc), warnings (wn), confidence (cd). Also supported: cost (co), maneuver (ma), timezone (tz), none. Can be excluded in the response by putting a hyphen in the front. e.g. -ma",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "traverseGates",
            "in": "query",
            "description": "Assume the driver has keys/permissions to traverse gates, if \"true\". Default = don't traverse any gates unless vehicle type is emergency.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeMatch",
            "in": "query",
            "description": "Default: Compute a legal route that goes through all way points. 1 = treat the waypoints (or trace file POST body) as GPS trace and return the most probable route along this trace. 2 = ETA Tracking mode, compute the route and take the POST body GPS trace into account to detect taken driver rest times and reached/skipped waypoints. To get maneuvers for a matched route specify &legAttributes=mn.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legal",
            "in": "query",
            "description": "For routeMatch=1. Enforces a legal route w.r.t. the listed maneuver types. Support maneuver types (comma separated list): access,gate,oneway,thrutraf,turn. Passing all of them yields a legal route as from a router. access=use only links allowed for the vehicle type (incl. truck measures). gate=don't traverse gates. oneway=don't drive links into forbidden direction. thrutraf=don't enter+leaving 'no through traffic' zones. turn=don't turn/u-turn illegally. Default: avoid illegal maneuvers, but use them if the trace obviously used them. If used, return respective warnings.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "Comma separated list of PDE layer names, to get link attributes along the route. Only link attribute layers (roughly those ending in _FC1, _FC2 ... ) are supported. Specify FCn to get the layers of all functional classes. Behind each layer name attributes can be listed, or (*) to get all. Example: &attributes=ROAD_GEOM_FCn(TUNNEL), SPEED_LIMITS_FCn (FROM_REF_SPEED_LIMIT, TO_REF_SPEED_LIMIT), ADAS_ATTRIB_FCn (SLOPES). A maximum of 32 layers can be requested per request.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tollPass",
            "in": "query",
            "description": "Comma separated list of owned passes: Senior_Pass, transponder (the car has all transponders), noTransponder (have no transponder and use no system that requires one), allPasses, Annual, Nr_of_Days, Nr_of_Months (meaning the car has all passes valid for this number of months), AutoPass, SunPass, E-Z Pass (last 2 are examples for real toll transponders). Can also list toll system ids or toll booth condition ids. Allows traversal of 'transponder-only' toll booths, allows cost free traversal of certain toll sections and allows using cheaper prices for transponder/pass owners.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "capacity",
            "in": "query",
            "description": "Comma separated list of numeric truck capacity limits. E.g. 8,25,6 for max. 8t payload and max. 25 square meter floor space and max 6 passengers. Must match the 'load' values of way points. For unsorted or optional way points.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customConsumptionDetails",
            "in": "query",
            "description": "Semicolon separated list of speed/ascent/descent/builtupFactor/auxilliaryConsumption fuel consumption parameters. Speed is a list of $/km for different speeds. Ascent/descent are additional $/km per altitude climbed or descended. Builtup factor is an optional heuristic consumption multiplier for urban area, default value is 1.55. auxilliaryConsumption is the additional consumption (per hour) for running auxilliary units (climate control, infotainment, lights, etc.). Cost unit is not $ but 'currency'. Example: speed,0,0.102,10,0.084,30,0.066,50,0.06,70,0.066,100,0.072,120,0.084,140,0.108; ascent,0.4; descent,0.1; builtupFactor,1.4 = at 70 kph the car consumes 6.6$/100km and 0.4$/km altitude climbed, consumption increases 40% in urban area. Alternatively, user can specify default consumption profile: 3.5t, 7.5t, 18t, 40t or weightDependent. In case of the weightDependent consumption profiles will be decided based on the limitedWeight so this parameter also needs to be specified.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alternatives",
            "in": "query",
            "description": "Maximum number of alternative route options to return. Can return less or no alternatives. Only returns route alternatives that significantly differ from the best route but are not much more costly.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeout",
            "in": "query",
            "description": "Routing calculation must be finished within this amount of milliseconds. Default 50000. Maximum 50000.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreWaypointVehicleRestriction",
            "in": "query",
            "description": "Format: radius[;drivePenaltyFactor[;type[;entryPenalty]]]. radius: in meters around a waypoint to ignore various vehicle restrictions (vehicle type, admin truck, time-based) if necessary. drivePenaltyFactor: (cost multiplier 0...10) to control how strict to avoid restrictions. type: restrictions types (time based restrictions/all permanent restriction) to be ignored, accepted values are: all/allTimed. entryPenalty: penalty in seconds (0....7200) applied once while ignoring each restriction type (like entering a 'no through traffic' or entering a 'admin truck restricted' area). Example1: ignoreWaypointVehicleRestriction=2000. Example2: ignoreWaypointVehicleRestriction=2000;;allTimed . Example3: ignoreWaypointVehicleRestriction=5000;0.9;all;1800 .",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxSpeed",
            "in": "query",
            "description": "Maximum speed allowed for the whole routing. Supported units are kmh (kilometres per hour), mph (miles per hour) and mps (metres per second). If no unit is provided, kmh will be used as default unit.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alignToGpsTime",
            "in": "query",
            "description": "Route matching tries to align the driving time to the GPS timestamps. On per default. Set to 0 to switch it off.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customAttributes",
            "in": "query",
            "description": "Comma separated list of CLE layer names, to get link attributes along the route. Format follows the 'attribute' parameter. No FCn notation supported",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mapMatchRadius",
            "in": "query",
            "description": "Maximum adaptive map match search radius [meter]. Will be applied to each way point. If given it overrides waypoints' transitRadius values and the default maximum adatpive search radius. For routing, default 1600. Limit 5000.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeCountries",
            "in": "query",
            "description": "excludeCountries",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeZoneTypes",
            "in": "query",
            "description": "Checks if a route may enter a zone. Currently supported values: environmental,vignette and congestionPricing. If omitted or empty, zone restrictions are not taken into account. Not supported for route matching.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requestId",
            "in": "query",
            "description": "Mirrored RequestId value from the request structure. Used to trace requests.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instructionFormat",
            "in": "query",
            "description": "Defines the representation format of the maneuver's instruction text. Supported formats are text|html",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "oneway",
            "in": "query",
            "description": "Default: Obey oneways. 'penalty:0.5' allows oneway violation if the time benefit is more than 0.5 sec/meter. For bicycle recommended value 0.125, for emergencies 0.5. Not allowed for other vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "drivingReport",
            "in": "query",
            "description": "Defines whether driving report is added to the route match response. Set to 1 to switch it on. Turned off by default.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignorePreferredRoutes",
            "in": "query",
            "description": "Preferred routes for a specific vehicle type, are taken by default. To turn if off set ignorePreferredRoutes to true.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidTurns",
            "in": "query",
            "description": "Comma separated list of elements like left[;minAngleDegree;penaltySec] or right... or uTurn[;penaltySec] if a left/right turn is sharper than the specified angle (0...180) then the given time penalty is applied. uTurnAtWaypoint avoids u-turning on the link directly where the waypoint was reached.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreZeroSpeedPoints",
            "in": "query",
            "description": "Only for route matching. Default = consider all points. 1 = ignore trace points that have zero speed (only in traces that provide speed but not time).",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wpDist",
            "in": "query",
            "description": "Only for route matching. 0 = default value, feature is disabled. 1 = return spatial distance between matched trace points. 2 = return spatial distance between original trace points",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chargingStationFilters",
            "in": "query",
            "description": "URL Encoded comma separated list of charging stations to filter out the electric vehicle charging stations, along the route.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "makeReachable",
            "in": "query",
            "description": "A route will be returned even there are not sufficient fuel/EV-charging stations along the route consumption/energy details if this parameter is set to true. Default = false.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellularSignals",
            "in": "query",
            "description": "cellularSignals",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plannedWaypointReachTolerance",
            "in": "query",
            "description": "Only for routeMatch=2 with learned stops. Default = 20000 meter. If the trace gets closer then the learned stop is considered reached",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customRestrLimit",
            "in": "query",
            "description": "Comma separated list of key value pairs of custom restriction limits. The key and value of individual custom restriction limit must be numeric and must be separated by colon. Example: 0:10,1:20,2:50",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "evPoiLayer",
            "in": "query",
            "description": "Name of the layer which will be used to find the Electric Charging Stations along the route for Electric Vehicle Routing",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeMatch2PlannedWayPointReachRadius",
            "in": "query",
            "description": "Only for routeMatch=2. If vehicle apporaches a planned waypoint closer than this then the waypoint is considered reached. Default 20000.0m.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreWaypointsFarFromNeighbors",
            "in": "query",
            "description": "Only for routeMatch> 0. Default true. If false then doesn't ignore a trace point when it is much further away from its neighbors than the usual distances in the trace",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wayPointHeadingMismatchPenaltyFactor",
            "in": "query",
            "description": "Tie waypoints closer to links where the GPS heading matches the link's heading, and try harder to meet waypoints in the given driving direction. Default = 1.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidPrivate",
            "in": "query",
            "description": "Use private streets for routing. Set to 1 to always allow it or -1 to always forbid it. Default is 0 - access is allowed if there is a waypoint in the private street.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "licensePlate",
            "in": "query",
            "description": "Licenseplate of the vehicle. The vehicles registration number can influence the permission to drive in certain zones, mostly environmental zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "adminTruckRestrictions",
            "in": "query",
            "description": "Per default admin wide truck restrictions are obeyed. 'ignore' ignores them.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mapMatchTolerance",
            "in": "query",
            "description": "Map match tolerance [meter]. Will be applied to each way point. Routing can meet the waypoint on all links that are that much further away from the coordinate than the nearest. Default 3.0.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "privateChargingStation",
            "in": "query",
            "description": "If true then private charging stations will be considered during routing. Default is false.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "costPerConsumptionUnit",
            "in": "query",
            "description": "The cost of a consumption unit in targetCurrency. Default is 1.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restTimeDriverCost",
            "in": "query",
            "description": "Cost per hour in target currency while driver is taking a legal rest time. Can be between 0 and driver_cost value.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidFeatures",
            "in": "query",
            "description": "Comma separated list of road features to be avoided. Currently supported: unpaved[;300;50]. Avoids unpaved roads by the specified seconds to enter (Entry penalty) and seconds/km driven (drive peanlty), or a default penalty",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "truckVerified",
            "in": "query",
            "description": "Make use of truck verified roads for truck routing. Set to 1 to prefer transport verified roads, -1 to avoid them. Default is 0 - access is allowed, but truck verified routes are not prefered or avoided.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricSystem",
            "in": "query",
            "description": "Set to 'imperial' to receive guidance instruction distances in miles. Default = metric.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string"
              },
              "encoding": {
                "file": {
                  "contentType": "text/plain"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Routing Extensions & Route Matching"
        ],
        "summary": "Calculates a route with additional fleet telematics features",
        "description": "Calculates a route with additional fleet telematics features.\r\nThis resource provides a similar interface as the Routing REST API.\r\nNote: If using the cre.api.here.com endpoint, then requests that don't need specific features may get redirected to the Routing REST API. This doesn't happen when using the fleet.api.here.com endpoint.",
        "operationId": "calculateRouteUsingPOST",
        "parameters": [
          {
            "name": "ISO3Country",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ISO3Language",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commercial",
            "in": "query",
            "description": "1=vehicle registered for commercial use, 0=otherwise. For toll cost, environmental zone regulations and delivery-only zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabledEquipped",
            "in": "query",
            "description": "1=vehicle equipped to carry disabled people, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayCountry",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayLanguage",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayName",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayScript",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayVariant",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionType",
            "in": "query",
            "description": "1=EURO I, 2=EURO II, 3=EURO III, 4=EURO IV, 5=EURO V, 6=EURO VI, 7=EURO EEV, 8=Electric Vehicles. For toll cost and environmental zone restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionTypeForEnvZones",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "extensionKeys",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fuelAndEmissionType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelType",
            "in": "query",
            "description": "Defines the fuel powering the vehicle. Can be Diesel, Petrol, LPG, LNG, CNG, Ethanol, Propane, Hydrogen, Electric. (LPG=Liquefied Petroleum Gas,  LNG=Liquefied Natural Gas). Used f.e. for environmental zone restrictions, toll cost calculation, consumption based routing for Electric vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "heightAbove1stAxle",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hybrid",
            "in": "query",
            "description": "1=fuel+electric, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jsonCallback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitedWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload and trailers/caravan incl. their payload. 7.5t or 7500kg or 16500lbs. For truck restrictions, speed profile, toll cost and environmental zone restrictions. See also vehicleWeight. Note that country wide weight restrictions depend on the number of axles and trailers as well, so it might be necessary to specify tem as well.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numericFuelType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "passengersCount",
            "in": "query",
            "description": "actual number of passengers. For toll cost. See also vehicle type carHOV.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "script",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedHazardousGoods",
            "in": "query",
            "description": "Comma separated list from explosive, gas, flammable, combustible, organic, poison, radioActive, corrosive, poisonousInhalation, harmfulToWater, other, allhazardousGoods, explosiveFlammable. For toll cost (only explosive and other) and for truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tiresCount",
            "in": "query",
            "description": "Number of tires. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerHeight",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerNumberAxles",
            "in": "query",
            "description": "Number of trailer axles. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerType",
            "in": "query",
            "description": "0=None, 1=Caravan, 2=Trailer, 3=RVTrailer, 4=BoatTrailer. For toll cost and recreational vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerWeight",
            "in": "query",
            "description": "Actual total weight of trailers with their payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailersCount",
            "in": "query",
            "description": "Number of trailers, 0...4. For toll cost and truck restrictions. 0=no trailer, 1=one or more trailers, 2=two or more trailers, 3=three or more trailers. For truck restrictions: 4=one or more semi-trailers.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnelCategory",
            "in": "query",
            "description": "Defines the tunnel categories the truck must NOT use. B, C, D or E. A tunnels have no restrictions. E tunnels have most restrictions. If C is defined, the route will use A and B tunnels but not C, D or E.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unicodeLocaleAttributes",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "unicodeLocaleKeys",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "variant",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleNumberAxles",
            "in": "query",
            "description": "Number of axles excluding trailers. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload, but not trailers' weight or payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "waypoint0 ... waypointN",
            "in": "query",
            "description": "Comma separated waypoint latitude, longitude in WGS-84 degree. The coordinates may be directly followed by ;transitRadius;label;heading[;optional specifications]. \r\nA route must consist of at least 2 waypoints (start and destination). The coordinates may be directly followed by ;transitRadius;label;heading. \r\nThe maximum number of waypoints is limited. However, this limit is not a fixed number but is a result of the limit for the overall processing time. \r\nSet a transit radius to only influence the route to go via a certain city (Example: &waypoint1=50.12,8.65;10000). \r\nSet a heading (degree clockwise from North) to improve map matching (Example: latitude,longitude;;;140). \r\nTo define a loading time or delay time at a waypoint, use stopOver[,timeInSeconds]! (Example: &waypoint1=stopOver,300!50.12,8.65). \r\nThe optional specifications altitude, custom label, !StreetPosition and !LinkPosition, ignoreRestriction are currently supported.\r\nTo define a radius around the waypoint where vehicle restrictions should be ignored use optional specification ';ignoreRestriction:radius[,drivePenalty[,type[,entryPenalty]]]. Example: &waypoint1=50.12,8.65;ignoreRestriction:8000,0.9,all,1800 . \r\nThis is similar to the global parameter 'ignoreWaypointVehicleRestriction' which applies to all waypoint. But when specified explicitly for a waypoint, the 'ignoreRestriction' specification of waypoint is applied. \r\nWaypoints can have opening and closing times, can be unsorted or optional. Details are in Key Concepts / Waypoint sorting, optional Pickup and Opening Times",
            "required": true,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxle",
            "in": "query",
            "description": "Actual total weight per axle, incl. payload. 7.5t or 7500kg or 16500lbs. For toll cost and truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxleGroup",
            "in": "query",
            "description": "Semicolon separated list of vehicle weight [tons] per axle group. Each item is a tuple (name,value). Supported names are drive, single, tandem, triple, quad, quint. Example: &weightPerAxleGroup=drive:12;single:11;tandem:18",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "driver_cost",
            "in": "query",
            "description": "Cost per hour in target currency.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicle_cost",
            "in": "query",
            "description": "Cost per kilometer in target currency.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleCostOnFerry",
            "in": "query",
            "description": "Cost per kilometer on ferry in target currency. Default = vehicle_cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "3 letter ISO currency symbol, like EUR or USD. Required if toll cost must be added up across different currencies and/or be added to driver/vehicle/fuel cost in different currencies.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Optional (default=whole world excl. JPN, CHN, SK). Map coverage region, e.g. APAC, AUS, WEU, IND, MEA, NA, SAM, TWN, JPN. The region may contain hints to distinguish specific content. E.g. there can be an WEU and PCBEU, where the 2nd map contains only Postal Code Boundary layers. If not specified, the service will find the region(s) automatically, that cover the request. The parameter can contain a comma separated list of regions (f.e. WEU,MEA). If the region parameter is specified, the service will use these region(s) and skip region(s) that may also cover the response (f.e. EEU). Except of JPN, specifying a region is strongly discouraged, because regions might change and hence applications that specify a region might stop working when the region gets discontinued, renamed, split or changed otherwise. As the APAC region contains a simplified entry map content of JPN, JPN needs to be specified as region to access the full JPN content.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure",
            "in": "query",
            "description": "Format: now, yyyy-MM-dd'T'HH:mm:ss or yyyy-MM-dd'T'HH:mm:ssX. If no timezone is specified, then the local timezone at the route start link is used. Default: Ignore all time dependent access restrictions. Special values: ignoreTimeDepRestr (like default), obeyTimeDepRestr (all time dependent restrictions apply).",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tollVehicleType",
            "in": "query",
            "description": "1=Motorcycle, 2=Auto, 3=Truck, 4=Motor home, 5=Minibus, 6=Bus, 7=Motorcycle Sidecar(EU), 8=Tricycle(EU), 9=Delivery Truck(EU+India), 10=Snowmobile(US), 11=Pick-up(US+India), 12=Tractor(US+India), 13=Taxi, 14=HCM/EME (India Heavy Construction Machinery/Earth Moving Equipment)",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overlays",
            "in": "query",
            "description": "Overlay map name. Case insensitive. Must start with OVERLAY and contain only characters.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "fastest;car;traffic:disabled;[optional parameters] As optional parameters motorway (0, -1, -2, -3), tollroad (0, -1, -2, -3), boatFerry (0, -1, -2, -3), railFerry (0, -1, -2, -3), and tunnel (0, -1, -2, -3) can follow. \"shortest\" and \"balanced\" are not supported but can be individually tuned using &driver_cost and &vehicle_cost. Vehicle types: bdouble, bicycle, bus, car, carHOV, custom1, emergency, motorcycle, pedestrian, roadtrain, taxi, truck",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restTimes",
            "in": "query",
            "description": "Legal drive/rest intervals. Specify 'local' to obey the legal driver rest times of the respective country. If the driver is not fresh then add ,TimeAlreadyDrivenSinceLastShortBreak,TimeAlreadyDrivenSinceLastLongRest in seconds. Alternatively, proprietary values can be set for DriveTimeUntilShortBreak, ElapsedTimeUntilShortBreak, ShortBreakDuration, DriveTimeUntilLongRest, ElapsedTimeUntilLongBreak, LongRestDuration. E.g. EU requires after 4.5h a 45min break + after 9h an 11h rest.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language for the maneuver instructions in the response. Currently de-de, en-us, it-it, fr-fr, es-es, pt-pt, pl-pl, zh-cn, zh-tw, zh-hk and ja-jp are supported. If not specified, en-us is used.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidLinks",
            "in": "query",
            "description": "Comma separated list of link ids or lat,lon[;heading] coordinates to be avoided. Positive ids are not driven from reference node, negative ids are not driven towards reference node. Use '*' prefix to avoid both directions. For coordinates direction of blocking depends on the heading. If no heading given both directions will be avoided.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidAreas",
            "in": "query",
            "description": "List of areas (rectangles or polygons) to be avoided. Areas are separated by '!'. Rectangles can be specified with two diagonal coordinates separated by ';', e.g. latMax,lonMin;latMin,lonMax. Polygons are specified with consecutive vertex coordinates separated by ';', e.g. lat1,lon1;lat2,lon2;lat3,lon3;... . Optionally an entry penalty (applied once while entering the area) and drive penalty (applied to every link driven inside the area) can be specified individually for each area to be avoided, format: 'polygon1Coords[;penalty:entryPenaltySec[,drivePenaltyFactor]]!polygon2Coords[;penalty:entryPenaltySec[,drivePenaltyFactor]]'. entryPenalty should be between -120 and 600 (-ve penalty implies prefer), drivePenaltyFactor should be between 0.1 and 20.0 (1.0 implies no penalty, < 1.0 implies prefer). e.g. poly1lat1,poly1lon1,poly1lat2,poly1lon2,poly1lat3,poly1lon3;penalty:60,1.5!poly2lat1,poly2lon1,poly2lat2,poly2lon2,poly2lat3,poly2lon3;penalty:-100,0.5 .",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "arrival",
            "in": "query",
            "description": "Format like departure. Use this to find out when you have to start the journey to arrive at the given time. Note that toll cost is not considered when arrival time is specified.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rollups",
            "in": "query",
            "description": "Comma separated list of rollups (groupings, aggregation levels) in the result. Currently supported rollups are none (per link details), total (totals), tollsys (per toll system summaries), country (per country summaries), country;tollsys (per country and toll system summaries). Example: &rollups=none,country;tollsys,country returns the cost details and 2 different summaries.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "speedFcCat",
            "in": "query",
            "description": "Comma separated list of speeds driven in kilometer per hour per road functional class (1-5 + Virtual Connections VC) and speed category (1-8) (f.e. FC1-SC1,FC1-SC2,...,FC1-SC8;FC2-SC1,FC2-SC2,...;...;VC-SC1,FC-SC2,...VC-SC8). Functional classes are semicolon separated. Can contain empty entries (no change to default f.e. 80,76,,,,,,;,,,54,46,,,;...). Overrides router's default driven speed values. Also one of the predefined profiles can be activated by value car, light-truck, medium-truck or heavy-truck",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeAttributes",
            "in": "query",
            "description": "Defines which information is included in the response route part of the calculated route. Defaults to mode (mo), waypoints (wp), summary (sm), flags (fl). Also supported: speedProfile (sp), shape (sh), summaryByCountry (sc), boundingBox (bb), none. Can be excluded in the response by putting a hyphen in the front. e.g. -wp",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the calculated route. Defaults to warnings (wn). Also supported: language (lg), none. Can be excluded in the response by putting a hyphen in the front. e.g. -wn",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metaAttributes",
            "in": "query",
            "description": "Defines which information is included in the meta part of the calculated route. Defaults to none. Also supported: version (ver), coverage (cov). Can be excluded in the response by putting a hyphen in the front. e.g. -ver",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maneuverAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the data representation of the route maneuvers. Defaults to position (po), length (le), travelTime (tt). Also supported: direction (di), action (ac), indices (ix), lanes (ln), roadName(rn), nextRoadName (nr), beforeAfter (ba) and none.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the route legs. Defaults to links (li), maneuvers (mn), length (le), travelTime (tt), baseTime (bt), trafficTime (tm). Also supported: shape (sh), boundingBox (bb), turnbyturnmaneuvers (mm), none. Can be excluded in the response by putting a hyphen in the front. e.g. -mn. Also in RouteMatch mode legAttributes=mn is supported.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkAttributes",
            "in": "query",
            "description": "Define optional attributes to be returned for each link. Defaults to shape (sh), length (le), remainTime (rt), remainDistance (rd), functionalClass (fc), warnings (wn), confidence (cd). Also supported: cost (co), maneuver (ma), timezone (tz), none. Can be excluded in the response by putting a hyphen in the front. e.g. -ma",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "traverseGates",
            "in": "query",
            "description": "Assume the driver has keys/permissions to traverse gates, if \"true\". Default = don't traverse any gates unless vehicle type is emergency.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeMatch",
            "in": "query",
            "description": "Default: Compute a legal route that goes through all way points. 1 = treat the waypoints (or trace file POST body) as GPS trace and return the most probable route along this trace. 2 = ETA Tracking mode, compute the route and take the POST body GPS trace into account to detect taken driver rest times and reached/skipped waypoints. To get maneuvers for a matched route specify &legAttributes=mn.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legal",
            "in": "query",
            "description": "For routeMatch=1. Enforces a legal route w.r.t. the listed maneuver types. Support maneuver types (comma separated list): access,gate,oneway,thrutraf,turn. Passing all of them yields a legal route as from a router. access=use only links allowed for the vehicle type (incl. truck measures). gate=don't traverse gates. oneway=don't drive links into forbidden direction. thrutraf=don't enter+leaving 'no through traffic' zones. turn=don't turn/u-turn illegally. Default: avoid illegal maneuvers, but use them if the trace obviously used them. If used, return respective warnings.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "Comma separated list of PDE layer names, to get link attributes along the route. Only link attribute layers (roughly those ending in _FC1, _FC2 ... ) are supported. Specify FCn to get the layers of all functional classes. Behind each layer name attributes can be listed, or (*) to get all. Example: &attributes=ROAD_GEOM_FCn(TUNNEL), SPEED_LIMITS_FCn (FROM_REF_SPEED_LIMIT, TO_REF_SPEED_LIMIT), ADAS_ATTRIB_FCn (SLOPES). A maximum of 32 layers can be requested per request.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tollPass",
            "in": "query",
            "description": "Comma separated list of owned passes: Senior_Pass, transponder (the car has all transponders), noTransponder (have no transponder and use no system that requires one), allPasses, Annual, Nr_of_Days, Nr_of_Months (meaning the car has all passes valid for this number of months), AutoPass, SunPass, E-Z Pass (last 2 are examples for real toll transponders). Can also list toll system ids or toll booth condition ids. Allows traversal of 'transponder-only' toll booths, allows cost free traversal of certain toll sections and allows using cheaper prices for transponder/pass owners.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "capacity",
            "in": "query",
            "description": "Comma separated list of numeric truck capacity limits. E.g. 8,25,6 for max. 8t payload and max. 25 square meter floor space and max 6 passengers. Must match the 'load' values of way points. For unsorted or optional way points.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customConsumptionDetails",
            "in": "query",
            "description": "Semicolon separated list of speed/ascent/descent/builtupFactor/auxilliaryConsumption fuel consumption parameters. Speed is a list of $/km for different speeds. Ascent/descent are additional $/km per altitude climbed or descended. Builtup factor is an optional heuristic consumption multiplier for urban area, default value is 1.55. auxilliaryConsumption is the additional consumption (per hour) for running auxilliary units (climate control, infotainment, lights, etc.). Cost unit is not $ but 'currency'. Example: speed,0,0.102,10,0.084,30,0.066,50,0.06,70,0.066,100,0.072,120,0.084,140,0.108; ascent,0.4; descent,0.1; builtupFactor,1.4 = at 70 kph the car consumes 6.6$/100km and 0.4$/km altitude climbed, consumption increases 40% in urban area. Alternatively, user can specify default consumption profile: 3.5t, 7.5t, 18t, 40t or weightDependent. In case of the weightDependent consumption profiles will be decided based on the limitedWeight so this parameter also needs to be specified.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alternatives",
            "in": "query",
            "description": "Maximum number of alternative route options to return. Can return less or no alternatives. Only returns route alternatives that significantly differ from the best route but are not much more costly.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeout",
            "in": "query",
            "description": "Routing calculation must be finished within this amount of milliseconds. Default 50000. Maximum 50000.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreWaypointVehicleRestriction",
            "in": "query",
            "description": "Format: radius[;drivePenaltyFactor[;type[;entryPenalty]]]. radius: in meters around a waypoint to ignore various vehicle restrictions (vehicle type, admin truck, time-based) if necessary. drivePenaltyFactor: (cost multiplier 0...10) to control how strict to avoid restrictions. type: restrictions types (time based restrictions/all permanent restriction) to be ignored, accepted values are: all/allTimed. entryPenalty: penalty in seconds (0....7200) applied once while ignoring each restriction type (like entering a 'no through traffic' or entering a 'admin truck restricted' area). Example1: ignoreWaypointVehicleRestriction=2000. Example2: ignoreWaypointVehicleRestriction=2000;;allTimed . Example3: ignoreWaypointVehicleRestriction=5000;0.9;all;1800 .",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxSpeed",
            "in": "query",
            "description": "Maximum speed allowed for the whole routing. Supported units are kmh (kilometres per hour), mph (miles per hour) and mps (metres per second). If no unit is provided, kmh will be used as default unit.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alignToGpsTime",
            "in": "query",
            "description": "Route matching tries to align the driving time to the GPS timestamps. On per default. Set to 0 to switch it off.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customAttributes",
            "in": "query",
            "description": "Comma separated list of CLE layer names, to get link attributes along the route. Format follows the 'attribute' parameter. No FCn notation supported",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mapMatchRadius",
            "in": "query",
            "description": "Maximum adaptive map match search radius [meter]. Will be applied to each way point. If given it overrides waypoints' transitRadius values and the default maximum adatpive search radius. For routing, default 1600. Limit 5000.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeCountries",
            "in": "query",
            "description": "excludeCountries",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeZoneTypes",
            "in": "query",
            "description": "Checks if a route may enter a zone. Currently supported values: environmental,vignette and congestionPricing. If omitted or empty, zone restrictions are not taken into account. Not supported for route matching.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requestId",
            "in": "query",
            "description": "Mirrored RequestId value from the request structure. Used to trace requests.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instructionFormat",
            "in": "query",
            "description": "Defines the representation format of the maneuver's instruction text. Supported formats are text|html",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "oneway",
            "in": "query",
            "description": "Default: Obey oneways. 'penalty:0.5' allows oneway violation if the time benefit is more than 0.5 sec/meter. For bicycle recommended value 0.125, for emergencies 0.5. Not allowed for other vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "drivingReport",
            "in": "query",
            "description": "Defines whether driving report is added to the route match response. Set to 1 to switch it on. Turned off by default.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignorePreferredRoutes",
            "in": "query",
            "description": "Preferred routes for a specific vehicle type, are taken by default. To turn if off set ignorePreferredRoutes to true.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidTurns",
            "in": "query",
            "description": "Comma separated list of elements like left[;minAngleDegree;penaltySec] or right... or uTurn[;penaltySec] if a left/right turn is sharper than the specified angle (0...180) then the given time penalty is applied. uTurnAtWaypoint avoids u-turning on the link directly where the waypoint was reached.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreZeroSpeedPoints",
            "in": "query",
            "description": "Only for route matching. Default = consider all points. 1 = ignore trace points that have zero speed (only in traces that provide speed but not time).",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wpDist",
            "in": "query",
            "description": "Only for route matching. 0 = default value, feature is disabled. 1 = return spatial distance between matched trace points. 2 = return spatial distance between original trace points",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chargingStationFilters",
            "in": "query",
            "description": "URL Encoded comma separated list of charging stations to filter out the electric vehicle charging stations, along the route.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "makeReachable",
            "in": "query",
            "description": "A route will be returned even there are not sufficient fuel/EV-charging stations along the route consumption/energy details if this parameter is set to true. Default = false.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellularSignals",
            "in": "query",
            "description": "cellularSignals",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plannedWaypointReachTolerance",
            "in": "query",
            "description": "Only for routeMatch=2 with learned stops. Default = 20000 meter. If the trace gets closer then the learned stop is considered reached",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customRestrLimit",
            "in": "query",
            "description": "Comma separated list of key value pairs of custom restriction limits. The key and value of individual custom restriction limit must be numeric and must be separated by colon. Example: 0:10,1:20,2:50",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "evPoiLayer",
            "in": "query",
            "description": "Name of the layer which will be used to find the Electric Charging Stations along the route for Electric Vehicle Routing",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeMatch2PlannedWayPointReachRadius",
            "in": "query",
            "description": "Only for routeMatch=2. If vehicle apporaches a planned waypoint closer than this then the waypoint is considered reached. Default 20000.0m.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreWaypointsFarFromNeighbors",
            "in": "query",
            "description": "Only for routeMatch> 0. Default true. If false then doesn't ignore a trace point when it is much further away from its neighbors than the usual distances in the trace",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wayPointHeadingMismatchPenaltyFactor",
            "in": "query",
            "description": "Tie waypoints closer to links where the GPS heading matches the link's heading, and try harder to meet waypoints in the given driving direction. Default = 1.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidPrivate",
            "in": "query",
            "description": "Use private streets for routing. Set to 1 to always allow it or -1 to always forbid it. Default is 0 - access is allowed if there is a waypoint in the private street.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "licensePlate",
            "in": "query",
            "description": "Licenseplate of the vehicle. The vehicles registration number can influence the permission to drive in certain zones, mostly environmental zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "adminTruckRestrictions",
            "in": "query",
            "description": "Per default admin wide truck restrictions are obeyed. 'ignore' ignores them.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mapMatchTolerance",
            "in": "query",
            "description": "Map match tolerance [meter]. Will be applied to each way point. Routing can meet the waypoint on all links that are that much further away from the coordinate than the nearest. Default 3.0.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "privateChargingStation",
            "in": "query",
            "description": "If true then private charging stations will be considered during routing. Default is false.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "costPerConsumptionUnit",
            "in": "query",
            "description": "The cost of a consumption unit in targetCurrency. Default is 1.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restTimeDriverCost",
            "in": "query",
            "description": "Cost per hour in target currency while driver is taking a legal rest time. Can be between 0 and driver_cost value.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidFeatures",
            "in": "query",
            "description": "Comma separated list of road features to be avoided. Currently supported: unpaved[;300;50]. Avoids unpaved roads by the specified seconds to enter (Entry penalty) and seconds/km driven (drive peanlty), or a default penalty",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "truckVerified",
            "in": "query",
            "description": "Make use of truck verified roads for truck routing. Set to 1 to prefer transport verified roads, -1 to avoid them. Default is 0 - access is allowed, but truck verified routes are not prefered or avoided.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricSystem",
            "in": "query",
            "description": "Set to 'imperial' to receive guidance instruction distances in miles. Default = metric.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string"
              },
              "encoding": {
                "file": {
                  "contentType": "text/plain"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/calculaterouteisoline.json": {
      "get": {
        "tags": [
          "Routing Extensions & Route Matching"
        ],
        "summary": "Return the links within an time/distance isoline along the route",
        "description": "The route is specified by a route_id/routeHandle, or by waypoints. See calculateroute.json for a description of the parameters.",
        "operationId": "calculateRouteIsolineUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "route_id",
            "in": "query",
            "description": "Either waypoints, route_id or routeHandle is required.\r\nA routeId obtained from a previous v7.2 Router call. This routeId will be turned into an actual route.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeHandle",
            "in": "query",
            "description": "Either waypoints, route_id or routeHandle is required.\r\nA routeHandle obtained from a previous v8 Router call. This routeHandle will be turned into an actual route.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_detour_distance",
            "in": "query",
            "description": "Maximum driving distance in meters from the route path. This is one way, from the junction that leaves the route until to the map object. The distance to get back onto the route is not considered here. Either distance or time limit must be specified.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "max_detour_time",
            "in": "query",
            "description": "Maximum driving time in seconds from the route path. This is one way, from the junction that leaves the route until to the map object. The time to get back onto the route is not considered here. Either distance or time limit must be specified.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "geom",
            "in": "query",
            "description": "geom",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "enum": [
                "full",
                "local",
                "none"
              ]
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Optional (default=whole world excl. JPN, CHN, SK). Map coverage region, e.g. APAC, AUS, WEU, IND, MEA, NA, SAM, TWN, JPN. The region may contain hints to distinguish specific content. E.g. there can be an WEU and PCBEU, where the 2nd map contains only Postal Code Boundary layers. If not specified, the service will find the region(s) automatically, that cover the request. The parameter can contain a comma separated list of regions (f.e. WEU,MEA). If the region parameter is specified, the service will use these region(s) and skip region(s) that may also cover the response (f.e. EEU). Except of JPN, specifying a region is strongly discouraged, because regions might change and hence applications that specify a region might stop working when the region gets discontinued, renamed, split or changed otherwise. As the APAC region contains a simplified entry map content of JPN, JPN needs to be specified as region to access the full JPN content.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "language",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure",
            "in": "query",
            "description": "departure",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerType",
            "in": "query",
            "description": "trailerType",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailersCount",
            "in": "query",
            "description": "trailersCount",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleNumberAxles",
            "in": "query",
            "description": "vehicleNumberAxles",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerNumberAxles",
            "in": "query",
            "description": "trailerNumberAxles",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hybrid",
            "in": "query",
            "description": "hybrid",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionType",
            "in": "query",
            "description": "emissionType",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "height",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerHeight",
            "in": "query",
            "description": "trailerHeight",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleWeight",
            "in": "query",
            "description": "vehicleWeight",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitedWeight",
            "in": "query",
            "description": "limitedWeight",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabledEquipped",
            "in": "query",
            "description": "disabledEquipped",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minimalPollution",
            "in": "query",
            "description": "minimalPollution",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hov",
            "in": "query",
            "description": "hov",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "passengersCount",
            "in": "query",
            "description": "passengersCount",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tiresCount",
            "in": "query",
            "description": "tiresCount",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commercial",
            "in": "query",
            "description": "commercial",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedHazardousGoods",
            "in": "query",
            "description": "shippedHazardousGoods",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "heightAbove1stAxle",
            "in": "query",
            "description": "heightAbove1stAxle",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The routing mode (e.g. fastest;car;traffic:disabled) that determines how the route is calculated. When route_id/routeHandle is used for the corridor search then please specify the same mode which was used to get the route id or route handle.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transportMode",
            "in": "query",
            "description": "Mode of transport to be used for the calculation of the route: car, truck, pedestrian;It determines how the route is calculated. When routeHandle is used for the corridor search then please specify the same transportMode which was used to get the route handle.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routingMode",
            "in": "query",
            "description": "Specifies which optimization is applied during route calculation: fast, short;It determines how the route is calculated. When routeHandle is used for the corridor search then please specify the same routingMode which was used to get the route handle.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchInterval",
            "in": "query",
            "description": "Specifies in which intervals route isoline POIs are requested. Defined as from/to elapsed time on the route &searchInterval=fromSeconds,ToSeconds,FromSeconds,ToSeconds,...",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mapMatchRadius",
            "in": "query",
            "description": "Maximum adaptive map match search radius [meter]. Will be applied to each way point. If given it overrides waypoints' transitRadius values and the default maximum adaptive search radius. For routing, default 1600. Limit 5000.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkAttributes",
            "in": "query",
            "description": "Define optional attributes to be returned for each link. Defaults to shape, length, remainTime, remainDistance, flags. Also supported: cost",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the calculated route isoline. Defaults to warnings (wn). Can be excluded in the response by putting a hyphen in the front. e.g. -wn",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GeometrySearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/v8/calculateroute.json": {
      "get": {
        "tags": [
          "Routing Extensions & Route Matching"
        ],
        "summary": "Calculates a route with additional fleet telematics features",
        "description": "Calculates a route with additional fleet telematics features.\r\nThis resource provides a similar interface as the Routing REST API.\r\nNote: If using the cre.api.here.com endpoint, then requests that don't need specific features may get redirected to the Routing REST API. This doesn't happen when using the fleet.api.here.com endpoint.",
        "operationId": "calculateRouteUsingGET_1",
        "parameters": [
          {
            "name": "ISO3Country",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ISO3Language",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commercial",
            "in": "query",
            "description": "1=vehicle registered for commercial use, 0=otherwise. For toll cost, environmental zone regulations and delivery-only zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabledEquipped",
            "in": "query",
            "description": "1=vehicle equipped to carry disabled people, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayCountry",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayLanguage",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayName",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayScript",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayVariant",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionType",
            "in": "query",
            "description": "1=EURO I, 2=EURO II, 3=EURO III, 4=EURO IV, 5=EURO V, 6=EURO VI, 7=EURO EEV, 8=Electric Vehicles. For toll cost and environmental zone restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionTypeForEnvZones",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "extensionKeys",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fuelAndEmissionType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelType",
            "in": "query",
            "description": "Defines the fuel powering the vehicle. Can be Diesel, Petrol, LPG, LNG, CNG, Ethanol, Propane, Hydrogen, Electric. (LPG=Liquefied Petroleum Gas,  LNG=Liquefied Natural Gas). Used f.e. for environmental zone restrictions, toll cost calculation, consumption based routing for Electric vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "heightAbove1stAxle",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hybrid",
            "in": "query",
            "description": "1=fuel+electric, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jsonCallback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitedWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload and trailers/caravan incl. their payload. 7.5t or 7500kg or 16500lbs. For truck restrictions, speed profile, toll cost and environmental zone restrictions. See also vehicleWeight. Note that country wide weight restrictions depend on the number of axles and trailers as well, so it might be necessary to specify tem as well.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numericFuelType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "passengersCount",
            "in": "query",
            "description": "actual number of passengers. For toll cost. See also vehicle type carHOV.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "script",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedHazardousGoods",
            "in": "query",
            "description": "Comma separated list from explosive, gas, flammable, combustible, organic, poison, radioActive, corrosive, poisonousInhalation, harmfulToWater, other, allhazardousGoods, explosiveFlammable. For toll cost (only explosive and other) and for truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tiresCount",
            "in": "query",
            "description": "Number of tires. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerHeight",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerNumberAxles",
            "in": "query",
            "description": "Number of trailer axles. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerType",
            "in": "query",
            "description": "0=None, 1=Caravan, 2=Trailer, 3=RVTrailer, 4=BoatTrailer. For toll cost and recreational vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerWeight",
            "in": "query",
            "description": "Actual total weight of trailers with their payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailersCount",
            "in": "query",
            "description": "Number of trailers, 0...4. For toll cost and truck restrictions. 0=no trailer, 1=one or more trailers, 2=two or more trailers, 3=three or more trailers. For truck restrictions: 4=one or more semi-trailers.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnelCategory",
            "in": "query",
            "description": "Defines the tunnel categories the truck must NOT use. B, C, D or E. A tunnels have no restrictions. E tunnels have most restrictions. If C is defined, the route will use A and B tunnels but not C, D or E.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unicodeLocaleAttributes",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "unicodeLocaleKeys",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "variant",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleNumberAxles",
            "in": "query",
            "description": "Number of axles excluding trailers. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload, but not trailers' weight or payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "waypoint0 ... waypointN",
            "in": "query",
            "description": "Comma separated waypoint latitude, longitude in WGS-84 degree. The coordinates may be directly followed by ;transitRadius;label;heading[;optional specifications]. \r\nA route must consist of at least 2 waypoints (start and destination). The coordinates may be directly followed by ;transitRadius;label;heading. \r\nThe maximum number of waypoints is limited. However, this limit is not a fixed number but is a result of the limit for the overall processing time. \r\nSet a transit radius to only influence the route to go via a certain city (Example: &waypoint1=50.12,8.65;10000). \r\nSet a heading (degree clockwise from North) to improve map matching (Example: latitude,longitude;;;140). \r\nTo define a loading time or delay time at a waypoint, use stopOver[,timeInSeconds]! (Example: &waypoint1=stopOver,300!50.12,8.65). \r\nThe optional specifications altitude, custom label, !StreetPosition and !LinkPosition, ignoreRestriction are currently supported.\r\nTo define a radius around the waypoint where vehicle restrictions should be ignored use optional specification ';ignoreRestriction:radius[,drivePenalty[,type[,entryPenalty]]]. Example: &waypoint1=50.12,8.65;ignoreRestriction:8000,0.9,all,1800 . \r\nThis is similar to the global parameter 'ignoreWaypointVehicleRestriction' which applies to all waypoint. But when specified explicitly for a waypoint, the 'ignoreRestriction' specification of waypoint is applied. \r\nWaypoints can have opening and closing times, can be unsorted or optional. Details are in Key Concepts / Waypoint sorting, optional Pickup and Opening Times",
            "required": true,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxle",
            "in": "query",
            "description": "Actual total weight per axle, incl. payload. 7.5t or 7500kg or 16500lbs. For toll cost and truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxleGroup",
            "in": "query",
            "description": "Semicolon separated list of vehicle weight [tons] per axle group. Each item is a tuple (name,value). Supported names are drive, single, tandem, triple, quad, quint. Example: &weightPerAxleGroup=drive:12;single:11;tandem:18",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "driver_cost",
            "in": "query",
            "description": "Cost per hour in target currency.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicle_cost",
            "in": "query",
            "description": "Cost per kilometer in target currency.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleCostOnFerry",
            "in": "query",
            "description": "Cost per kilometer on ferry in target currency. Default = vehicle_cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "3 letter ISO currency symbol, like EUR or USD. Required if toll cost must be added up across different currencies and/or be added to driver/vehicle/fuel cost in different currencies.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Optional (default=whole world excl. JPN, CHN, SK). Map coverage region, e.g. APAC, AUS, WEU, IND, MEA, NA, SAM, TWN, JPN. The region may contain hints to distinguish specific content. E.g. there can be an WEU and PCBEU, where the 2nd map contains only Postal Code Boundary layers. If not specified, the service will find the region(s) automatically, that cover the request. The parameter can contain a comma separated list of regions (f.e. WEU,MEA). If the region parameter is specified, the service will use these region(s) and skip region(s) that may also cover the response (f.e. EEU). Except of JPN, specifying a region is strongly discouraged, because regions might change and hence applications that specify a region might stop working when the region gets discontinued, renamed, split or changed otherwise. As the APAC region contains a simplified entry map content of JPN, JPN needs to be specified as region to access the full JPN content.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure",
            "in": "query",
            "description": "Format: now, yyyy-MM-dd'T'HH:mm:ss or yyyy-MM-dd'T'HH:mm:ssX. If no timezone is specified, then the local timezone at the route start link is used. Default: Ignore all time dependent access restrictions. Special values: ignoreTimeDepRestr (like default), obeyTimeDepRestr (all time dependent restrictions apply).",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tollVehicleType",
            "in": "query",
            "description": "1=Motorcycle, 2=Auto, 3=Truck, 4=Motor home, 5=Minibus, 6=Bus, 7=Motorcycle Sidecar(EU), 8=Tricycle(EU), 9=Delivery Truck(EU+India), 10=Snowmobile(US), 11=Pick-up(US+India), 12=Tractor(US+India), 13=Taxi, 14=HCM/EME (India Heavy Construction Machinery/Earth Moving Equipment)",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overlays",
            "in": "query",
            "description": "Overlay map name. Case insensitive. Must start with OVERLAY and contain only characters.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "fastest;car;traffic:disabled;[optional parameters] As optional parameters motorway (0, -1, -2, -3), tollroad (0, -1, -2, -3), boatFerry (0, -1, -2, -3), railFerry (0, -1, -2, -3), and tunnel (0, -1, -2, -3) can follow. \"shortest\" and \"balanced\" are not supported but can be individually tuned using &driver_cost and &vehicle_cost. Vehicle types: bdouble, bicycle, bus, car, carHOV, custom1, emergency, motorcycle, pedestrian, roadtrain, taxi, truck",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restTimes",
            "in": "query",
            "description": "Legal drive/rest intervals. Specify 'local' to obey the legal driver rest times of the respective country. If the driver is not fresh then add ,TimeAlreadyDrivenSinceLastShortBreak,TimeAlreadyDrivenSinceLastLongRest in seconds. Alternatively, proprietary values can be set for DriveTimeUntilShortBreak, ElapsedTimeUntilShortBreak, ShortBreakDuration, DriveTimeUntilLongRest, ElapsedTimeUntilLongBreak, LongRestDuration. E.g. EU requires after 4.5h a 45min break + after 9h an 11h rest.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language for the maneuver instructions in the response. Currently de-de, en-us, it-it, fr-fr, es-es, pt-pt, pl-pl, zh-cn, zh-tw, zh-hk and ja-jp are supported. If not specified, en-us is used.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidLinks",
            "in": "query",
            "description": "Comma separated list of link ids or lat,lon[;heading] coordinates to be avoided. Positive ids are not driven from reference node, negative ids are not driven towards reference node. Use '*' prefix to avoid both directions. For coordinates direction of blocking depends on the heading. If no heading given both directions will be avoided.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidAreas",
            "in": "query",
            "description": "List of areas (rectangles or polygons) to be avoided. Areas are separated by '!'. Rectangles can be specified with two diagonal coordinates separated by ';', e.g. latMax,lonMin;latMin,lonMax. Polygons are specified with consecutive vertex coordinates separated by ';', e.g. lat1,lon1;lat2,lon2;lat3,lon3;... . Optionally an entry penalty (applied once while entering the area) and drive penalty (applied to every link driven inside the area) can be specified individually for each area to be avoided, format: 'polygon1Coords[;penalty:entryPenaltySec[,drivePenaltyFactor]]!polygon2Coords[;penalty:entryPenaltySec[,drivePenaltyFactor]]'. entryPenalty should be between -120 and 600 (-ve penalty implies prefer), drivePenaltyFactor should be between 0.1 and 20.0 (1.0 implies no penalty, < 1.0 implies prefer). e.g. poly1lat1,poly1lon1,poly1lat2,poly1lon2,poly1lat3,poly1lon3;penalty:60,1.5!poly2lat1,poly2lon1,poly2lat2,poly2lon2,poly2lat3,poly2lon3;penalty:-100,0.5 .",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "arrival",
            "in": "query",
            "description": "Format like departure. Use this to find out when you have to start the journey to arrive at the given time. Note that toll cost is not considered when arrival time is specified.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rollups",
            "in": "query",
            "description": "Comma separated list of rollups (groupings, aggregation levels) in the result. Currently supported rollups are none (per link details), total (totals), tollsys (per toll system summaries), country (per country summaries), country;tollsys (per country and toll system summaries). Example: &rollups=none,country;tollsys,country returns the cost details and 2 different summaries.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "speedFcCat",
            "in": "query",
            "description": "Comma separated list of speeds driven in kilometer per hour per road functional class (1-5 + Virtual Connections VC) and speed category (1-8) (f.e. FC1-SC1,FC1-SC2,...,FC1-SC8;FC2-SC1,FC2-SC2,...;...;VC-SC1,FC-SC2,...VC-SC8). Functional classes are semicolon separated. Can contain empty entries (no change to default f.e. 80,76,,,,,,;,,,54,46,,,;...). Overrides router's default driven speed values. Also one of the predefined profiles can be activated by value car, light-truck, medium-truck or heavy-truck",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeAttributes",
            "in": "query",
            "description": "Defines which information is included in the response route part of the calculated route. Defaults to mode (mo), waypoints (wp), summary (sm), flags (fl). Also supported: speedProfile (sp), shape (sh), summaryByCountry (sc), boundingBox (bb), none. Can be excluded in the response by putting a hyphen in the front. e.g. -wp",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the calculated route. Defaults to warnings (wn). Also supported: language (lg), none. Can be excluded in the response by putting a hyphen in the front. e.g. -wn",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metaAttributes",
            "in": "query",
            "description": "Defines which information is included in the meta part of the calculated route. Defaults to none. Also supported: version (ver), coverage (cov). Can be excluded in the response by putting a hyphen in the front. e.g. -ver",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maneuverAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the data representation of the route maneuvers. Defaults to position (po), length (le), travelTime (tt). Also supported: direction (di), action (ac), indices (ix), lanes (ln), roadName(rn), nextRoadName (nr), beforeAfter (ba) and none.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the route legs. Defaults to links (li), maneuvers (mn), length (le), travelTime (tt), baseTime (bt), trafficTime (tm). Also supported: shape (sh), boundingBox (bb), turnbyturnmaneuvers (mm), none. Can be excluded in the response by putting a hyphen in the front. e.g. -mn. Also in RouteMatch mode legAttributes=mn is supported.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkAttributes",
            "in": "query",
            "description": "Define optional attributes to be returned for each link. Defaults to shape (sh), length (le), remainTime (rt), remainDistance (rd), functionalClass (fc), warnings (wn), confidence (cd). Also supported: cost (co), maneuver (ma), timezone (tz), none. Can be excluded in the response by putting a hyphen in the front. e.g. -ma",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "traverseGates",
            "in": "query",
            "description": "Assume the driver has keys/permissions to traverse gates, if \"true\". Default = don't traverse any gates unless vehicle type is emergency.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeMatch",
            "in": "query",
            "description": "Default: Compute a legal route that goes through all way points. 1 = treat the waypoints (or trace file POST body) as GPS trace and return the most probable route along this trace. 2 = ETA Tracking mode, compute the route and take the POST body GPS trace into account to detect taken driver rest times and reached/skipped waypoints. To get maneuvers for a matched route specify &legAttributes=mn.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legal",
            "in": "query",
            "description": "For routeMatch=1. Enforces a legal route w.r.t. the listed maneuver types. Support maneuver types (comma separated list): access,gate,oneway,thrutraf,turn. Passing all of them yields a legal route as from a router. access=use only links allowed for the vehicle type (incl. truck measures). gate=don't traverse gates. oneway=don't drive links into forbidden direction. thrutraf=don't enter+leaving 'no through traffic' zones. turn=don't turn/u-turn illegally. Default: avoid illegal maneuvers, but use them if the trace obviously used them. If used, return respective warnings.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "Comma separated list of PDE layer names, to get link attributes along the route. Only link attribute layers (roughly those ending in _FC1, _FC2 ... ) are supported. Specify FCn to get the layers of all functional classes. Behind each layer name attributes can be listed, or (*) to get all. Example: &attributes=ROAD_GEOM_FCn(TUNNEL), SPEED_LIMITS_FCn (FROM_REF_SPEED_LIMIT, TO_REF_SPEED_LIMIT), ADAS_ATTRIB_FCn (SLOPES). A maximum of 32 layers can be requested per request.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tollPass",
            "in": "query",
            "description": "Comma separated list of owned passes: Senior_Pass, transponder (the car has all transponders), noTransponder (have no transponder and use no system that requires one), allPasses, Annual, Nr_of_Days, Nr_of_Months (meaning the car has all passes valid for this number of months), AutoPass, SunPass, E-Z Pass (last 2 are examples for real toll transponders). Can also list toll system ids or toll booth condition ids. Allows traversal of 'transponder-only' toll booths, allows cost free traversal of certain toll sections and allows using cheaper prices for transponder/pass owners.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "capacity",
            "in": "query",
            "description": "Comma separated list of numeric truck capacity limits. E.g. 8,25,6 for max. 8t payload and max. 25 square meter floor space and max 6 passengers. Must match the 'load' values of way points. For unsorted or optional way points.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customConsumptionDetails",
            "in": "query",
            "description": "Semicolon separated list of speed/ascent/descent/builtupFactor/auxilliaryConsumption fuel consumption parameters. Speed is a list of $/km for different speeds. Ascent/descent are additional $/km per altitude climbed or descended. Builtup factor is an optional heuristic consumption multiplier for urban area, default value is 1.55. auxilliaryConsumption is the additional consumption (per hour) for running auxilliary units (climate control, infotainment, lights, etc.). Cost unit is not $ but 'currency'. Example: speed,0,0.102,10,0.084,30,0.066,50,0.06,70,0.066,100,0.072,120,0.084,140,0.108; ascent,0.4; descent,0.1; builtupFactor,1.4 = at 70 kph the car consumes 6.6$/100km and 0.4$/km altitude climbed, consumption increases 40% in urban area. Alternatively, user can specify default consumption profile: 3.5t, 7.5t, 18t, 40t or weightDependent. In case of the weightDependent consumption profiles will be decided based on the limitedWeight so this parameter also needs to be specified.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alternatives",
            "in": "query",
            "description": "Maximum number of alternative route options to return. Can return less or no alternatives. Only returns route alternatives that significantly differ from the best route but are not much more costly.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeout",
            "in": "query",
            "description": "Routing calculation must be finished within this amount of milliseconds. Default 50000. Maximum 50000.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreWaypointVehicleRestriction",
            "in": "query",
            "description": "Format: radius[;drivePenaltyFactor[;type[;entryPenalty]]]. radius: in meters around a waypoint to ignore various vehicle restrictions (vehicle type, admin truck, time-based) if necessary. drivePenaltyFactor: (cost multiplier 0...10) to control how strict to avoid restrictions. type: restrictions types (time based restrictions/all permanent restriction) to be ignored, accepted values are: all/allTimed. entryPenalty: penalty in seconds (0....7200) applied once while ignoring each restriction type (like entering a 'no through traffic' or entering a 'admin truck restricted' area). Example1: ignoreWaypointVehicleRestriction=2000. Example2: ignoreWaypointVehicleRestriction=2000;;allTimed . Example3: ignoreWaypointVehicleRestriction=5000;0.9;all;1800 .",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxSpeed",
            "in": "query",
            "description": "Maximum speed allowed for the whole routing. Supported units are kmh (kilometres per hour), mph (miles per hour) and mps (metres per second). If no unit is provided, kmh will be used as default unit.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alignToGpsTime",
            "in": "query",
            "description": "Route matching tries to align the driving time to the GPS timestamps. On per default. Set to 0 to switch it off.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customAttributes",
            "in": "query",
            "description": "Comma separated list of CLE layer names, to get link attributes along the route. Format follows the 'attribute' parameter. No FCn notation supported",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mapMatchRadius",
            "in": "query",
            "description": "Maximum adaptive map match search radius [meter]. Will be applied to each way point. If given it overrides waypoints' transitRadius values and the default maximum adatpive search radius. For routing, default 1600. Limit 5000.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeCountries",
            "in": "query",
            "description": "excludeCountries",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeZoneTypes",
            "in": "query",
            "description": "Checks if a route may enter a zone. Currently supported values: environmental,vignette and congestionPricing. If omitted or empty, zone restrictions are not taken into account. Not supported for route matching.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requestId",
            "in": "query",
            "description": "Mirrored RequestId value from the request structure. Used to trace requests.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instructionFormat",
            "in": "query",
            "description": "Defines the representation format of the maneuver's instruction text. Supported formats are text|html",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "oneway",
            "in": "query",
            "description": "Default: Obey oneways. 'penalty:0.5' allows oneway violation if the time benefit is more than 0.5 sec/meter. For bicycle recommended value 0.125, for emergencies 0.5. Not allowed for other vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "drivingReport",
            "in": "query",
            "description": "Defines whether driving report is added to the route match response. Set to 1 to switch it on. Turned off by default.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignorePreferredRoutes",
            "in": "query",
            "description": "Preferred routes for a specific vehicle type, are taken by default. To turn if off set ignorePreferredRoutes to true.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidTurns",
            "in": "query",
            "description": "Comma separated list of elements like left[;minAngleDegree;penaltySec] or right... or uTurn[;penaltySec] if a left/right turn is sharper than the specified angle (0...180) then the given time penalty is applied. uTurnAtWaypoint avoids u-turning on the link directly where the waypoint was reached.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreZeroSpeedPoints",
            "in": "query",
            "description": "Only for route matching. Default = consider all points. 1 = ignore trace points that have zero speed (only in traces that provide speed but not time).",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wpDist",
            "in": "query",
            "description": "Only for route matching. 0 = default value, feature is disabled. 1 = return spatial distance between matched trace points. 2 = return spatial distance between original trace points",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chargingStationFilters",
            "in": "query",
            "description": "URL Encoded comma separated list of charging stations to filter out the electric vehicle charging stations, along the route.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "makeReachable",
            "in": "query",
            "description": "A route will be returned even there are not sufficient fuel/EV-charging stations along the route consumption/energy details if this parameter is set to true. Default = false.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellularSignals",
            "in": "query",
            "description": "cellularSignals",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plannedWaypointReachTolerance",
            "in": "query",
            "description": "Only for routeMatch=2 with learned stops. Default = 20000 meter. If the trace gets closer then the learned stop is considered reached",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customRestrLimit",
            "in": "query",
            "description": "Comma separated list of key value pairs of custom restriction limits. The key and value of individual custom restriction limit must be numeric and must be separated by colon. Example: 0:10,1:20,2:50",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "evPoiLayer",
            "in": "query",
            "description": "Name of the layer which will be used to find the Electric Charging Stations along the route for Electric Vehicle Routing",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeMatch2PlannedWayPointReachRadius",
            "in": "query",
            "description": "Only for routeMatch=2. If vehicle apporaches a planned waypoint closer than this then the waypoint is considered reached. Default 20000.0m.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreWaypointsFarFromNeighbors",
            "in": "query",
            "description": "Only for routeMatch> 0. Default true. If false then doesn't ignore a trace point when it is much further away from its neighbors than the usual distances in the trace",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wayPointHeadingMismatchPenaltyFactor",
            "in": "query",
            "description": "Tie waypoints closer to links where the GPS heading matches the link's heading, and try harder to meet waypoints in the given driving direction. Default = 1.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidPrivate",
            "in": "query",
            "description": "Use private streets for routing. Set to 1 to always allow it or -1 to always forbid it. Default is 0 - access is allowed if there is a waypoint in the private street.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "licensePlate",
            "in": "query",
            "description": "Licenseplate of the vehicle. The vehicles registration number can influence the permission to drive in certain zones, mostly environmental zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "adminTruckRestrictions",
            "in": "query",
            "description": "Per default admin wide truck restrictions are obeyed. 'ignore' ignores them.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mapMatchTolerance",
            "in": "query",
            "description": "Map match tolerance [meter]. Will be applied to each way point. Routing can meet the waypoint on all links that are that much further away from the coordinate than the nearest. Default 3.0.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "privateChargingStation",
            "in": "query",
            "description": "If true then private charging stations will be considered during routing. Default is false.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "costPerConsumptionUnit",
            "in": "query",
            "description": "The cost of a consumption unit in targetCurrency. Default is 1.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restTimeDriverCost",
            "in": "query",
            "description": "Cost per hour in target currency while driver is taking a legal rest time. Can be between 0 and driver_cost value.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidFeatures",
            "in": "query",
            "description": "Comma separated list of road features to be avoided. Currently supported: unpaved[;300;50]. Avoids unpaved roads by the specified seconds to enter (Entry penalty) and seconds/km driven (drive peanlty), or a default penalty",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "truckVerified",
            "in": "query",
            "description": "Make use of truck verified roads for truck routing. Set to 1 to prefer transport verified roads, -1 to avoid them. Default is 0 - access is allowed, but truck verified routes are not prefered or avoided.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricSystem",
            "in": "query",
            "description": "Set to 'imperial' to receive guidance instruction distances in miles. Default = metric.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string"
              },
              "encoding": {
                "file": {
                  "contentType": "text/plain"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Routing Extensions & Route Matching"
        ],
        "summary": "Calculates a route with additional fleet telematics features",
        "description": "Calculates a route with additional fleet telematics features.\r\nThis resource provides a similar interface as the Routing REST API.\r\nNote: If using the cre.api.here.com endpoint, then requests that don't need specific features may get redirected to the Routing REST API. This doesn't happen when using the fleet.api.here.com endpoint.",
        "operationId": "calculateRouteUsingPOST_1",
        "parameters": [
          {
            "name": "ISO3Country",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ISO3Language",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commercial",
            "in": "query",
            "description": "1=vehicle registered for commercial use, 0=otherwise. For toll cost, environmental zone regulations and delivery-only zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabledEquipped",
            "in": "query",
            "description": "1=vehicle equipped to carry disabled people, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayCountry",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayLanguage",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayName",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayScript",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayVariant",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionType",
            "in": "query",
            "description": "1=EURO I, 2=EURO II, 3=EURO III, 4=EURO IV, 5=EURO V, 6=EURO VI, 7=EURO EEV, 8=Electric Vehicles. For toll cost and environmental zone restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionTypeForEnvZones",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "extensionKeys",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fuelAndEmissionType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelType",
            "in": "query",
            "description": "Defines the fuel powering the vehicle. Can be Diesel, Petrol, LPG, LNG, CNG, Ethanol, Propane, Hydrogen, Electric. (LPG=Liquefied Petroleum Gas,  LNG=Liquefied Natural Gas). Used f.e. for environmental zone restrictions, toll cost calculation, consumption based routing for Electric vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "heightAbove1stAxle",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hybrid",
            "in": "query",
            "description": "1=fuel+electric, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jsonCallback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitedWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload and trailers/caravan incl. their payload. 7.5t or 7500kg or 16500lbs. For truck restrictions, speed profile, toll cost and environmental zone restrictions. See also vehicleWeight. Note that country wide weight restrictions depend on the number of axles and trailers as well, so it might be necessary to specify tem as well.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numericFuelType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "passengersCount",
            "in": "query",
            "description": "actual number of passengers. For toll cost. See also vehicle type carHOV.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "script",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedHazardousGoods",
            "in": "query",
            "description": "Comma separated list from explosive, gas, flammable, combustible, organic, poison, radioActive, corrosive, poisonousInhalation, harmfulToWater, other, allhazardousGoods, explosiveFlammable. For toll cost (only explosive and other) and for truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tiresCount",
            "in": "query",
            "description": "Number of tires. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerHeight",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerNumberAxles",
            "in": "query",
            "description": "Number of trailer axles. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerType",
            "in": "query",
            "description": "0=None, 1=Caravan, 2=Trailer, 3=RVTrailer, 4=BoatTrailer. For toll cost and recreational vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerWeight",
            "in": "query",
            "description": "Actual total weight of trailers with their payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailersCount",
            "in": "query",
            "description": "Number of trailers, 0...4. For toll cost and truck restrictions. 0=no trailer, 1=one or more trailers, 2=two or more trailers, 3=three or more trailers. For truck restrictions: 4=one or more semi-trailers.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnelCategory",
            "in": "query",
            "description": "Defines the tunnel categories the truck must NOT use. B, C, D or E. A tunnels have no restrictions. E tunnels have most restrictions. If C is defined, the route will use A and B tunnels but not C, D or E.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unicodeLocaleAttributes",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "unicodeLocaleKeys",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "variant",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleNumberAxles",
            "in": "query",
            "description": "Number of axles excluding trailers. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload, but not trailers' weight or payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "waypoint0 ... waypointN",
            "in": "query",
            "description": "Comma separated waypoint latitude, longitude in WGS-84 degree. The coordinates may be directly followed by ;transitRadius;label;heading[;optional specifications]. \r\nA route must consist of at least 2 waypoints (start and destination). The coordinates may be directly followed by ;transitRadius;label;heading. \r\nThe maximum number of waypoints is limited. However, this limit is not a fixed number but is a result of the limit for the overall processing time. \r\nSet a transit radius to only influence the route to go via a certain city (Example: &waypoint1=50.12,8.65;10000). \r\nSet a heading (degree clockwise from North) to improve map matching (Example: latitude,longitude;;;140). \r\nTo define a loading time or delay time at a waypoint, use stopOver[,timeInSeconds]! (Example: &waypoint1=stopOver,300!50.12,8.65). \r\nThe optional specifications altitude, custom label, !StreetPosition and !LinkPosition, ignoreRestriction are currently supported.\r\nTo define a radius around the waypoint where vehicle restrictions should be ignored use optional specification ';ignoreRestriction:radius[,drivePenalty[,type[,entryPenalty]]]. Example: &waypoint1=50.12,8.65;ignoreRestriction:8000,0.9,all,1800 . \r\nThis is similar to the global parameter 'ignoreWaypointVehicleRestriction' which applies to all waypoint. But when specified explicitly for a waypoint, the 'ignoreRestriction' specification of waypoint is applied. \r\nWaypoints can have opening and closing times, can be unsorted or optional. Details are in Key Concepts / Waypoint sorting, optional Pickup and Opening Times",
            "required": true,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxle",
            "in": "query",
            "description": "Actual total weight per axle, incl. payload. 7.5t or 7500kg or 16500lbs. For toll cost and truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxleGroup",
            "in": "query",
            "description": "Semicolon separated list of vehicle weight [tons] per axle group. Each item is a tuple (name,value). Supported names are drive, single, tandem, triple, quad, quint. Example: &weightPerAxleGroup=drive:12;single:11;tandem:18",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "driver_cost",
            "in": "query",
            "description": "Cost per hour in target currency.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicle_cost",
            "in": "query",
            "description": "Cost per kilometer in target currency.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleCostOnFerry",
            "in": "query",
            "description": "Cost per kilometer on ferry in target currency. Default = vehicle_cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "3 letter ISO currency symbol, like EUR or USD. Required if toll cost must be added up across different currencies and/or be added to driver/vehicle/fuel cost in different currencies.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Optional (default=whole world excl. JPN, CHN, SK). Map coverage region, e.g. APAC, AUS, WEU, IND, MEA, NA, SAM, TWN, JPN. The region may contain hints to distinguish specific content. E.g. there can be an WEU and PCBEU, where the 2nd map contains only Postal Code Boundary layers. If not specified, the service will find the region(s) automatically, that cover the request. The parameter can contain a comma separated list of regions (f.e. WEU,MEA). If the region parameter is specified, the service will use these region(s) and skip region(s) that may also cover the response (f.e. EEU). Except of JPN, specifying a region is strongly discouraged, because regions might change and hence applications that specify a region might stop working when the region gets discontinued, renamed, split or changed otherwise. As the APAC region contains a simplified entry map content of JPN, JPN needs to be specified as region to access the full JPN content.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure",
            "in": "query",
            "description": "Format: now, yyyy-MM-dd'T'HH:mm:ss or yyyy-MM-dd'T'HH:mm:ssX. If no timezone is specified, then the local timezone at the route start link is used. Default: Ignore all time dependent access restrictions. Special values: ignoreTimeDepRestr (like default), obeyTimeDepRestr (all time dependent restrictions apply).",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tollVehicleType",
            "in": "query",
            "description": "1=Motorcycle, 2=Auto, 3=Truck, 4=Motor home, 5=Minibus, 6=Bus, 7=Motorcycle Sidecar(EU), 8=Tricycle(EU), 9=Delivery Truck(EU+India), 10=Snowmobile(US), 11=Pick-up(US+India), 12=Tractor(US+India), 13=Taxi, 14=HCM/EME (India Heavy Construction Machinery/Earth Moving Equipment)",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overlays",
            "in": "query",
            "description": "Overlay map name. Case insensitive. Must start with OVERLAY and contain only characters.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "fastest;car;traffic:disabled;[optional parameters] As optional parameters motorway (0, -1, -2, -3), tollroad (0, -1, -2, -3), boatFerry (0, -1, -2, -3), railFerry (0, -1, -2, -3), and tunnel (0, -1, -2, -3) can follow. \"shortest\" and \"balanced\" are not supported but can be individually tuned using &driver_cost and &vehicle_cost. Vehicle types: bdouble, bicycle, bus, car, carHOV, custom1, emergency, motorcycle, pedestrian, roadtrain, taxi, truck",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restTimes",
            "in": "query",
            "description": "Legal drive/rest intervals. Specify 'local' to obey the legal driver rest times of the respective country. If the driver is not fresh then add ,TimeAlreadyDrivenSinceLastShortBreak,TimeAlreadyDrivenSinceLastLongRest in seconds. Alternatively, proprietary values can be set for DriveTimeUntilShortBreak, ElapsedTimeUntilShortBreak, ShortBreakDuration, DriveTimeUntilLongRest, ElapsedTimeUntilLongBreak, LongRestDuration. E.g. EU requires after 4.5h a 45min break + after 9h an 11h rest.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language for the maneuver instructions in the response. Currently de-de, en-us, it-it, fr-fr, es-es, pt-pt, pl-pl, zh-cn, zh-tw, zh-hk and ja-jp are supported. If not specified, en-us is used.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidLinks",
            "in": "query",
            "description": "Comma separated list of link ids or lat,lon[;heading] coordinates to be avoided. Positive ids are not driven from reference node, negative ids are not driven towards reference node. Use '*' prefix to avoid both directions. For coordinates direction of blocking depends on the heading. If no heading given both directions will be avoided.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidAreas",
            "in": "query",
            "description": "List of areas (rectangles or polygons) to be avoided. Areas are separated by '!'. Rectangles can be specified with two diagonal coordinates separated by ';', e.g. latMax,lonMin;latMin,lonMax. Polygons are specified with consecutive vertex coordinates separated by ';', e.g. lat1,lon1;lat2,lon2;lat3,lon3;... . Optionally an entry penalty (applied once while entering the area) and drive penalty (applied to every link driven inside the area) can be specified individually for each area to be avoided, format: 'polygon1Coords[;penalty:entryPenaltySec[,drivePenaltyFactor]]!polygon2Coords[;penalty:entryPenaltySec[,drivePenaltyFactor]]'. entryPenalty should be between -120 and 600 (-ve penalty implies prefer), drivePenaltyFactor should be between 0.1 and 20.0 (1.0 implies no penalty, < 1.0 implies prefer). e.g. poly1lat1,poly1lon1,poly1lat2,poly1lon2,poly1lat3,poly1lon3;penalty:60,1.5!poly2lat1,poly2lon1,poly2lat2,poly2lon2,poly2lat3,poly2lon3;penalty:-100,0.5 .",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "arrival",
            "in": "query",
            "description": "Format like departure. Use this to find out when you have to start the journey to arrive at the given time. Note that toll cost is not considered when arrival time is specified.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rollups",
            "in": "query",
            "description": "Comma separated list of rollups (groupings, aggregation levels) in the result. Currently supported rollups are none (per link details), total (totals), tollsys (per toll system summaries), country (per country summaries), country;tollsys (per country and toll system summaries). Example: &rollups=none,country;tollsys,country returns the cost details and 2 different summaries.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "speedFcCat",
            "in": "query",
            "description": "Comma separated list of speeds driven in kilometer per hour per road functional class (1-5 + Virtual Connections VC) and speed category (1-8) (f.e. FC1-SC1,FC1-SC2,...,FC1-SC8;FC2-SC1,FC2-SC2,...;...;VC-SC1,FC-SC2,...VC-SC8). Functional classes are semicolon separated. Can contain empty entries (no change to default f.e. 80,76,,,,,,;,,,54,46,,,;...). Overrides router's default driven speed values. Also one of the predefined profiles can be activated by value car, light-truck, medium-truck or heavy-truck",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeAttributes",
            "in": "query",
            "description": "Defines which information is included in the response route part of the calculated route. Defaults to mode (mo), waypoints (wp), summary (sm), flags (fl). Also supported: speedProfile (sp), shape (sh), summaryByCountry (sc), boundingBox (bb), none. Can be excluded in the response by putting a hyphen in the front. e.g. -wp",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "responseAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the calculated route. Defaults to warnings (wn). Also supported: language (lg), none. Can be excluded in the response by putting a hyphen in the front. e.g. -wn",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metaAttributes",
            "in": "query",
            "description": "Defines which information is included in the meta part of the calculated route. Defaults to none. Also supported: version (ver), coverage (cov). Can be excluded in the response by putting a hyphen in the front. e.g. -ver",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maneuverAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the data representation of the route maneuvers. Defaults to position (po), length (le), travelTime (tt). Also supported: direction (di), action (ac), indices (ix), lanes (ln), roadName(rn), nextRoadName (nr), beforeAfter (ba) and none.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legAttributes",
            "in": "query",
            "description": "Defines which information is included in the response as part of the route legs. Defaults to links (li), maneuvers (mn), length (le), travelTime (tt), baseTime (bt), trafficTime (tm). Also supported: shape (sh), boundingBox (bb), turnbyturnmaneuvers (mm), none. Can be excluded in the response by putting a hyphen in the front. e.g. -mn. Also in RouteMatch mode legAttributes=mn is supported.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkAttributes",
            "in": "query",
            "description": "Define optional attributes to be returned for each link. Defaults to shape (sh), length (le), remainTime (rt), remainDistance (rd), functionalClass (fc), warnings (wn), confidence (cd). Also supported: cost (co), maneuver (ma), timezone (tz), none. Can be excluded in the response by putting a hyphen in the front. e.g. -ma",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "traverseGates",
            "in": "query",
            "description": "Assume the driver has keys/permissions to traverse gates, if \"true\". Default = don't traverse any gates unless vehicle type is emergency.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeMatch",
            "in": "query",
            "description": "Default: Compute a legal route that goes through all way points. 1 = treat the waypoints (or trace file POST body) as GPS trace and return the most probable route along this trace. 2 = ETA Tracking mode, compute the route and take the POST body GPS trace into account to detect taken driver rest times and reached/skipped waypoints. To get maneuvers for a matched route specify &legAttributes=mn.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legal",
            "in": "query",
            "description": "For routeMatch=1. Enforces a legal route w.r.t. the listed maneuver types. Support maneuver types (comma separated list): access,gate,oneway,thrutraf,turn. Passing all of them yields a legal route as from a router. access=use only links allowed for the vehicle type (incl. truck measures). gate=don't traverse gates. oneway=don't drive links into forbidden direction. thrutraf=don't enter+leaving 'no through traffic' zones. turn=don't turn/u-turn illegally. Default: avoid illegal maneuvers, but use them if the trace obviously used them. If used, return respective warnings.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "Comma separated list of PDE layer names, to get link attributes along the route. Only link attribute layers (roughly those ending in _FC1, _FC2 ... ) are supported. Specify FCn to get the layers of all functional classes. Behind each layer name attributes can be listed, or (*) to get all. Example: &attributes=ROAD_GEOM_FCn(TUNNEL), SPEED_LIMITS_FCn (FROM_REF_SPEED_LIMIT, TO_REF_SPEED_LIMIT), ADAS_ATTRIB_FCn (SLOPES). A maximum of 32 layers can be requested per request.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tollPass",
            "in": "query",
            "description": "Comma separated list of owned passes: Senior_Pass, transponder (the car has all transponders), noTransponder (have no transponder and use no system that requires one), allPasses, Annual, Nr_of_Days, Nr_of_Months (meaning the car has all passes valid for this number of months), AutoPass, SunPass, E-Z Pass (last 2 are examples for real toll transponders). Can also list toll system ids or toll booth condition ids. Allows traversal of 'transponder-only' toll booths, allows cost free traversal of certain toll sections and allows using cheaper prices for transponder/pass owners.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "capacity",
            "in": "query",
            "description": "Comma separated list of numeric truck capacity limits. E.g. 8,25,6 for max. 8t payload and max. 25 square meter floor space and max 6 passengers. Must match the 'load' values of way points. For unsorted or optional way points.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customConsumptionDetails",
            "in": "query",
            "description": "Semicolon separated list of speed/ascent/descent/builtupFactor/auxilliaryConsumption fuel consumption parameters. Speed is a list of $/km for different speeds. Ascent/descent are additional $/km per altitude climbed or descended. Builtup factor is an optional heuristic consumption multiplier for urban area, default value is 1.55. auxilliaryConsumption is the additional consumption (per hour) for running auxilliary units (climate control, infotainment, lights, etc.). Cost unit is not $ but 'currency'. Example: speed,0,0.102,10,0.084,30,0.066,50,0.06,70,0.066,100,0.072,120,0.084,140,0.108; ascent,0.4; descent,0.1; builtupFactor,1.4 = at 70 kph the car consumes 6.6$/100km and 0.4$/km altitude climbed, consumption increases 40% in urban area. Alternatively, user can specify default consumption profile: 3.5t, 7.5t, 18t, 40t or weightDependent. In case of the weightDependent consumption profiles will be decided based on the limitedWeight so this parameter also needs to be specified.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alternatives",
            "in": "query",
            "description": "Maximum number of alternative route options to return. Can return less or no alternatives. Only returns route alternatives that significantly differ from the best route but are not much more costly.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeout",
            "in": "query",
            "description": "Routing calculation must be finished within this amount of milliseconds. Default 50000. Maximum 50000.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreWaypointVehicleRestriction",
            "in": "query",
            "description": "Format: radius[;drivePenaltyFactor[;type[;entryPenalty]]]. radius: in meters around a waypoint to ignore various vehicle restrictions (vehicle type, admin truck, time-based) if necessary. drivePenaltyFactor: (cost multiplier 0...10) to control how strict to avoid restrictions. type: restrictions types (time based restrictions/all permanent restriction) to be ignored, accepted values are: all/allTimed. entryPenalty: penalty in seconds (0....7200) applied once while ignoring each restriction type (like entering a 'no through traffic' or entering a 'admin truck restricted' area). Example1: ignoreWaypointVehicleRestriction=2000. Example2: ignoreWaypointVehicleRestriction=2000;;allTimed . Example3: ignoreWaypointVehicleRestriction=5000;0.9;all;1800 .",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxSpeed",
            "in": "query",
            "description": "Maximum speed allowed for the whole routing. Supported units are kmh (kilometres per hour), mph (miles per hour) and mps (metres per second). If no unit is provided, kmh will be used as default unit.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alignToGpsTime",
            "in": "query",
            "description": "Route matching tries to align the driving time to the GPS timestamps. On per default. Set to 0 to switch it off.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customAttributes",
            "in": "query",
            "description": "Comma separated list of CLE layer names, to get link attributes along the route. Format follows the 'attribute' parameter. No FCn notation supported",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mapMatchRadius",
            "in": "query",
            "description": "Maximum adaptive map match search radius [meter]. Will be applied to each way point. If given it overrides waypoints' transitRadius values and the default maximum adatpive search radius. For routing, default 1600. Limit 5000.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeCountries",
            "in": "query",
            "description": "excludeCountries",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeZoneTypes",
            "in": "query",
            "description": "Checks if a route may enter a zone. Currently supported values: environmental,vignette and congestionPricing. If omitted or empty, zone restrictions are not taken into account. Not supported for route matching.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requestId",
            "in": "query",
            "description": "Mirrored RequestId value from the request structure. Used to trace requests.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instructionFormat",
            "in": "query",
            "description": "Defines the representation format of the maneuver's instruction text. Supported formats are text|html",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "oneway",
            "in": "query",
            "description": "Default: Obey oneways. 'penalty:0.5' allows oneway violation if the time benefit is more than 0.5 sec/meter. For bicycle recommended value 0.125, for emergencies 0.5. Not allowed for other vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "drivingReport",
            "in": "query",
            "description": "Defines whether driving report is added to the route match response. Set to 1 to switch it on. Turned off by default.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignorePreferredRoutes",
            "in": "query",
            "description": "Preferred routes for a specific vehicle type, are taken by default. To turn if off set ignorePreferredRoutes to true.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidTurns",
            "in": "query",
            "description": "Comma separated list of elements like left[;minAngleDegree;penaltySec] or right... or uTurn[;penaltySec] if a left/right turn is sharper than the specified angle (0...180) then the given time penalty is applied. uTurnAtWaypoint avoids u-turning on the link directly where the waypoint was reached.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreZeroSpeedPoints",
            "in": "query",
            "description": "Only for route matching. Default = consider all points. 1 = ignore trace points that have zero speed (only in traces that provide speed but not time).",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wpDist",
            "in": "query",
            "description": "Only for route matching. 0 = default value, feature is disabled. 1 = return spatial distance between matched trace points. 2 = return spatial distance between original trace points",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chargingStationFilters",
            "in": "query",
            "description": "URL Encoded comma separated list of charging stations to filter out the electric vehicle charging stations, along the route.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "makeReachable",
            "in": "query",
            "description": "A route will be returned even there are not sufficient fuel/EV-charging stations along the route consumption/energy details if this parameter is set to true. Default = false.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellularSignals",
            "in": "query",
            "description": "cellularSignals",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plannedWaypointReachTolerance",
            "in": "query",
            "description": "Only for routeMatch=2 with learned stops. Default = 20000 meter. If the trace gets closer then the learned stop is considered reached",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customRestrLimit",
            "in": "query",
            "description": "Comma separated list of key value pairs of custom restriction limits. The key and value of individual custom restriction limit must be numeric and must be separated by colon. Example: 0:10,1:20,2:50",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "evPoiLayer",
            "in": "query",
            "description": "Name of the layer which will be used to find the Electric Charging Stations along the route for Electric Vehicle Routing",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeMatch2PlannedWayPointReachRadius",
            "in": "query",
            "description": "Only for routeMatch=2. If vehicle apporaches a planned waypoint closer than this then the waypoint is considered reached. Default 20000.0m.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ignoreWaypointsFarFromNeighbors",
            "in": "query",
            "description": "Only for routeMatch> 0. Default true. If false then doesn't ignore a trace point when it is much further away from its neighbors than the usual distances in the trace",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wayPointHeadingMismatchPenaltyFactor",
            "in": "query",
            "description": "Tie waypoints closer to links where the GPS heading matches the link's heading, and try harder to meet waypoints in the given driving direction. Default = 1.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidPrivate",
            "in": "query",
            "description": "Use private streets for routing. Set to 1 to always allow it or -1 to always forbid it. Default is 0 - access is allowed if there is a waypoint in the private street.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "licensePlate",
            "in": "query",
            "description": "Licenseplate of the vehicle. The vehicles registration number can influence the permission to drive in certain zones, mostly environmental zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "adminTruckRestrictions",
            "in": "query",
            "description": "Per default admin wide truck restrictions are obeyed. 'ignore' ignores them.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mapMatchTolerance",
            "in": "query",
            "description": "Map match tolerance [meter]. Will be applied to each way point. Routing can meet the waypoint on all links that are that much further away from the coordinate than the nearest. Default 3.0.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "privateChargingStation",
            "in": "query",
            "description": "If true then private charging stations will be considered during routing. Default is false.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "costPerConsumptionUnit",
            "in": "query",
            "description": "The cost of a consumption unit in targetCurrency. Default is 1.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restTimeDriverCost",
            "in": "query",
            "description": "Cost per hour in target currency while driver is taking a legal rest time. Can be between 0 and driver_cost value.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidFeatures",
            "in": "query",
            "description": "Comma separated list of road features to be avoided. Currently supported: unpaved[;300;50]. Avoids unpaved roads by the specified seconds to enter (Entry penalty) and seconds/km driven (drive peanlty), or a default penalty",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "truckVerified",
            "in": "query",
            "description": "Make use of truck verified roads for truck routing. Set to 1 to prefer transport verified roads, -1 to avoid them. Default is 0 - access is allowed, but truck verified routes are not prefered or avoided.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricSystem",
            "in": "query",
            "description": "Set to 'imperial' to receive guidance instruction distances in miles. Default = metric.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string"
              },
              "encoding": {
                "file": {
                  "contentType": "text/plain"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/search/all.json": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search for custom geometries by attribute filter, or download complete layer.",
        "operationId": "searchAllUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer_id",
            "in": "query",
            "description": "Layer ID identifying the layers to be searched. Can also be a comma separated list of layers. Layer names are not case sensitive. The maximum length of a layer name and the permitted characters can be looked up up in the service via /serviceconfiguration.json",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "A JavaScript expression being evaluated for each geometry matching search query.\r\nColumns value for the geometry are available as defined variables.\r\nWhen specified, only geometries where expression evaluates to true will be returned.\r\nExample: filter=RATING > 3 && NAME != 'MyPlace23' && NAME.startsWith('Food')\r\nParameter value must be url encoded when using special characters.\r\nThis filter expression is applied after the spatial filtering, hence only to few geometries. Only for the all.json the filter is applied to all geometries, so it can become very slow for big layers. Hence, following substring search expressions use database indexes and are much faster than other filter expressions (for updatable layers):\r\nCOL_NAME.indexOf(\"my_substring\") >= 0\r\nCOL_NAME.startsWith(\"my_prefix\")\r\nCOL_NAME == \"str\"\r\nCOL_NAME === \"str\"\r\nCOL_NAME != \"str\"\r\nCOL_NAME !== \"str\"\r\nCOL_NAME.indexOf(\"str\") >= 0\r\nCOL_NAME.startsWith(\"str\")\r\nCOL_NAME.like(\"%str%\")\r\nTo avoid service overload, filter expressions must not exceed 100 characters of text and their execution on the result must not exceed 100 ms execution time.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchtext",
            "in": "query",
            "description": "Free text search with fault tolerance for custom layers and attributes. This is supported only for updatable layers if it was configured when the layer was created.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "geom",
            "in": "query",
            "description": "full or none. Specifies the geometry representation in the result. Default = full. Full geometry is used for interactive editing, where the original geometry is required. None is used for applications like geofencing, which most of the time want to know only the ids of the geofence points/lines polygons they are in or near.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "enum": [
                "full",
                "local",
                "none"
              ]
            }
          },
          {
            "name": "start_geometry_id",
            "in": "query",
            "description": "To paginate huge responses, this parameter specifies the lowest geometry id to be returned. If geometry ids are not known, then retrieve the first page using zero, and to retrieve subsequent pages then request highest geometry of current page + 1 (it doesn't matter whether this geometry id actually exists or not). Use this parameter together with no_of_records.\r\nParameter can be a single value that applies to all layers, or a comma separated list equal in number to the number of layers specified in layer_id parameter.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "no_of_records",
            "in": "query",
            "description": "The number of geometries in the response. If more geometries satisfy the search/filter criteria, they will be suppressed. It is undefined, which of the matching geometries are returned, unless this parameter is used together with start_geometry_id, which sorts the results set by geometry id.\r\nParameter can be a single value that applies to all layers, or a comma separated list equal in number to the number of layers specified in layer_id parameter.\r\nThe maximum number of records supported within a single request can be looked up in the /serviceconfiguration.json endpoint.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "Optional. Map within to look for the layer. Default: Look into the default map.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Send with value=1 to get the response geometries framed with meta information like layer and tile id. Default = no meta data.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storage",
            "in": "query",
            "description": "Optional, default searches in both. Specify 'updatable' or 'readonly', how you uploaded the layer.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "acceptMissingLayers",
            "in": "query",
            "description": "Optional. If this parameter is set to true, user will get list of geometries from available layers, even if some of the requested layers are missing. If none of the requested layers are found, service returns empty list.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GeometrySearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/search/bbox.json": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search for geometries in a given rectangle within custom layers",
        "operationId": "searchBoundingBoxUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer_id",
            "in": "query",
            "description": "Layer ID identifying the layers to be searched. Layer names are not case sensitive. The maximum length of a layer name and the permitted characters can be looked up up in the service via /serviceconfiguration.json",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "A bounding box, provided as upper, left, lower and right coordinates in WGS84 degrees. All geometries overlapping this rectangle will be returned.\r\nThe format is north latitude,west longitude;south latitude,east longitude.\r\nExample: bbox=37.8,-122.1;37.2,-122.0",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "A JavaScript expression being evaluated for each geometry matching search query.\r\nColumns value for the geometry are available as defined variables.\r\nWhen specified, only geometries where expression evaluates to true will be returned.\r\nExample: filter=RATING > 3 && NAME != 'MyPlace23' && NAME.startsWith('Food')\r\nParameter value must be url encoded when using special characters.\r\nThis filter expression is applied after the spatial filtering, hence only to few geometries. Only for the all.json the filter is applied to all geometries, so it can become very slow for big layers. Hence, following substring search expressions use database indexes and are much faster than other filter expressions (for updatable layers):\r\nCOL_NAME.indexOf(\"my_substring\") >= 0\r\nCOL_NAME.startsWith(\"my_prefix\")\r\nCOL_NAME == \"str\"\r\nCOL_NAME === \"str\"\r\nCOL_NAME != \"str\"\r\nCOL_NAME !== \"str\"\r\nCOL_NAME.indexOf(\"str\") >= 0\r\nCOL_NAME.startsWith(\"str\")\r\nCOL_NAME.like(\"%str%\")\r\nTo avoid service overload, filter expressions must not exceed 100 characters of text and their execution on the result must not exceed 100 ms execution time.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "geom",
            "in": "query",
            "description": "local, full or none. Specifies the geometry representation in the result. Default = local. Local geometry is used for map display purposes, returning geometry pieces that cover the given search radius, bounding box or corridor polygon. Full geometry is used for interactive editing, where the original geometry is required. None is used for applications like geofencing, which most of the time want to know only the ids of the geofence points/lines polygons they are in or near.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "enum": [
                "full",
                "local",
                "none"
              ]
            }
          },
          {
            "name": "storage",
            "in": "query",
            "description": "Optional, default searches in both. Specify 'updatable' or 'readonly', how you uploaded the layer.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "Optional. Map within to look for the layer. Default: Look into the default map.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GeometrySearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/search/corridor.json": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search for custom geometries within a polyline's corridor",
        "description": "The number of geometries in the response should not exceed 1000. Exceeding one of the limits results in an error response. If an application needs more results returned then please contact technical customer support to work on a solution to reduce this.",
        "operationId": "searchCorridorUsingGET_1",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "The buffer search radius in meters. All geometries overlapping the corridor polygon will be returned. Maximum radius is 5000.0 meter.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "layer_ids",
            "in": "query",
            "description": "Comma separated list of layer IDs to be searched. Layer names are not case sensitive. The maximum length of a layer name and the permitted characters can be looked up up in the service via /serviceconfiguration.json",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "List of comma separated column names to specify which attributes shall appear in the result. Column names are not case sensitive. Default = all.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "A JavaScript expression being evaluated for each geometry matching search query.\r\nColumns value for the geometry are available as defined variables.\r\nWhen specified, only geometries where expression evaluates to true will be returned.\r\nExample: filter=RATING > 3 && NAME != 'MyPlace23' && NAME.startsWith('Food')\r\nParameter value must be url encoded when using special characters.\r\nThis filter expression is applied after the spatial filtering, hence only to few geometries. Only for the all.json the filter is applied to all geometries, so it can become very slow for big layers. Hence, following substring search expressions use database indexes and are much faster than other filter expressions (for updatable layers):\r\nCOL_NAME.indexOf(\"my_substring\") >= 0\r\nCOL_NAME.startsWith(\"my_prefix\")\r\nCOL_NAME == \"str\"\r\nCOL_NAME === \"str\"\r\nCOL_NAME != \"str\"\r\nCOL_NAME !== \"str\"\r\nCOL_NAME.indexOf(\"str\") >= 0\r\nCOL_NAME.startsWith(\"str\")\r\nCOL_NAME.like(\"%str%\")\r\nTo avoid service overload, filter expressions must not exceed 100 characters of text and their execution on the result must not exceed 100 ms execution time.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "corridor",
            "in": "query",
            "description": "Either corridor, route_id or routeHandle is required.\r\nThe WGS84 degree coordinates of the polyline used as corridor center line.\r\nFor example:\r\nlatitude 1,longitude 1;latitude 2,longitude 2;...",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "route_id",
            "in": "query",
            "description": "Either corridor, route_id or routeHandle is required.\r\nA route_id obtained from a previous v7.2 Router call. This route_id will be turned into a corridor polyline.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeHandle",
            "in": "query",
            "description": "Either corridor, route_id or routeHandle is required.\r\nA routeHandle obtained from a previous v8 Router call. This routeHandle will be turned into a corridor polyline.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "geom",
            "in": "query",
            "description": "local, full or none. Specifies the geometry representation in the result. Default = local. Local geometry is used for map display purposes, returning geometry pieces that cover the given search radius, bounding box or corridor polygon. Full geometry is used for interactive editing, where the original geometry is required. None is used for applications like geofencing, which most of the time want to know only the ids of the geofence points/lines polygons they are in or near.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "enum": [
                "full",
                "local",
                "none"
              ]
            }
          },
          {
            "name": "storage",
            "in": "query",
            "description": "Optional, default searches in both. Specify 'updatable' or 'readonly', how you uploaded the layer.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "Optional. Map within to look for the layer. Default: Look into the default map.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The routing mode (e.g. fastest;car;traffic:disabled) that determines how the route is calculated. When route_id/routeHandle is used for the corridor search then please specify the same mode which was used to get the route id or route handle.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transportMode",
            "in": "query",
            "description": "Mode of transport to be used for the calculation of the route: car, truck, pedestrian;It determines how the route is calculated. When routeHandle is used for the corridor search then please specify the same transportMode which was used to get the route handle.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routingMode",
            "in": "query",
            "description": "Specifies which optimization is applied during route calculation: fast, short;It determines how the route is calculated. When routeHandle is used for the corridor search then please specify the same routingMode which was used to get the route handle.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GeometrySearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Search for custom geometries within a polyline's corridor",
        "description": "The number of geometries in the response should not exceed 1000. Exceeding one of the limits results in an error response. If an application needs more results returned then please contact technical customer support to work on a solution to reduce this.",
        "operationId": "searchCorridorUsingPOST_1",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "The buffer search radius in meters. All geometries overlapping the corridor polygon will be returned. Maximum radius is 5000.0 meter.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "layer_ids",
            "in": "query",
            "description": "Comma separated list of layer IDs to be searched. Layer names are not case sensitive. The maximum length of a layer name and the permitted characters can be looked up up in the service via /serviceconfiguration.json",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "List of comma separated column names to specify which attributes shall appear in the result. Column names are not case sensitive. Default = all.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "A JavaScript expression being evaluated for each geometry matching search query.\r\nColumns value for the geometry are available as defined variables.\r\nWhen specified, only geometries where expression evaluates to true will be returned.\r\nExample: filter=RATING > 3 && NAME != 'MyPlace23' && NAME.startsWith('Food')\r\nParameter value must be url encoded when using special characters.\r\nThis filter expression is applied after the spatial filtering, hence only to few geometries. Only for the all.json the filter is applied to all geometries, so it can become very slow for big layers. Hence, following substring search expressions use database indexes and are much faster than other filter expressions (for updatable layers):\r\nCOL_NAME.indexOf(\"my_substring\") >= 0\r\nCOL_NAME.startsWith(\"my_prefix\")\r\nCOL_NAME == \"str\"\r\nCOL_NAME === \"str\"\r\nCOL_NAME != \"str\"\r\nCOL_NAME !== \"str\"\r\nCOL_NAME.indexOf(\"str\") >= 0\r\nCOL_NAME.startsWith(\"str\")\r\nCOL_NAME.like(\"%str%\")\r\nTo avoid service overload, filter expressions must not exceed 100 characters of text and their execution on the result must not exceed 100 ms execution time.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "corridor",
            "in": "query",
            "description": "Either corridor, route_id or routeHandle is required.\r\nThe WGS84 degree coordinates of the polyline used as corridor center line.\r\nFor example:\r\nlatitude 1,longitude 1;latitude 2,longitude 2;...",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "route_id",
            "in": "query",
            "description": "Either corridor, route_id or routeHandle is required.\r\nA route_id obtained from a previous v7.2 Router call. This route_id will be turned into a corridor polyline.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routeHandle",
            "in": "query",
            "description": "Either corridor, route_id or routeHandle is required.\r\nA routeHandle obtained from a previous v8 Router call. This routeHandle will be turned into a corridor polyline.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "geom",
            "in": "query",
            "description": "local, full or none. Specifies the geometry representation in the result. Default = local. Local geometry is used for map display purposes, returning geometry pieces that cover the given search radius, bounding box or corridor polygon. Full geometry is used for interactive editing, where the original geometry is required. None is used for applications like geofencing, which most of the time want to know only the ids of the geofence points/lines polygons they are in or near.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "enum": [
                "full",
                "local",
                "none"
              ]
            }
          },
          {
            "name": "storage",
            "in": "query",
            "description": "Optional, default searches in both. Specify 'updatable' or 'readonly', how you uploaded the layer.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "Optional. Map within to look for the layer. Default: Look into the default map.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The routing mode (e.g. fastest;car;traffic:disabled) that determines how the route is calculated. When route_id/routeHandle is used for the corridor search then please specify the same mode which was used to get the route id or route handle.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transportMode",
            "in": "query",
            "description": "Mode of transport to be used for the calculation of the route: car, truck, pedestrian;It determines how the route is calculated. When routeHandle is used for the corridor search then please specify the same transportMode which was used to get the route handle.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routingMode",
            "in": "query",
            "description": "Specifies which optimization is applied during route calculation: fast, short;It determines how the route is calculated. When routeHandle is used for the corridor search then please specify the same routingMode which was used to get the route handle.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GeometrySearchResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/search/proximities.json": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search the POIs within a given circle - multiple POI layers with different circles can be specified",
        "operationId": "searchProximitiesUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "proximity0 ... proximityN",
            "in": "query",
            "description": "Defines the parameters for a proximity search. This includes the geometry of the search and other parameters. Geometry and other parameters are separated by semicolons.\r\n * The geometry is defined as comma separated waypoint latitude, longitude in WGS-84 degree and radius in Meter.\r\n * layer: List of comma separated layer names to be searched. Layer names are not case sensitive.\r\n * mapName: a map or a region. Default: a geographically suitable map which includes the given layer\r\n * keyAttribute: Unique identifier per object. Use GEOMETRY_ID for private maps without other unique id. Check the online documentation for key attributes of public maps (id-like entries).\r\n * attributes: List of comma separated column names to specify which attributes shall appear in the result. Column names are not case sensitive. Optional, default = all.\r\n",
            "required": true,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "geom",
            "in": "query",
            "description": "local, full or none. Specifies the geometry representation in the result. Default = local. Local geometry is used for map display purposes, returning geometry pieces that cover the given search radius, bounding box or corridor polygon. Full geometry is used for interactive editing, where the original geometry is required. None is used for applications like geofencing, which most of the time want to know only the ids of the geofence points/lines polygons they are in or near.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "enum": [
                "full",
                "local",
                "none"
              ]
            }
          },
          {
            "name": "storage",
            "in": "query",
            "description": "Optional, default searches in both. Specify 'updatable' or 'readonly', how you uploaded the layer.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GeometrySearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/search/proximity.json": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search for geometries within a radius around a given coordinate in custom layers",
        "operationId": "searchProximityUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer_ids",
            "in": "query",
            "description": "Comma separated list of layer IDs to be searched. Layer names are not case sensitive. The maximum length of a layer name and the permitted characters can be looked up up in the service via /serviceconfiguration.json",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "proximity",
            "in": "query",
            "description": "The circular search area specified by center latitude, longitude [WGS84 degrees], radius [meter].\r\nAll geometries overlapping this circle will be returned, sorted by distance, closest first.\r\nExample: proximity=47.731,7.5549,100\r\nMultiple coordinate pairs can be passed as a semicolon separated list. For each of them, the layer_ids list is searched. If each coordinate pair is searched in a different set of layers, layer_ids contains a semicolon separated list of (comma separated list of) layers.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "List of comma separated column names to specify which attributes shall appear in the result. Column names are not case sensitive. Default = all.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "A JavaScript expression being evaluated for each geometry matching search query.\r\nColumns value for the geometry are available as defined variables.\r\nWhen specified, only geometries where expression evaluates to true will be returned.\r\nExample: filter=RATING > 3 && NAME != 'MyPlace23' && NAME.startsWith('Food')\r\nParameter value must be url encoded when using special characters.\r\nThis filter expression is applied after the spatial filtering, hence only to few geometries. Only for the all.json the filter is applied to all geometries, so it can become very slow for big layers. Hence, following substring search expressions use database indexes and are much faster than other filter expressions (for updatable layers):\r\nCOL_NAME.indexOf(\"my_substring\") >= 0\r\nCOL_NAME.startsWith(\"my_prefix\")\r\nCOL_NAME == \"str\"\r\nCOL_NAME === \"str\"\r\nCOL_NAME != \"str\"\r\nCOL_NAME !== \"str\"\r\nCOL_NAME.indexOf(\"str\") >= 0\r\nCOL_NAME.startsWith(\"str\")\r\nCOL_NAME.like(\"%str%\")\r\nTo avoid service overload, filter expressions must not exceed 100 characters of text and their execution on the result must not exceed 100 ms execution time.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "geom",
            "in": "query",
            "description": "local, full or none. Specifies the geometry representation in the result. Default = local. Local geometry is used for map display purposes, returning geometry pieces that cover the given search radius, bounding box or corridor polygon. Full geometry is used for interactive editing, where the original geometry is required. None is used for applications like geofencing, which most of the time want to know only the ids of the geofence points/lines polygons they are in or near.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "enum": [
                "full",
                "local",
                "none"
              ]
            }
          },
          {
            "name": "storage",
            "in": "query",
            "description": "Optional, default searches in both. Specify 'updatable' or 'readonly', how you uploaded the layer.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "Optional. Map within to look for the layer. Default: Look into the default map.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "release",
            "in": "query",
            "description": "To choose a specific snapshot of the weather archive layer, a UNIX timestamp (number of milliseconds since 1970) or a date in 2017-12-01T17:30:00+01:00 format can be passed.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GeometrySearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/search/quadkey.json": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Retrieve custom layer content within a quadkey",
        "description": "Retrieve the layer content records within a given geo rectangle specified by a (standard WGS84 Mercator) quadkey in custom layers.",
        "operationId": "searchQuadKeyUsingGET_1",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer_id",
            "in": "query",
            "description": "Layer ID identifying the layers to be searched. Layer names are not case sensitive. The maximum length of a layer name and the permitted characters can be looked up up in the service via /serviceconfiguration.json",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quad_key",
            "in": "query",
            "description": "The quad key number of the map tile area to search from.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "A JavaScript expression being evaluated for each geometry matching search query.\r\nColumns value for the geometry are available as defined variables.\r\nWhen specified, only geometries where expression evaluates to true will be returned.\r\nExample: filter=RATING > 3 && NAME != 'MyPlace23' && NAME.startsWith('Food')\r\nParameter value must be url encoded when using special characters.\r\nThis filter expression is applied after the spatial filtering, hence only to few geometries. Only for the all.json the filter is applied to all geometries, so it can become very slow for big layers. Hence, following substring search expressions use database indexes and are much faster than other filter expressions (for updatable layers):\r\nCOL_NAME.indexOf(\"my_substring\") >= 0\r\nCOL_NAME.startsWith(\"my_prefix\")\r\nCOL_NAME == \"str\"\r\nCOL_NAME === \"str\"\r\nCOL_NAME != \"str\"\r\nCOL_NAME !== \"str\"\r\nCOL_NAME.indexOf(\"str\") >= 0\r\nCOL_NAME.startsWith(\"str\")\r\nCOL_NAME.like(\"%str%\")\r\nTo avoid service overload, filter expressions must not exceed 100 characters of text and their execution on the result must not exceed 100 ms execution time.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "geom",
            "in": "query",
            "description": "local, full or none. Specifies the geometry representation in the result. Default = local. Local geometry is used for map display purposes, returning geometry pieces that cover the given search radius, bounding box or corridor polygon. Full geometry is used for interactive editing, where the original geometry is required. None is used for applications like geofencing, which most of the time want to know only the ids of the geofence points/lines polygons they are in or near.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "enum": [
                "full",
                "local",
                "none"
              ]
            }
          },
          {
            "name": "storage",
            "in": "query",
            "description": "Optional, default searches in both. Specify 'updatable' or 'readonly', how you uploaded the layer.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "Optional. Map within to look for the layer. Default: Look into the default map.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GeometrySearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/search/routeisoline.json": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Retrieve the POIs that are reachable within a certain time or distance from the main route",
        "operationId": "searchRouteIsolineUsingGET",
        "parameters": [
          {
            "name": "apikey",
            "in": "query",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerType, trailersCount, vehicleNumberAxles, trailerNumberAxles, hybrid, emissionType, height, trailerHeight, vehicleWeight, limitedWeight, disabledEquipped, minimalPollution, hov, passengersCount, tiresCount, commercial, shippedHazardousGoods, heightAbove1stAxle",
            "in": "query",
            "description": "Parameters to specify the vehicle. See calculateroute.json for details.",
            "required": true,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "waypoint0 ... waypointN",
            "in": "query",
            "description": "Either waypoints or route_id must be specified. Comma separated waypoint latitude, longitude in WGS-84 degree. A route must consist of at least 2\r\nwaypoints (start and destination). The maximum number of waypoints is limited. However, this limit is\r\nnot a fixed number but is a result of the limit for the overall processing time. To define a loading/delay\r\ntime at a waypoint, use stopOver[,timeInSeconds]!. Example: &waypoint1=stopOver,300!50.12,8.65.\r\nNone of the optional specifications geo!, stopOver!, passThrough!, altitude,\r\ntransitRadius, custom label, heading, !StreetPosition, !LinkPosition are currently supported.",
            "required": true,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layer_ids",
            "in": "query",
            "description": "Comma separated list of layer IDs to be searched. Layer names are not case sensitive. Both custom layers and PDE map layers are supported. PDE layers divided by functional class, like ROAD_GEOM_FC1 ... FC5 can be selected by N, e.g. ROAD_GEOM_FCN. Layers must have a LINK_ID column. If a customer doesn't have a LINK_ID column, customers can create it using the Geocoder, Reverse Geocoder or RME. The maximum length of a layer name and the permitted characters can be looked up up in the service via /serviceconfiguration.json",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "List of comma separated column names to specify which attributes shall appear in the result. Column names are not case sensitive. Default = all.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "geom",
            "in": "query",
            "description": "local, full or none. Specifies the geometry representation in the result. Default = local. Local geometry is used for map display purposes, returning geometry pieces that cover the given search radius, bounding box or corridor polygon. Full geometry is used for interactive editing, where the original geometry is required. None is used for applications like geofencing, which most of the time want to know only the ids of the geofence points/lines polygons they are in or near.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string",
              "enum": [
                "full",
                "local",
                "none"
              ]
            }
          },
          {
            "name": "max_detour_distance",
            "in": "query",
            "description": "Either max_detour_distance or max_detour_time must be specified. Maximum travel distance in meter away from the route to reach the map object. This is one way, from the junction that leaves the route until to the map object. The distance to get back onto the route is not considered here.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "max_detour_time",
            "in": "query",
            "description": "Either max_detour_time or max_detour_distance\tMaximum travel time in seconds away from the route to reach the map object. This is one way, from the junction that leaves the route until to the map object. The time to get back onto the route is not considered here.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "storage",
            "in": "query",
            "description": "Optional, default searches in both. Specify 'updatable' or 'readonly', how you uploaded the layer.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mapMatchRadius",
            "in": "query",
            "description": "Maximum adaptive map match search radius [meter]. Will be applied to each way point. If given it overrides waypoints' transitRadius values and the default maximum adaptive search radius. For routing, default 1600. Limit 5000.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Optional (default=whole world excl. JPN, CHN, SK). Map coverage region, e.g. APAC, AUS, WEU, IND, MEA, NA, SAM, TWN, JPN. The region may contain hints to distinguish specific content. E.g. there can be an WEU and PCBEU, where the 2nd map contains only Postal Code Boundary layers. If not specified, the service will find the region(s) automatically, that cover the request. The parameter can contain a comma separated list of regions (f.e. WEU,MEA). If the region parameter is specified, the service will use these region(s) and skip region(s) that may also cover the response (f.e. EEU). Except of JPN, specifying a region is strongly discouraged, because regions might change and hence applications that specify a region might stop working when the region gets discontinued, renamed, split or changed otherwise. As the APAC region contains a simplified entry map content of JPN, JPN needs to be specified as region to access the full JPN content.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "language",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "description": "Optional. Map within to look for the layer. Default: Look into the default map.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callback",
            "in": "query",
            "description": "Specifies the function used to wrap the JSON response.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkAttributes",
            "in": "query",
            "description": "Define optional attributes to be returned for each link. Currently supported: cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchInterval",
            "in": "query",
            "description": "Specifies in which intervals route isoline POIs are requested. Defined as from/to elapsed time on the route &searchInterval=fromSeconds,ToSeconds,FromSeconds,ToSeconds,...",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "The routing mode (e.g. fastest;car;traffic:disabled) that determines how the route is calculated.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GeometrySearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/findpickups.json": {
      "get": {
        "tags": [
          "Waypoints Sequence"
        ],
        "summary": "findPickupsOrSequence",
        "operationId": "findPickupsOrSequenceUsingGET",
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commercial",
            "in": "query",
            "description": "1=vehicle registered for commercial use, 0=otherwise. For toll cost, environmental zone regulations and delivery-only zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabledEquipped",
            "in": "query",
            "description": "1=vehicle equipped to carry disabled people, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionType",
            "in": "query",
            "description": "1=EURO I, 2=EURO II, 3=EURO III, 4=EURO IV, 5=EURO V, 6=EURO VI, 7=EURO EEV, 8=Electric Vehicles. For toll cost and environmental zone restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionTypeForEnvZones",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelAndEmissionType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelType",
            "in": "query",
            "description": "Defines the fuel powering the vehicle. Can be Diesel, Petrol, LPG, LNG, CNG, Ethanol, Propane, Hydrogen, Electric. (LPG=Liquefied Petroleum Gas,  LNG=Liquefied Natural Gas). Used f.e. for environmental zone restrictions, toll cost calculation, consumption based routing for Electric vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "heightAbove1stAxle",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hybrid",
            "in": "query",
            "description": "1=fuel+electric, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitedWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload and trailers/caravan incl. their payload. 7.5t or 7500kg or 16500lbs. For truck restrictions, speed profile, toll cost and environmental zone restrictions. See also vehicleWeight. Note that country wide weight restrictions depend on the number of axles and trailers as well, so it might be necessary to specify tem as well.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numericFuelType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "passengersCount",
            "in": "query",
            "description": "actual number of passengers. For toll cost. See also vehicle type carHOV.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedHazardousGoods",
            "in": "query",
            "description": "Comma separated list from explosive, gas, flammable, combustible, organic, poison, radioActive, corrosive, poisonousInhalation, harmfulToWater, other, allhazardousGoods, explosiveFlammable. For toll cost (only explosive and other) and for truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tiresCount",
            "in": "query",
            "description": "Number of tires. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerHeight",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerNumberAxles",
            "in": "query",
            "description": "Number of trailer axles. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerType",
            "in": "query",
            "description": "0=None, 1=Caravan, 2=Trailer, 3=RVTrailer, 4=BoatTrailer. For toll cost and recreational vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerWeight",
            "in": "query",
            "description": "Actual total weight of trailers with their payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailersCount",
            "in": "query",
            "description": "Number of trailers, 0...4. For toll cost and truck restrictions. 0=no trailer, 1=one or more trailers, 2=two or more trailers, 3=three or more trailers. For truck restrictions: 4=one or more semi-trailers.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnelCategory",
            "in": "query",
            "description": "Defines the tunnel categories the truck must NOT use. B, C, D or E. A tunnels have no restrictions. E tunnels have most restrictions. If C is defined, the route will use A and B tunnels but not C, D or E.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleNumberAxles",
            "in": "query",
            "description": "Number of axles excluding trailers. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload, but not trailers' weight or payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxle",
            "in": "query",
            "description": "Actual total weight per axle, incl. payload. 7.5t or 7500kg or 16500lbs. For toll cost and truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxleGroup",
            "in": "query",
            "description": "Semicolon separated list of vehicle weight [tons] per axle group. Each item is a tuple (name,value). Supported names are drive, single, tandem, triple, quad, quint. Example: &weightPerAxleGroup=drive:12;single:11;tandem:18",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "driverCost",
            "in": "query",
            "description": "driverCost",
            "required": false,
            "style": "form",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "vehicleCost",
            "in": "query",
            "description": "vehicleCost",
            "required": false,
            "style": "form",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxDetour",
            "in": "query",
            "description": "maxDetour",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "capacity",
            "in": "query",
            "description": "capacity",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "mode",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure",
            "in": "query",
            "description": "departure",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidLinks",
            "in": "query",
            "description": "avoidLinks",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidAreas",
            "in": "query",
            "description": "avoidAreas",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jsonCallback",
            "in": "query",
            "description": "jsonCallback",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restTimes",
            "in": "query",
            "description": "restTimes",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "arrival",
            "in": "query",
            "description": "arrival",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sequence",
            "in": "query",
            "description": "sequence",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "region",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Waypoints Sequence"
        ],
        "summary": "findPickupsOrSequence",
        "operationId": "findPickupsOrSequenceUsingPOST",
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commercial",
            "in": "query",
            "description": "1=vehicle registered for commercial use, 0=otherwise. For toll cost, environmental zone regulations and delivery-only zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabledEquipped",
            "in": "query",
            "description": "1=vehicle equipped to carry disabled people, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionType",
            "in": "query",
            "description": "1=EURO I, 2=EURO II, 3=EURO III, 4=EURO IV, 5=EURO V, 6=EURO VI, 7=EURO EEV, 8=Electric Vehicles. For toll cost and environmental zone restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionTypeForEnvZones",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelAndEmissionType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelType",
            "in": "query",
            "description": "Defines the fuel powering the vehicle. Can be Diesel, Petrol, LPG, LNG, CNG, Ethanol, Propane, Hydrogen, Electric. (LPG=Liquefied Petroleum Gas,  LNG=Liquefied Natural Gas). Used f.e. for environmental zone restrictions, toll cost calculation, consumption based routing for Electric vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "heightAbove1stAxle",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hybrid",
            "in": "query",
            "description": "1=fuel+electric, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitedWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload and trailers/caravan incl. their payload. 7.5t or 7500kg or 16500lbs. For truck restrictions, speed profile, toll cost and environmental zone restrictions. See also vehicleWeight. Note that country wide weight restrictions depend on the number of axles and trailers as well, so it might be necessary to specify tem as well.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numericFuelType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "passengersCount",
            "in": "query",
            "description": "actual number of passengers. For toll cost. See also vehicle type carHOV.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedHazardousGoods",
            "in": "query",
            "description": "Comma separated list from explosive, gas, flammable, combustible, organic, poison, radioActive, corrosive, poisonousInhalation, harmfulToWater, other, allhazardousGoods, explosiveFlammable. For toll cost (only explosive and other) and for truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tiresCount",
            "in": "query",
            "description": "Number of tires. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerHeight",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerNumberAxles",
            "in": "query",
            "description": "Number of trailer axles. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerType",
            "in": "query",
            "description": "0=None, 1=Caravan, 2=Trailer, 3=RVTrailer, 4=BoatTrailer. For toll cost and recreational vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerWeight",
            "in": "query",
            "description": "Actual total weight of trailers with their payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailersCount",
            "in": "query",
            "description": "Number of trailers, 0...4. For toll cost and truck restrictions. 0=no trailer, 1=one or more trailers, 2=two or more trailers, 3=three or more trailers. For truck restrictions: 4=one or more semi-trailers.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnelCategory",
            "in": "query",
            "description": "Defines the tunnel categories the truck must NOT use. B, C, D or E. A tunnels have no restrictions. E tunnels have most restrictions. If C is defined, the route will use A and B tunnels but not C, D or E.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleNumberAxles",
            "in": "query",
            "description": "Number of axles excluding trailers. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload, but not trailers' weight or payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxle",
            "in": "query",
            "description": "Actual total weight per axle, incl. payload. 7.5t or 7500kg or 16500lbs. For toll cost and truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxleGroup",
            "in": "query",
            "description": "Semicolon separated list of vehicle weight [tons] per axle group. Each item is a tuple (name,value). Supported names are drive, single, tandem, triple, quad, quint. Example: &weightPerAxleGroup=drive:12;single:11;tandem:18",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "driverCost",
            "in": "query",
            "description": "driverCost",
            "required": false,
            "style": "form",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "vehicleCost",
            "in": "query",
            "description": "vehicleCost",
            "required": false,
            "style": "form",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxDetour",
            "in": "query",
            "description": "maxDetour",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "capacity",
            "in": "query",
            "description": "capacity",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "mode",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure",
            "in": "query",
            "description": "departure",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidLinks",
            "in": "query",
            "description": "avoidLinks",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidAreas",
            "in": "query",
            "description": "avoidAreas",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jsonCallback",
            "in": "query",
            "description": "jsonCallback",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restTimes",
            "in": "query",
            "description": "restTimes",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "arrival",
            "in": "query",
            "description": "arrival",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sequence",
            "in": "query",
            "description": "sequence",
            "required": false,
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "region",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/2/findsequence.json": {
      "get": {
        "tags": [
          "Waypoints Sequence"
        ],
        "summary": "findSequence",
        "operationId": "findSequenceUsingGET",
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commercial",
            "in": "query",
            "description": "1=vehicle registered for commercial use, 0=otherwise. For toll cost, environmental zone regulations and delivery-only zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabledEquipped",
            "in": "query",
            "description": "1=vehicle equipped to carry disabled people, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionType",
            "in": "query",
            "description": "1=EURO I, 2=EURO II, 3=EURO III, 4=EURO IV, 5=EURO V, 6=EURO VI, 7=EURO EEV, 8=Electric Vehicles. For toll cost and environmental zone restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionTypeForEnvZones",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelAndEmissionType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelType",
            "in": "query",
            "description": "Defines the fuel powering the vehicle. Can be Diesel, Petrol, LPG, LNG, CNG, Ethanol, Propane, Hydrogen, Electric. (LPG=Liquefied Petroleum Gas,  LNG=Liquefied Natural Gas). Used f.e. for environmental zone restrictions, toll cost calculation, consumption based routing for Electric vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "heightAbove1stAxle",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hybrid",
            "in": "query",
            "description": "1=fuel+electric, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitedWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload and trailers/caravan incl. their payload. 7.5t or 7500kg or 16500lbs. For truck restrictions, speed profile, toll cost and environmental zone restrictions. See also vehicleWeight. Note that country wide weight restrictions depend on the number of axles and trailers as well, so it might be necessary to specify tem as well.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numericFuelType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "passengersCount",
            "in": "query",
            "description": "actual number of passengers. For toll cost. See also vehicle type carHOV.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedHazardousGoods",
            "in": "query",
            "description": "Comma separated list from explosive, gas, flammable, combustible, organic, poison, radioActive, corrosive, poisonousInhalation, harmfulToWater, other, allhazardousGoods, explosiveFlammable. For toll cost (only explosive and other) and for truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tiresCount",
            "in": "query",
            "description": "Number of tires. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerHeight",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerNumberAxles",
            "in": "query",
            "description": "Number of trailer axles. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerType",
            "in": "query",
            "description": "0=None, 1=Caravan, 2=Trailer, 3=RVTrailer, 4=BoatTrailer. For toll cost and recreational vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerWeight",
            "in": "query",
            "description": "Actual total weight of trailers with their payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailersCount",
            "in": "query",
            "description": "Number of trailers, 0...4. For toll cost and truck restrictions. 0=no trailer, 1=one or more trailers, 2=two or more trailers, 3=three or more trailers. For truck restrictions: 4=one or more semi-trailers.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnelCategory",
            "in": "query",
            "description": "Defines the tunnel categories the truck must NOT use. B, C, D or E. A tunnels have no restrictions. E tunnels have most restrictions. If C is defined, the route will use A and B tunnels but not C, D or E.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleNumberAxles",
            "in": "query",
            "description": "Number of axles excluding trailers. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload, but not trailers' weight or payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxle",
            "in": "query",
            "description": "Actual total weight per axle, incl. payload. 7.5t or 7500kg or 16500lbs. For toll cost and truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxleGroup",
            "in": "query",
            "description": "Semicolon separated list of vehicle weight [tons] per axle group. Each item is a tuple (name,value). Supported names are drive, single, tandem, triple, quad, quint. Example: &weightPerAxleGroup=drive:12;single:11;tandem:18",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "mode",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure",
            "in": "query",
            "description": "departure",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hasTrailer",
            "in": "query",
            "description": "hasTrailer",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidLinks",
            "in": "query",
            "description": "avoidLinks",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidAreas",
            "in": "query",
            "description": "avoidAreas",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "algo",
            "in": "query",
            "description": "algo",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "improveFor",
            "in": "query",
            "description": "improveFor",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jsonCallback",
            "in": "query",
            "description": "jsonCallback",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verbosity",
            "in": "query",
            "description": "verbosity",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requestId",
            "in": "query",
            "description": "requestId",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restTimes",
            "in": "query",
            "description": "restTimes",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "truckType",
            "in": "query",
            "description": "truckType",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "walkSpeed",
            "in": "query",
            "description": "walkSpeed",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "algopts",
            "in": "query",
            "description": "algopts",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calculation",
            "in": "query",
            "description": "calculation",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timingCompatibility",
            "in": "query",
            "description": "timingCompatibility",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "arrival",
            "in": "query",
            "description": "arrival",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "region",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Waypoints Sequence"
        ],
        "summary": "findSequence",
        "operationId": "findSequenceUsingPOST",
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commercial",
            "in": "query",
            "description": "1=vehicle registered for commercial use, 0=otherwise. For toll cost, environmental zone regulations and delivery-only zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabledEquipped",
            "in": "query",
            "description": "1=vehicle equipped to carry disabled people, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionType",
            "in": "query",
            "description": "1=EURO I, 2=EURO II, 3=EURO III, 4=EURO IV, 5=EURO V, 6=EURO VI, 7=EURO EEV, 8=Electric Vehicles. For toll cost and environmental zone restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionTypeForEnvZones",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelAndEmissionType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelType",
            "in": "query",
            "description": "Defines the fuel powering the vehicle. Can be Diesel, Petrol, LPG, LNG, CNG, Ethanol, Propane, Hydrogen, Electric. (LPG=Liquefied Petroleum Gas,  LNG=Liquefied Natural Gas). Used f.e. for environmental zone restrictions, toll cost calculation, consumption based routing for Electric vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "heightAbove1stAxle",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hybrid",
            "in": "query",
            "description": "1=fuel+electric, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitedWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload and trailers/caravan incl. their payload. 7.5t or 7500kg or 16500lbs. For truck restrictions, speed profile, toll cost and environmental zone restrictions. See also vehicleWeight. Note that country wide weight restrictions depend on the number of axles and trailers as well, so it might be necessary to specify tem as well.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numericFuelType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "passengersCount",
            "in": "query",
            "description": "actual number of passengers. For toll cost. See also vehicle type carHOV.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedHazardousGoods",
            "in": "query",
            "description": "Comma separated list from explosive, gas, flammable, combustible, organic, poison, radioActive, corrosive, poisonousInhalation, harmfulToWater, other, allhazardousGoods, explosiveFlammable. For toll cost (only explosive and other) and for truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tiresCount",
            "in": "query",
            "description": "Number of tires. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerHeight",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerNumberAxles",
            "in": "query",
            "description": "Number of trailer axles. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerType",
            "in": "query",
            "description": "0=None, 1=Caravan, 2=Trailer, 3=RVTrailer, 4=BoatTrailer. For toll cost and recreational vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerWeight",
            "in": "query",
            "description": "Actual total weight of trailers with their payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailersCount",
            "in": "query",
            "description": "Number of trailers, 0...4. For toll cost and truck restrictions. 0=no trailer, 1=one or more trailers, 2=two or more trailers, 3=three or more trailers. For truck restrictions: 4=one or more semi-trailers.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnelCategory",
            "in": "query",
            "description": "Defines the tunnel categories the truck must NOT use. B, C, D or E. A tunnels have no restrictions. E tunnels have most restrictions. If C is defined, the route will use A and B tunnels but not C, D or E.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleNumberAxles",
            "in": "query",
            "description": "Number of axles excluding trailers. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload, but not trailers' weight or payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxle",
            "in": "query",
            "description": "Actual total weight per axle, incl. payload. 7.5t or 7500kg or 16500lbs. For toll cost and truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxleGroup",
            "in": "query",
            "description": "Semicolon separated list of vehicle weight [tons] per axle group. Each item is a tuple (name,value). Supported names are drive, single, tandem, triple, quad, quint. Example: &weightPerAxleGroup=drive:12;single:11;tandem:18",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "mode",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure",
            "in": "query",
            "description": "departure",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hasTrailer",
            "in": "query",
            "description": "hasTrailer",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidLinks",
            "in": "query",
            "description": "avoidLinks",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidAreas",
            "in": "query",
            "description": "avoidAreas",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "algo",
            "in": "query",
            "description": "algo",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "improveFor",
            "in": "query",
            "description": "improveFor",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jsonCallback",
            "in": "query",
            "description": "jsonCallback",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verbosity",
            "in": "query",
            "description": "verbosity",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requestId",
            "in": "query",
            "description": "requestId",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restTimes",
            "in": "query",
            "description": "restTimes",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "truckType",
            "in": "query",
            "description": "truckType",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "walkSpeed",
            "in": "query",
            "description": "walkSpeed",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "algopts",
            "in": "query",
            "description": "algopts",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calculation",
            "in": "query",
            "description": "calculation",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timingCompatibility",
            "in": "query",
            "description": "timingCompatibility",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "arrival",
            "in": "query",
            "description": "arrival",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "region",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/v8/findsequence": {
      "post": {
        "tags": [
          "Waypoints Sequence"
        ],
        "summary": "Solve a (single) Vehicle Routing Problem. Compatible with the Multi Vehicle Routing API. PREVIEW - SUBJECT TO CHANGE!",
        "operationId": "postTourplanningProblem_2",
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Problem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Solution"
                }
              },
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/Solution"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    },
    "/v8/findsequence2": {
      "get": {
        "tags": [
          "Waypoints Sequence"
        ],
        "summary": "Compute best Sequence for Waypoints (Travelling Salesman Problem). Compatible with version 2.",
        "description": "Compute best Sequence for Waypoints (Travelling Salesman Problem), compatible with version 2",
        "operationId": "postTourplanningProblem_1",
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commercial",
            "in": "query",
            "description": "1=vehicle registered for commercial use, 0=otherwise. For toll cost, environmental zone regulations and delivery-only zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabledEquipped",
            "in": "query",
            "description": "1=vehicle equipped to carry disabled people, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionType",
            "in": "query",
            "description": "1=EURO I, 2=EURO II, 3=EURO III, 4=EURO IV, 5=EURO V, 6=EURO VI, 7=EURO EEV, 8=Electric Vehicles. For toll cost and environmental zone restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionTypeForEnvZones",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelAndEmissionType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelType",
            "in": "query",
            "description": "Defines the fuel powering the vehicle. Can be Diesel, Petrol, LPG, LNG, CNG, Ethanol, Propane, Hydrogen, Electric. (LPG=Liquefied Petroleum Gas,  LNG=Liquefied Natural Gas). Used f.e. for environmental zone restrictions, toll cost calculation, consumption based routing for Electric vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "heightAbove1stAxle",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hybrid",
            "in": "query",
            "description": "1=fuel+electric, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitedWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload and trailers/caravan incl. their payload. 7.5t or 7500kg or 16500lbs. For truck restrictions, speed profile, toll cost and environmental zone restrictions. See also vehicleWeight. Note that country wide weight restrictions depend on the number of axles and trailers as well, so it might be necessary to specify tem as well.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numericFuelType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "passengersCount",
            "in": "query",
            "description": "actual number of passengers. For toll cost. See also vehicle type carHOV.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedHazardousGoods",
            "in": "query",
            "description": "Comma separated list from explosive, gas, flammable, combustible, organic, poison, radioActive, corrosive, poisonousInhalation, harmfulToWater, other, allhazardousGoods, explosiveFlammable. For toll cost (only explosive and other) and for truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tiresCount",
            "in": "query",
            "description": "Number of tires. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerHeight",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerNumberAxles",
            "in": "query",
            "description": "Number of trailer axles. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerType",
            "in": "query",
            "description": "0=None, 1=Caravan, 2=Trailer, 3=RVTrailer, 4=BoatTrailer. For toll cost and recreational vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerWeight",
            "in": "query",
            "description": "Actual total weight of trailers with their payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailersCount",
            "in": "query",
            "description": "Number of trailers, 0...4. For toll cost and truck restrictions. 0=no trailer, 1=one or more trailers, 2=two or more trailers, 3=three or more trailers. For truck restrictions: 4=one or more semi-trailers.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnelCategory",
            "in": "query",
            "description": "Defines the tunnel categories the truck must NOT use. B, C, D or E. A tunnels have no restrictions. E tunnels have most restrictions. If C is defined, the route will use A and B tunnels but not C, D or E.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleNumberAxles",
            "in": "query",
            "description": "Number of axles excluding trailers. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload, but not trailers' weight or payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxle",
            "in": "query",
            "description": "Actual total weight per axle, incl. payload. 7.5t or 7500kg or 16500lbs. For toll cost and truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxleGroup",
            "in": "query",
            "description": "Semicolon separated list of vehicle weight [tons] per axle group. Each item is a tuple (name,value). Supported names are drive, single, tandem, triple, quad, quint. Example: &weightPerAxleGroup=drive:12;single:11;tandem:18",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "mode",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure",
            "in": "query",
            "description": "departure",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hasTrailer",
            "in": "query",
            "description": "hasTrailer",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidLinks",
            "in": "query",
            "description": "avoidLinks",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidAreas",
            "in": "query",
            "description": "avoidAreas",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "algo",
            "in": "query",
            "description": "algo",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "improveFor",
            "in": "query",
            "description": "improveFor",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jsonCallback",
            "in": "query",
            "description": "jsonCallback",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verbosity",
            "in": "query",
            "description": "verbosity",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requestId",
            "in": "query",
            "description": "requestId",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restTimes",
            "in": "query",
            "description": "restTimes",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "truckType",
            "in": "query",
            "description": "truckType",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "walkSpeed",
            "in": "query",
            "description": "walkSpeed",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "algopts",
            "in": "query",
            "description": "algopts",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calculation",
            "in": "query",
            "description": "calculation",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timingCompatibility",
            "in": "query",
            "description": "timingCompatibility",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "arrival",
            "in": "query",
            "description": "arrival",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "region",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Waypoints Sequence"
        ],
        "summary": "Compute best Sequence for Waypoints (Travelling Salesman Problem). Compatible with version 2.",
        "description": "Compute best Sequence for Waypoints (Travelling Salesman Problem), compatible with version 2",
        "operationId": "postTourplanningProblem",
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "description": "app_id",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commercial",
            "in": "query",
            "description": "1=vehicle registered for commercial use, 0=otherwise. For toll cost, environmental zone regulations and delivery-only zones.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabledEquipped",
            "in": "query",
            "description": "1=vehicle equipped to carry disabled people, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionType",
            "in": "query",
            "description": "1=EURO I, 2=EURO II, 3=EURO III, 4=EURO IV, 5=EURO V, 6=EURO VI, 7=EURO EEV, 8=Electric Vehicles. For toll cost and environmental zone restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emissionTypeForEnvZones",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelAndEmissionType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fuelType",
            "in": "query",
            "description": "Defines the fuel powering the vehicle. Can be Diesel, Petrol, LPG, LNG, CNG, Ethanol, Propane, Hydrogen, Electric. (LPG=Liquefied Petroleum Gas,  LNG=Liquefied Natural Gas). Used f.e. for environmental zone restrictions, toll cost calculation, consumption based routing for Electric vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "heightAbove1stAxle",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hybrid",
            "in": "query",
            "description": "1=fuel+electric, 0=otherwise. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions and toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitedWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload and trailers/caravan incl. their payload. 7.5t or 7500kg or 16500lbs. For truck restrictions, speed profile, toll cost and environmental zone restrictions. See also vehicleWeight. Note that country wide weight restrictions depend on the number of axles and trailers as well, so it might be necessary to specify tem as well.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "numericFuelType",
            "in": "query",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "passengersCount",
            "in": "query",
            "description": "actual number of passengers. For toll cost. See also vehicle type carHOV.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shippedHazardousGoods",
            "in": "query",
            "description": "Comma separated list from explosive, gas, flammable, combustible, organic, poison, radioActive, corrosive, poisonousInhalation, harmfulToWater, other, allhazardousGoods, explosiveFlammable. For toll cost (only explosive and other) and for truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tiresCount",
            "in": "query",
            "description": "Number of tires. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerHeight",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerNumberAxles",
            "in": "query",
            "description": "Number of trailer axles. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerType",
            "in": "query",
            "description": "0=None, 1=Caravan, 2=Trailer, 3=RVTrailer, 4=BoatTrailer. For toll cost and recreational vehicles.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailerWeight",
            "in": "query",
            "description": "Actual total weight of trailers with their payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trailersCount",
            "in": "query",
            "description": "Number of trailers, 0...4. For toll cost and truck restrictions. 0=no trailer, 1=one or more trailers, 2=two or more trailers, 3=three or more trailers. For truck restrictions: 4=one or more semi-trailers.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tunnelCategory",
            "in": "query",
            "description": "Defines the tunnel categories the truck must NOT use. B, C, D or E. A tunnels have no restrictions. E tunnels have most restrictions. If C is defined, the route will use A and B tunnels but not C, D or E.",
            "required": false,
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleNumberAxles",
            "in": "query",
            "description": "Number of axles excluding trailers. For toll cost and for country wide truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vehicleWeight",
            "in": "query",
            "description": "Actual total weight of vehicle incl. payload, but not trailers' weight or payload. 7.5t or 7500kg or 16500lbs. See also limitedWeight. For toll cost.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxle",
            "in": "query",
            "description": "Actual total weight per axle, incl. payload. 7.5t or 7500kg or 16500lbs. For toll cost and truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weightPerAxleGroup",
            "in": "query",
            "description": "Semicolon separated list of vehicle weight [tons] per axle group. Each item is a tuple (name,value). Supported names are drive, single, tandem, triple, quad, quint. Example: &weightPerAxleGroup=drive:12;single:11;tandem:18",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "350cm or 3.5m or 138in. For truck restrictions.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "app_code",
            "in": "query",
            "description": "app_code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "description": "mode",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departure",
            "in": "query",
            "description": "departure",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hasTrailer",
            "in": "query",
            "description": "hasTrailer",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidLinks",
            "in": "query",
            "description": "avoidLinks",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidAreas",
            "in": "query",
            "description": "avoidAreas",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "algo",
            "in": "query",
            "description": "algo",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "improveFor",
            "in": "query",
            "description": "improveFor",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jsonCallback",
            "in": "query",
            "description": "jsonCallback",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "verbosity",
            "in": "query",
            "description": "verbosity",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requestId",
            "in": "query",
            "description": "requestId",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restTimes",
            "in": "query",
            "description": "restTimes",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "truckType",
            "in": "query",
            "description": "truckType",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "walkSpeed",
            "in": "query",
            "description": "walkSpeed",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "algopts",
            "in": "query",
            "description": "algopts",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "calculation",
            "in": "query",
            "description": "calculation",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timingCompatibility",
            "in": "query",
            "description": "timingCompatibility",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "arrival",
            "in": "query",
            "description": "arrival",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "region",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "apiKey": [

            ]
          },
          {
            "bearerTokenAuth": [

            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Activity": {
        "title": "Activity",
        "required": [
          "jobId",
          "type"
        ],
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "description": "A unique identifier of an entity. Avoid referencing any confidential or personal information as part of the `Id`. ",
            "example": "7f3423c2-784a-4983-b472-e14107d5a54a"
          },
          "jobTag": {
            "type": "string",
            "description": "A free text associated with the job place. Avoid referencing any confidential or personal information as part of the `JobTag`. ",
            "example": "some_tag"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "time": {
            "$ref": "#/components/schemas/Interval"
          },
          "type": {
            "type": "string",
            "enum": [
              "arrival",
              "break",
              "delivery",
              "departure",
              "pickup"
            ]
          }
        },
        "description": "Activity to be performed. If location or time omitted then values defined on parent stop are used."
      },
      "AttributeDocBean": {
        "title": "AttributeDocBean",
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "layers": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          }
        }
      },
      "AvoidRoutes": {
        "title": "AvoidRoutes",
        "type": "object",
        "properties": {
          "features": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "dirtRoad",
                "ferry",
                "motorway",
                "tollRoad",
                "tunnel"
              ]
            }
          }
        },
        "description": "Avoid routes that violate these properties."
      },
      "BoundingBox": {
        "title": "BoundingBox",
        "type": "object",
        "properties": {
          "bottomRight": {
            "$ref": "#/components/schemas/Coordinate"
          },
          "topLeft": {
            "$ref": "#/components/schemas/Coordinate"
          }
        }
      },
      "CarProfile": {
        "title": "CarProfile",
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "avoid": {
            "$ref": "#/components/schemas/AvoidRoutes"
          },
          "departureTime": {
            "type": "string",
            "description": "Represents date-time unit as defined by RFC3339.",
            "format": "date-time",
            "example": {
              "offset": {
                "totalSeconds": 0,
                "id": "Z",
                "rules": {
                  "fixedOffset": true,
                  "transitions": [

                  ],
                  "transitionRules": [

                  ]
                }
              },
              "nano": 0,
              "year": 2020,
              "monthValue": 7,
              "dayOfMonth": 4,
              "hour": 0,
              "minute": 0,
              "second": 0,
              "month": "JULY",
              "dayOfWeek": "SATURDAY",
              "dayOfYear": 186
            }
          },
          "name": {
            "type": "string",
            "description": "Specifies name of profile. Avoid assigning real-life identifiers, such as for instance a vehicle license plate Id as the `profileName` of the routing profile. ",
            "example": "normal_car"
          },
          "type": {
            "type": "string",
            "enum": [
              "car"
            ]
          }
        },
        "description": "Routing calculations for cars. The `departureTime` property allows to specify a custom date-time for which `traffic optimization` in routing calculations shall be performed. See `configuration.optimizations.traffic` for details. "
      },
      "Center": {
        "title": "Center",
        "type": "object",
        "properties": {
          "globalWayPointSeqNr": {
            "type": "integer",
            "format": "int32"
          },
          "linkId": {
            "type": "string"
          },
          "mappedPosition": {
            "description": "map matched coordinate",
            "$ref": "#/components/schemas/Coordinate"
          },
          "mappedRoadName": {
            "type": "string",
            "description": "Base name of the road. Empty means unknown or valid unnamed."
          },
          "originalPosition": {
            "description": "from request",
            "$ref": "#/components/schemas/Coordinate"
          },
          "shapeIndex": {
            "type": "integer",
            "description": "index of the first shape coordinate in the shape array",
            "format": "int32"
          },
          "sideOfStreet": {
            "type": "string",
            "description": "indicates whether the waypoint is on the left or right side of the link in the direction of driving. Possible values are left|right|neither. The value 'neither' means that the waypoint is within 3 meters range away from the link"
          },
          "type": {
            "type": "string",
            "description": "indicate whether waypoint is passThrough or stopOver"
          },
          "userLabel": {
            "type": "string",
            "description": "Waypoint label specified by user."
          },
          "waypointType": {
            "type": "string",
            "description": "indicate whether waypoint is planned waypoint, learned stop or last tracepoint from RME"
          }
        }
      },
      "Component": {
        "title": "Component",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IsolineLink"
            }
          },
          "shape": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        }
      },
      "Coordinate": {
        "title": "Coordinate",
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CostDetails": {
        "title": "CostDetails",
        "type": "object",
        "properties": {
          "driverCost": {
            "type": "string",
            "description": "computed from request's driver_cost value and the travel time (with or without ferry time)"
          },
          "energyCost": {
            "type": "string",
            "description": "computed based on request's consumptiondetails"
          },
          "optionalValue": {
            "type": "string",
            "description": "value earned by picking + dropping optional waypoints"
          },
          "tollCost": {
            "type": "string",
            "description": "total toll fee"
          },
          "totalCost": {
            "type": "number",
            "format": "double"
          },
          "vehicleCost": {
            "type": "string",
            "description": "computed from request's vehicle_cost value and the travel distance (with or without ferry travel)"
          }
        }
      },
      "Costs": {
        "title": "Costs",
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "currency unit of the costs"
          },
          "details": {
            "$ref": "#/components/schemas/CostDetails"
          },
          "totalCost": {
            "type": "string",
            "description": "sum of all cost elements"
          }
        }
      },
      "CurrencyAmount": {
        "title": "CurrencyAmount",
        "type": "object",
        "properties": {
          "adminId": {
            "type": "string",
            "description": "country's admin place id"
          },
          "amountInTargetCurrency": {
            "type": "number",
            "format": "double"
          },
          "country": {
            "type": "string"
          },
          "languageCode": {
            "type": "string",
            "description": "Language code of toll system name"
          },
          "name": {
            "type": "string",
            "description": "Toll system name"
          },
          "tollSystemId": {
            "type": "string"
          }
        }
      },
      "DeleteLayersResponse": {
        "title": "DeleteLayersResponse",
        "type": "object",
        "properties": {
          "deletedLayers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Fleet": {
        "title": "Fleet",
        "required": [
          "profiles",
          "types"
        ],
        "type": "object",
        "properties": {
          "profiles": {
            "type": "array",
            "example": "[{\"type\":\"car\",\"name\":\"normal_car\"}]",
            "items": {
              "$ref": "#/components/schemas/OneOfCarProfileTruckProfile"
            }
          },
          "types": {
            "type": "array",
            "description": "A list of vehicle types. The upper limit for the number of vehicle types is 35 for the synchronous problems endpoint and 150 for the asynchronous problems endpoint. ",
            "items": {
              "$ref": "#/components/schemas/VehicleType"
            }
          }
        },
        "description": "A fleet represented by various vehicle types for serving jobs."
      },
      "Geometry": {
        "title": "Geometry",
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Attribute/value map"
          },
          "geometry": {
            "type": "string",
            "description": "WKT string"
          }
        }
      },
      "GeometrySearchResponse": {
        "title": "GeometrySearchResponse",
        "type": "object",
        "properties": {
          "geometries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry"
            }
          },
          "meta": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchMetaResponse"
            }
          }
        }
      },
      "GroupingGeometry": {
        "title": "GroupingGeometry",
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Attribute/value map"
          },
          "geometry": {
            "type": "string",
            "description": "WKT string"
          }
        }
      },
      "IndexDocBean": {
        "title": "IndexDocBean",
        "type": "object",
        "properties": {
          "exampleNames": {
            "type": "string"
          },
          "exampleUrlParams": {
            "type": "string"
          },
          "indexedColumnNames": {
            "type": "string"
          },
          "indexedLayerName": {
            "type": "string"
          }
        }
      },
      "IndexResponse": {
        "title": "IndexResponse",
        "type": "object",
        "properties": {
          "Layers": {
            "type": "array",
            "description": "List of layers containing this attribute value. Usually 1 layer, but can be multiple when request a ..._FCN layer.",
            "items": {
              "$ref": "#/components/schemas/IndexResponseLayer"
            }
          }
        }
      },
      "IndexResponseLayer": {
        "title": "IndexResponseLayer",
        "type": "object",
        "properties": {
          "layer": {
            "type": "string"
          },
          "level": {
            "type": "integer",
            "description": "Tiling level of the layer.",
            "format": "int32"
          },
          "tileXYs": {
            "type": "array",
            "description": "tileX and tileY components of the tile ID.",
            "items": {
              "$ref": "#/components/schemas/IndexTileCoords"
            }
          }
        }
      },
      "IndexTileCoords": {
        "title": "IndexTileCoords",
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Interval": {
        "title": "Interval",
        "required": [
          "end",
          "start"
        ],
        "type": "object",
        "properties": {
          "end": {
            "type": "string",
            "description": "Represents date-time unit as defined by RFC3339.",
            "format": "date-time",
            "example": {
              "offset": {
                "totalSeconds": 0,
                "id": "Z",
                "rules": {
                  "fixedOffset": true,
                  "transitions": [

                  ],
                  "transitionRules": [

                  ]
                }
              },
              "nano": 0,
              "year": 2020,
              "monthValue": 7,
              "dayOfMonth": 4,
              "hour": 0,
              "minute": 0,
              "second": 0,
              "month": "JULY",
              "dayOfWeek": "SATURDAY",
              "dayOfYear": 186
            }
          },
          "start": {
            "type": "string",
            "description": "Represents date-time unit as defined by RFC3339.",
            "format": "date-time",
            "example": {
              "offset": {
                "totalSeconds": 0,
                "id": "Z",
                "rules": {
                  "fixedOffset": true,
                  "transitions": [

                  ],
                  "transitionRules": [

                  ]
                }
              },
              "nano": 0,
              "year": 2020,
              "monthValue": 7,
              "dayOfMonth": 4,
              "hour": 0,
              "minute": 0,
              "second": 0,
              "month": "JULY",
              "dayOfWeek": "SATURDAY",
              "dayOfYear": 186
            }
          }
        },
        "description": "Represents an activity interval."
      },
      "Isoline": {
        "title": "Isoline",
        "type": "object",
        "properties": {
          "component": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Component"
            }
          },
          "range": {
            "type": "number",
            "format": "double"
          },
          "rangeType": {
            "type": "string"
          }
        }
      },
      "IsolineLink": {
        "title": "IsolineLink",
        "type": "object",
        "properties": {
          "functionalClass": {
            "type": "integer",
            "format": "int32"
          },
          "linkId": {
            "type": "string"
          },
          "shape": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        }
      },
      "IsolineResponse": {
        "title": "IsolineResponse",
        "type": "object",
        "properties": {
          "destination": {
            "$ref": "#/components/schemas/Center"
          },
          "isoline": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Isoline"
            }
          },
          "start": {
            "$ref": "#/components/schemas/Center"
          }
        }
      },
      "Job": {
        "title": "Job",
        "required": [
          "id",
          "places"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Specifies id of the job. Avoid assigning real-life identifiers, such as for instance a vehicle license plate Id as the `id`. "
          },
          "places": {
            "$ref": "#/components/schemas/JobPlaces"
          },
          "skills": {
            "type": "array",
            "description": "A list of skills for a vehicle or a job.",
            "example": "[\"fridge\"]",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Represents a job with one or many sub jobs."
      },
      "JobPlace": {
        "title": "JobPlace",
        "required": [
          "demand",
          "duration",
          "location"
        ],
        "type": "object",
        "properties": {
          "demand": {
            "type": "array",
            "description": "Unit of measure, e.g. volume, mass, size, etc.",
            "example": "[10,5]",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "duration": {
            "type": "integer",
            "description": "Represents duration in seconds.",
            "format": "int32",
            "example": 180
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "tag": {
            "type": "string",
            "description": "A free text associated with the job place. Avoid referencing any confidential or personal information as part of the `JobTag`. ",
            "example": "some_tag"
          },
          "times": {
            "type": "array",
            "description": "Represents multiple time windows.",
            "example": "[[\"2020-07-04T08:00:00Z\",\"2020-07-04T10:00:00Z\"],[\"2020-07-04T16:00:00Z\",\"2020-07-04T18:00:00Z\"]]",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "description": "A place where a part or a whole job should be done."
      },
      "JobPlaces": {
        "title": "JobPlaces",
        "type": "object",
        "properties": {
          "deliveries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobPlace"
            }
          },
          "pickups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobPlace"
            }
          }
        },
        "description": "Places where sub jobs to be performed. All pickups are done before any other delivery. Order of execution inside each group is any. At least one sub job must be specified."
      },
      "KeyValue": {
        "title": "KeyValue",
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        }
      },
      "LayerDetailDocBean": {
        "title": "LayerDetailDocBean",
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "isStaticContent": {
            "type": "boolean"
          },
          "referencedStaticContents": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tileRequestsLevel": {
            "type": "integer",
            "format": "int32"
          },
          "tileX": {
            "type": "integer",
            "format": "int32"
          },
          "tileY": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LayerDocBean": {
        "title": "LayerDocBean",
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "featureMapping": {
            "type": "string"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "tileLevel": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "LayerModifyResponse": {
        "title": "LayerModifyResponse",
        "type": "object",
        "properties": {
          "action": {
            "type": "string"
          }
        }
      },
      "LayerPermissionResponse": {
        "title": "LayerPermissionResponse",
        "type": "object"
      },
      "LayerUploadResponse": {
        "title": "LayerUploadResponse",
        "type": "object",
        "properties": {
          "storedTilesCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Leg": {
        "title": "Leg",
        "type": "object",
        "properties": {
          "arrivalBatteryCharge": {
            "type": "number",
            "description": "Indicates battery energy when reaching the recharge waypoint. Only available if the maneuver has a chargingStopOver.",
            "format": "double"
          },
          "baseTime": {
            "type": "integer",
            "format": "int32"
          },
          "boundingBox": {
            "$ref": "#/components/schemas/BoundingBox"
          },
          "firstPoint": {
            "type": "integer",
            "format": "int32"
          },
          "lastPoint": {
            "type": "integer",
            "format": "int32"
          },
          "length": {
            "type": "integer",
            "format": "int32"
          },
          "link": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "maneuver": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Maneuver"
            }
          },
          "shape": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "stayingTime": {
            "type": "integer",
            "description": "Indicates time spent on recharging(in seconds). Only available if the maneuver has a chargingStopOver.",
            "format": "int32"
          },
          "targetBatteryCharge": {
            "type": "number",
            "description": "Indicates battery energy after charging when leaving the recharge waypoint. Only available if the maneuver has a chargingStopOver.",
            "format": "double"
          },
          "trafficTime": {
            "type": "integer",
            "format": "int32"
          },
          "travelTime": {
            "type": "integer",
            "format": "int32"
          },
          "turnByTurnManeuver": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TurnByTurnManeuver"
            }
          }
        }
      },
      "Link": {
        "title": "Link",
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/KeyValue"
                }
              }
            },
            "description": "requested PDE layer attributes for the link"
          },
          "confidence": {
            "type": "number",
            "description": "0...1 link match confidence (only for route match mode)",
            "format": "double"
          },
          "consumption": {
            "type": "number",
            "description": "energy consumption to traverse the link, in target currency",
            "format": "double"
          },
          "cost": {
            "description": "cost to traverse the link",
            "$ref": "#/components/schemas/CostDetails"
          },
          "functionalClass": {
            "type": "integer",
            "format": "int32"
          },
          "length": {
            "type": "number",
            "description": "meter",
            "format": "double"
          },
          "linkId": {
            "type": "string",
            "description": "Permanent version id (HERE core map)"
          },
          "remainDistance": {
            "type": "integer",
            "description": "meters left when entering this link, for the entire route (not just in between legs)",
            "format": "int64"
          },
          "remainTime": {
            "type": "integer",
            "description": "seconds left when entering this link, for the entire route (not just in between legs)",
            "format": "int64"
          },
          "shape": {
            "type": "array",
            "description": "List of WGS84 degree latitude/longitude coordinates in driving direction sequence order",
            "items": {
              "type": "number"
            }
          },
          "timezone": {
            "type": "integer",
            "description": "Timezone offset to UTC in minutes when the time zone of the link changes compared to previous link",
            "format": "int32"
          },
          "warning": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseIssue"
            }
          }
        }
      },
      "ListLayersResponse": {
        "title": "ListLayersResponse",
        "type": "object",
        "properties": {
          "layers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Location": {
        "title": "Location",
        "required": [
          "lat",
          "lng"
        ],
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "description": "Specifies latitude.",
            "format": "double",
            "example": 52.53088
          },
          "lng": {
            "type": "number",
            "description": "Specifies longitude.",
            "format": "double",
            "example": 13.38471
          }
        },
        "description": "Represents geospatial location defined by latitude and longitude."
      },
      "Maneuver": {
        "title": "Maneuver",
        "type": "object",
        "properties": {
          "action": {
            "type": "string"
          },
          "direction": {
            "type": "string"
          },
          "firstPoint": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string"
          },
          "instruction": {
            "type": "string",
            "description": "tagged driver instruction text in the requested language"
          },
          "instructionAfter": {
            "type": "string"
          },
          "instructionBefore": {
            "type": "string"
          },
          "lanes": {
            "type": "string",
            "description": "List of lane infos, viewed into driving direction, from left to right. Applicable lanes marked '*', n = not allowed for vehicle or direction, numbers denote arrows, see Map Attributes layer LANE_FCn attribute DIRECTION_CATEGORY."
          },
          "lastPoint": {
            "type": "integer",
            "format": "int32"
          },
          "length": {
            "type": "integer",
            "description": "Distance [meter] to drive until to this maneuver point",
            "format": "int32"
          },
          "nextRoadName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoadName"
            }
          },
          "position": {
            "$ref": "#/components/schemas/ManeuverPosition"
          },
          "roadName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoadName"
            }
          },
          "travelTime": {
            "type": "integer",
            "description": "Time [sec] to drive until to this maneuver point",
            "format": "int32"
          }
        }
      },
      "ManeuverPosition": {
        "title": "ManeuverPosition",
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "MapAttributesV8Response": {
        "title": "MapAttributesV8Response",
        "type": "object",
        "properties": {
          "Tiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TileResponseV8"
            }
          },
          "geometries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupingGeometry"
            }
          },
          "meta": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchMetaResponse"
            }
          }
        }
      },
      "MapDocBean": {
        "title": "MapDocBean",
        "type": "object",
        "properties": {
          "coverage": {
            "type": "string"
          },
          "isLatest": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "releaseYearAndQuarter": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "MapDocResponse": {
        "title": "MapDocResponse",
        "type": "object",
        "properties": {
          "maps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MapDocBean"
            }
          }
        }
      },
      "MatchedSubPaths": {
        "title": "MatchedSubPaths",
        "type": "object",
        "properties": {
          "segments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Segments"
            }
          }
        }
      },
      "MatchedVehicleType": {
        "title": "MatchedVehicleType",
        "type": "object",
        "properties": {
          "confidence": {
            "type": "number",
            "description": "confidence value of the match 0 ... 1",
            "format": "double"
          },
          "subType": {
            "type": "string",
            "description": "light, medium or heavy, applicable only for truck"
          },
          "type": {
            "type": "string",
            "description": "car, truck or pedestrian"
          }
        }
      },
      "MetaResponse": {
        "title": "MetaResponse",
        "type": "object",
        "properties": {
          "layerName": {
            "type": "string"
          },
          "level": {
            "type": "string"
          },
          "mapRegion": {
            "type": "string"
          },
          "mapRelease": {
            "type": "string"
          },
          "rowCount": {
            "type": "string"
          },
          "tileX": {
            "type": "string"
          },
          "tileY": {
            "type": "string"
          }
        }
      },
      "MetaResponseV8": {
        "title": "MetaResponseV8",
        "type": "object",
        "properties": {
          "layerName": {
            "type": "string"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "mapRegion": {
            "type": "string"
          },
          "mapRelease": {
            "type": "string"
          },
          "tileId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ModelConfiguration": {
        "title": "ModelConfiguration",
        "type": "object",
        "properties": {
          "optimizations": {
            "$ref": "#/components/schemas/Optimizations"
          }
        },
        "description": "Provides the way to tweak solver behaviour."
      },
      "Note": {
        "title": "Note",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "pathSegmentSeqNum": {
            "type": "integer",
            "format": "int32"
          },
          "tracePointSeqNum": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OLSRouteMatch": {
        "title": "OLSRouteMatch",
        "type": "object",
        "properties": {
          "UnmatchedIndicesInTrace": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "matchedSubPaths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchedSubPaths"
            }
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          },
          "refReplacements": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "transportModeLikelihoods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransportModeLikelihood"
            }
          }
        }
      },
      "OneOfCarProfileTruckProfile": {
        "title": "OneOfCarProfileTruckProfile",
        "type": "object",
        "properties": {
          "carProfile": {
            "$ref": "#/components/schemas/CarProfile"
          },
          "name": {
            "type": "string"
          },
          "truckProfile": {
            "$ref": "#/components/schemas/TruckProfile"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "Optimizations": {
        "title": "Optimizations",
        "type": "object",
        "properties": {
          "traffic": {
            "type": "string",
            "description": "Specifies what kind of traffic information should be considered for routing: * `liveOrHistorical`: for departure times in the future, either live or historical traffic data are applied depending on how far in the future the departure time is. For departure times in the past, only historical traffic data are applied. The departure time of a vehicle type can be configured via the vehicle profile's optional departureTime property. In case this property is omitted when defining a vehicle profile, the earliest shift start time of all vehicle types sharing that same vehicle profile is used as that profile's departure time. Choose this setting if all locations are within a radius of 190 km and you want to use live traffic data whenever possible. * `historicalOnly`: only free-flow speeds based on historical traffic data are applied. Choose this setting if you want to avoid live traffic data usage. * `automatic`: the same as `liveOrHistorical`, if all coordinates are within a radius of 190 km, otherwise the same as `historicalOnly`. Choose this setting if you want the service to decide automatically what is the best option. ",
            "example": "liveOrHistorical",
            "enum": [
              "automatic",
              "historicalOnly",
              "liveOrHistorical"
            ]
          },
          "waitingTime": {
            "$ref": "#/components/schemas/OptimizationsWaitingTime"
          }
        },
        "description": "Defines parameter for additional optimizations."
      },
      "OptimizationsWaitingTime": {
        "title": "OptimizationsWaitingTime",
        "required": [
          "reduce"
        ],
        "type": "object",
        "properties": {
          "bufferTime": {
            "type": "integer",
            "description": "Specifies a minimum buffer time we have to keep before time window ends time (in minutes).",
            "format": "int32",
            "example": 15
          },
          "reduce": {
            "type": "boolean",
            "description": "Enables or disables waiting time optimization.",
            "example": false
          }
        },
        "description": "Configures departure time optimization which tries to adapt the starting time of the tour in order to reduce waiting time as a consequence of a vehicle arriving at a stop before the starting time of the time window defined for serving the job."
      },
      "OverlaySubmitResponse": {
        "title": "OverlaySubmitResponse",
        "type": "object",
        "properties": {
          "layers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "meta": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchMetaResponse"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Pass": {
        "title": "Pass",
        "type": "object",
        "properties": {
          "annual": {
            "type": "boolean"
          },
          "extendedAnnual": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nrOfDays": {
            "type": "integer",
            "format": "int32"
          },
          "nrOfMonths": {
            "type": "integer",
            "format": "int32"
          },
          "seniorPass": {
            "type": "boolean"
          }
        }
      },
      "Plan": {
        "title": "Plan",
        "required": [
          "jobs"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "type": "array",
            "description": "List of all jobs. When checking against the upper limit for the number of jobs, the total amount of jobs is calculated as the sum of all pickups and deliveries defined in each job. The upper limit is 250 jobs for the synchronous problems endpoint and 3000 for the asynchronous problems endpoint. ",
            "items": {
              "$ref": "#/components/schemas/Job"
            }
          },
          "relations": {
            "type": "array",
            "description": "Represents a list of preferred relations between jobs, vehicles.",
            "items": {
              "$ref": "#/components/schemas/Relation"
            }
          }
        },
        "description": "Represents the list of jobs to be served."
      },
      "Point": {
        "title": "Point",
        "type": "object",
        "properties": {
          "indexInTrace": {
            "type": "integer",
            "format": "int32"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "offset": {
            "type": "number",
            "format": "double"
          },
          "originalLocation": {
            "$ref": "#/components/schemas/Location"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "Problem": {
        "title": "Problem",
        "required": [
          "fleet",
          "plan"
        ],
        "type": "object",
        "properties": {
          "configuration": {
            "$ref": "#/components/schemas/ModelConfiguration"
          },
          "fleet": {
            "$ref": "#/components/schemas/Fleet"
          },
          "id": {
            "type": "string",
            "description": "A unique identifier of an entity. Avoid referencing any confidential or personal information as part of the `Id`. ",
            "example": "7f3423c2-784a-4983-b472-e14107d5a54a"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          }
        },
        "description": "Vehicle Routing Problem definition including resources to solve it."
      },
      "Relation": {
        "title": "Relation",
        "required": [
          "jobs",
          "type",
          "vehicleId"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "type": "array",
            "description": "Ids of jobs or reserved activities. There are three reserved activity ids: * `departure`: specifies departure activity. Should be first in the list. * `break`: specifies vehicle break activity * `arrival`: specifies arrival activity. Should be last in the list. ",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "flexible",
              "sequence",
              "tour"
            ]
          },
          "vehicleId": {
            "type": "string",
            "description": "A unique identifier of an entity. Avoid referencing any confidential or personal information as part of the `Id`. ",
            "example": "7f3423c2-784a-4983-b472-e14107d5a54a"
          }
        },
        "description": "Specifies a relation between multiple jobs and a particular vehicle. A vehicle is defined by its id which should follow the pattern `${vehicleType}_${sequence_index}`. "
      },
      "Response": {
        "title": "Response",
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "Language used in maneuver instructions. 2 letter language code + 2 letter ISO country code."
          },
          "route": {
            "type": "array",
            "description": "Route alternatives. The first route alternative has the minimum cost.",
            "items": {
              "$ref": "#/components/schemas/Route"
            }
          },
          "warnings": {
            "type": "object",
            "description": "Warnings that are either globally for the request or apply to the first route alternative."
          }
        },
        "description": "Calculate route response"
      },
      "ResponseIssue": {
        "title": "ResponseIssue",
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "duration": {
            "type": "integer",
            "format": "int64"
          },
          "isoCountryCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "plannedWayPointSeqNum": {
            "type": "integer",
            "format": "int32"
          },
          "routeLinkSeqNum": {
            "type": "integer",
            "format": "int32"
          },
          "toTracePointSeqNum": {
            "type": "integer",
            "format": "int32"
          },
          "tracePointSeqNum": {
            "type": "integer",
            "format": "int32"
          },
          "truckRestrictionCategoryCode": {
            "type": "integer",
            "format": "int32"
          },
          "wayPointSeqNum": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RoadName": {
        "title": "RoadName",
        "type": "object",
        "properties": {
          "language": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "Route": {
        "title": "Route",
        "type": "object",
        "properties": {
          "boatFerry": {
            "type": "boolean",
            "description": "set if the route uses a boat ferry",
            "example": false
          },
          "boundingBox": {
            "$ref": "#/components/schemas/BoundingBox"
          },
          "cost": {
            "$ref": "#/components/schemas/Costs"
          },
          "leg": {
            "type": "array",
            "description": "one leg traverses between two mandatory stopover waypoints",
            "items": {
              "$ref": "#/components/schemas/Leg"
            }
          },
          "matchedVehicleType": {
            "type": "array",
            "description": "most probable vehicle type(s), only for route match mode",
            "items": {
              "$ref": "#/components/schemas/MatchedVehicleType"
            }
          },
          "mode": {
            "description": "from the request",
            "$ref": "#/components/schemas/RouteMode"
          },
          "railFerry": {
            "type": "boolean",
            "description": "set if the route uses a rail ferry",
            "example": false
          },
          "shape": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "summary": {
            "$ref": "#/components/schemas/Summary"
          },
          "summaryByCountry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouteSummaryByCountry"
            }
          },
          "tollCost": {
            "description": "the requested toll cost rollups",
            "$ref": "#/components/schemas/TCResponse"
          },
          "waypoint": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WayPoint"
            }
          }
        }
      },
      "RouteMode": {
        "title": "RouteMode",
        "type": "object",
        "properties": {
          "trafficMode": {
            "type": "string",
            "description": "from request: disabled or enabled"
          },
          "transportModes": {
            "type": "array",
            "description": "request's vehicle type",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "description": "from request: shortest, fastest or matched (route match mode)"
          }
        }
      },
      "RouteSummaryByCountry": {
        "title": "RouteSummaryByCountry",
        "type": "object",
        "properties": {
          "baseTime": {
            "type": "integer",
            "description": "travel time [sec] without considering traffic impact (use only if mode=traffic:disabled)",
            "format": "int64"
          },
          "country": {
            "type": "string",
            "description": "ISO country code"
          },
          "distance": {
            "type": "integer",
            "description": "travel distance [meter]",
            "format": "int64"
          },
          "tollRoadDistance": {
            "type": "integer",
            "description": "toll road distance [meter]",
            "format": "int64"
          },
          "trafficTime": {
            "type": "integer",
            "description": "travel time [sec] considering traffic impact (use only if mode=traffic:enabled)",
            "format": "int64"
          },
          "travelTime": {
            "type": "integer",
            "description": "travel time [sec] without considering traffic impact (use only if mode=traffic:disabled)",
            "format": "int64"
          }
        }
      },
      "RouteTollItem": {
        "title": "RouteTollItem",
        "type": "object",
        "properties": {
          "adminId": {
            "type": "integer",
            "description": "Admin place id of the country",
            "format": "int32"
          },
          "conditionId": {
            "type": "integer",
            "description": "Core map condition id, either type Toll Both or Usage Fee Required",
            "format": "int32"
          },
          "country": {
            "type": "string",
            "description": "3 letter ISO country code"
          },
          "fromSegmentIndex": {
            "type": "integer",
            "description": "Index of the first input segment ids covered by this toll fee.",
            "format": "int32"
          },
          "linkIds": {
            "type": "array",
            "description": "Sequence of link ids covered by this toll fee",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "toSegmentIndex": {
            "type": "integer",
            "description": "Index of the last input segment ids covered by this toll fee.",
            "format": "int32"
          },
          "tollCostAlternatives": {
            "type": "array",
            "description": "toll fee alternatives, depending on vehicle type, time of day, day of week, month, payment method, pass, transponder...",
            "items": {
              "$ref": "#/components/schemas/TollCost"
            }
          },
          "tollStructures": {
            "type": "array",
            "description": "Toll booth(s)/bridge(s) at start and/or end of this toll section",
            "items": {
              "$ref": "#/components/schemas/TollStructure"
            }
          },
          "tollSystem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TSystem"
            }
          },
          "tollType": {
            "type": "string",
            "description": "Uppercase letter (A=admin wide, F=system with km/weight/fixed fee, K=kilometer between toll booths based, S=pay per booth or pair of booths) indicates that payment happens here while lowercase (a, f, k, s, p, u)just informs that toll fee exists but is not payed here."
          },
          "topologySegmentIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "usageFeeRequiredTime": {
            "type": "string",
            "description": "Date/time definition when this toll fee applies, in the same format as in all map layers' DATE_TIMES fields"
          }
        }
      },
      "Schedule": {
        "title": "Schedule",
        "required": [
          "arrival",
          "departure"
        ],
        "type": "object",
        "properties": {
          "arrival": {
            "type": "string",
            "description": "Represents date-time unit as defined by RFC3339.",
            "example": "2020-07-04T00:00Z"
          },
          "departure": {
            "type": "string",
            "description": "Represents date-time unit as defined by RFC3339.",
            "example": "2020-07-04T00:00Z"
          }
        },
        "description": "Represents a schedule for stop."
      },
      "SearchMetaResponse": {
        "title": "SearchMetaResponse",
        "type": "object",
        "properties": {
          "lastUpdateTimeStamp": {
            "type": "integer",
            "description": "last modification milli second timestamp",
            "format": "int64"
          },
          "layerId": {
            "type": "string",
            "description": "the layername the geometry belongs to"
          },
          "search": {
            "type": "string"
          }
        }
      },
      "Segments": {
        "title": "Segments",
        "type": "object",
        "properties": {
          "points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Point"
            }
          },
          "ref": {
            "type": "string"
          }
        }
      },
      "ServiceConfigurationContent": {
        "title": "ServiceConfigurationContent",
        "type": "object",
        "properties": {
          "maxGetLinkInfoLinkIdsPerRequest": {
            "type": "string"
          },
          "maxIndexValuesPerRequest": {
            "type": "string"
          },
          "maxProximityLayers": {
            "type": "string"
          },
          "maxSearchResults": {
            "type": "string"
          },
          "maxTilesPerRequest": {
            "type": "string"
          }
        }
      },
      "ServiceConfigurationResponse": {
        "title": "ServiceConfigurationResponse",
        "type": "object",
        "properties": {
          "Configuration": {
            "$ref": "#/components/schemas/ServiceConfigurationContent"
          }
        }
      },
      "Solution": {
        "title": "Solution",
        "required": [
          "statistic"
        ],
        "type": "object",
        "properties": {
          "problemId": {
            "type": "string",
            "description": "A unique identifier of an entity. Avoid referencing any confidential or personal information as part of the `Id`. ",
            "example": "7f3423c2-784a-4983-b472-e14107d5a54a"
          },
          "statistic": {
            "$ref": "#/components/schemas/Statistic"
          },
          "tours": {
            "type": "array",
            "description": "List of tours.",
            "items": {
              "$ref": "#/components/schemas/Tour"
            }
          },
          "unassigned": {
            "type": "array",
            "description": "List of unassigned jobs.",
            "items": {
              "$ref": "#/components/schemas/UnassignedJob"
            }
          }
        },
        "description": "VRP solution."
      },
      "StaticContentDetailDocBean": {
        "title": "StaticContentDetailDocBean",
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "referencingLayers": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "StaticContentDocBean": {
        "title": "StaticContentDocBean",
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "referencingLayers": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Statistic": {
        "title": "Statistic",
        "required": [
          "cost",
          "distance",
          "duration",
          "times"
        ],
        "type": "object",
        "properties": {
          "cost": {
            "type": "number",
            "description": "Total cost.",
            "format": "double",
            "example": 1024
          },
          "distance": {
            "type": "integer",
            "description": "Total distance (in meters).",
            "format": "int32",
            "example": 32000
          },
          "duration": {
            "type": "integer",
            "description": "Represents duration in seconds.",
            "format": "int32",
            "example": 180
          },
          "times": {
            "$ref": "#/components/schemas/Timing"
          }
        },
        "description": "Represents statistic of one or multiple trips."
      },
      "Stop": {
        "title": "Stop",
        "required": [
          "activities",
          "load",
          "location",
          "time"
        ],
        "type": "object",
        "properties": {
          "activities": {
            "type": "array",
            "description": "List of activities to be done on stop.",
            "items": {
              "$ref": "#/components/schemas/Activity"
            }
          },
          "load": {
            "type": "array",
            "description": "Unit of measure, e.g. volume, mass, size, etc.",
            "example": "[10,5]",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "time": {
            "$ref": "#/components/schemas/Schedule"
          }
        },
        "description": "Represents a stop made to perform a job activities."
      },
      "Summary": {
        "title": "Summary",
        "type": "object",
        "properties": {
          "arrival": {
            "type": "string",
            "description": "same or earlier than request's arrival time"
          },
          "baseTime": {
            "type": "integer",
            "description": "travel time [sec] without considering traffic impact (use only if mode=traffic:disabled)",
            "format": "int64"
          },
          "departure": {
            "type": "string",
            "description": "same or later than request's departure time"
          },
          "distance": {
            "type": "integer",
            "description": "travel distance [meter]",
            "format": "int64"
          },
          "flags": {
            "type": "array",
            "description": "currently unused",
            "items": {
              "type": "string"
            }
          },
          "trafficTime": {
            "type": "integer",
            "description": "travel time [sec] considering traffic impact (use only if mode=traffic:enabled)",
            "format": "int64"
          },
          "travelTime": {
            "type": "integer",
            "description": "travel time [sec]",
            "format": "int64"
          }
        }
      },
      "TCResponse": {
        "title": "TCResponse",
        "type": "object",
        "properties": {
          "costsByCountry": {
            "type": "array",
            "description": "total toll cost per country",
            "items": {
              "$ref": "#/components/schemas/CurrencyAmount"
            }
          },
          "costsByCountryAndTollSystem": {
            "type": "array",
            "description": "total toll cost per country and toll system",
            "items": {
              "$ref": "#/components/schemas/CurrencyAmount"
            }
          },
          "costsByTollSystem": {
            "type": "array",
            "description": "total toll cost per toll system",
            "items": {
              "$ref": "#/components/schemas/CurrencyAmount"
            }
          },
          "routeTollItems": {
            "type": "array",
            "description": "list of all toll cost items (for rollups=none)",
            "items": {
              "$ref": "#/components/schemas/RouteTollItem"
            }
          },
          "totalCost": {
            "$ref": "#/components/schemas/CurrencyAmount"
          }
        }
      },
      "TSystem": {
        "title": "TSystem",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "languageCode": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "TileResponse": {
        "title": "TileResponse",
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/MetaResponse"
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TileRow"
            }
          }
        }
      },
      "TileResponseV8": {
        "title": "TileResponseV8",
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/MetaResponseV8"
          },
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TileRow"
            }
          }
        }
      },
      "TileRow": {
        "title": "TileRow",
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Timing": {
        "title": "Timing",
        "required": [
          "break",
          "driving",
          "serving",
          "waiting"
        ],
        "type": "object",
        "properties": {
          "break": {
            "type": "integer",
            "description": "Represents duration in seconds.",
            "format": "int32",
            "example": 180
          },
          "driving": {
            "type": "integer",
            "description": "Represents duration in seconds.",
            "format": "int32",
            "example": 180
          },
          "serving": {
            "type": "integer",
            "description": "Represents duration in seconds.",
            "format": "int32",
            "example": 180
          },
          "waiting": {
            "type": "integer",
            "description": "Represents duration in seconds.",
            "format": "int32",
            "example": 180
          }
        },
        "description": "Contains information about time consumption for various activities."
      },
      "TollCost": {
        "title": "TollCost",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "fee in native currency unit",
            "format": "double"
          },
          "amountInTargetCurrency": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "description": "the native currency unit"
          },
          "daylightHours": {
            "type": "integer",
            "description": "0=night, 1=day, =unspecified",
            "format": "int32"
          },
          "discountAvailable": {
            "type": "integer",
            "description": "0=no, 1=yes",
            "format": "int32"
          },
          "ferryType": {
            "type": "string"
          },
          "levelOfAccuracy": {
            "type": "string"
          },
          "methodOfPayment": {
            "type": "integer",
            "description": "bitmask: 1=cash, 2=bank card, 4=credit card, 8=pass subscription, 16=transponder, 32=vidoe toll charge, 64=exact cash, 128=travel card",
            "format": "int32"
          },
          "pass": {
            "$ref": "#/components/schemas/Pass"
          },
          "time": {
            "type": "string",
            "description": "Standard core map specification for validity periods. Examples: 1:N:N:XXXXXXX:0112:0000:0730,1:N:N:XXXXXXX:0112:1400:1600, 2:N:N:EASTER::800:1800, A:N:N:20021013:20200101:1000:1900, C:N:N:00010000:00050000:1230:1330, H:N:N:00010000:00120000:500:2400 I:N:N:00010010:00110010:1730:2400"
          },
          "vehicleSpecification": {
            "$ref": "#/components/schemas/VehicleSpecification"
          }
        }
      },
      "TollStructure": {
        "title": "TollStructure",
        "type": "object",
        "properties": {
          "conditionId": {
            "type": "integer",
            "format": "int32"
          },
          "languageCode": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "linkIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "topologySegmentIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "Tour": {
        "title": "Tour",
        "required": [
          "statistic",
          "stops",
          "typeId",
          "vehicleId"
        ],
        "type": "object",
        "properties": {
          "statistic": {
            "$ref": "#/components/schemas/Statistic"
          },
          "stops": {
            "type": "array",
            "description": "List of stops.",
            "items": {
              "$ref": "#/components/schemas/Stop"
            }
          },
          "typeId": {
            "type": "string",
            "description": "A unique identifier of an entity. Avoid referencing any confidential or personal information as part of the `Id`. ",
            "example": "7f3423c2-784a-4983-b472-e14107d5a54a"
          },
          "vehicleId": {
            "type": "string",
            "description": "A unique identifier of an entity. Avoid referencing any confidential or personal information as part of the `Id`. ",
            "example": "7f3423c2-784a-4983-b472-e14107d5a54a"
          }
        },
        "description": "Represents a tour with jobs made by single vehicle."
      },
      "TransportModeLikelihood": {
        "title": "TransportModeLikelihood",
        "type": "object",
        "properties": {
          "confidence": {
            "type": "number",
            "format": "double"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "TruckOptions": {
        "title": "TruckOptions",
        "type": "object",
        "properties": {
          "grossWeight": {
            "type": "integer",
            "description": "Total vehicle weight, including trailers and shipped goods, in kilograms.",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "Vehicle height, in centimeters.",
            "format": "int32"
          },
          "length": {
            "type": "integer",
            "description": "Vehicle length, in centimeters.",
            "format": "int32"
          },
          "shippedHazardousGoods": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "combustible",
                "corrosive",
                "explosive",
                "flammable",
                "gas",
                "harmfulToWater",
                "organic",
                "other",
                "poison",
                "poisonousInhalation",
                "radioactive"
              ]
            }
          },
          "tunnelCategory": {
            "type": "string",
            "description": "Specifies the tunnel category to restrict certain route streets. The route will pass only through tunnels of a less strict category.",
            "enum": [
              "B",
              "C",
              "D",
              "E"
            ]
          },
          "weightPerAxle": {
            "type": "integer",
            "description": "Vehicle weight per axle, in kilograms.",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "description": "Vehicle width, in centimeters.",
            "format": "int32"
          }
        },
        "description": "Specifies truck profile options."
      },
      "TruckProfile": {
        "title": "TruckProfile",
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "avoid": {
            "$ref": "#/components/schemas/AvoidRoutes"
          },
          "departureTime": {
            "type": "string",
            "description": "Represents date-time unit as defined by RFC3339.",
            "format": "date-time",
            "example": {
              "offset": {
                "totalSeconds": 0,
                "id": "Z",
                "rules": {
                  "fixedOffset": true,
                  "transitions": [

                  ],
                  "transitionRules": [

                  ]
                }
              },
              "nano": 0,
              "year": 2020,
              "monthValue": 7,
              "dayOfMonth": 4,
              "hour": 0,
              "minute": 0,
              "second": 0,
              "month": "JULY",
              "dayOfWeek": "SATURDAY",
              "dayOfYear": 186
            }
          },
          "name": {
            "type": "string",
            "description": "Specifies name of profile. Avoid assigning real-life identifiers, such as for instance a vehicle license plate Id as the `profileName` of the routing profile. ",
            "example": "normal_car"
          },
          "options": {
            "$ref": "#/components/schemas/TruckOptions"
          },
          "type": {
            "type": "string",
            "enum": [
              "truck"
            ]
          }
        },
        "description": "Route calculation for trucks. This mode considers truck limitations on links and uses different speed assumptions when calculating the route. The `departureTime` property allows to specify a custom date-time for which `traffic optimization` in routing calculations shall be performed. See `configuration.optimizations.traffic` for details. "
      },
      "TurnByTurnManeuver": {
        "title": "TurnByTurnManeuver",
        "type": "object",
        "properties": {
          "action": {
            "type": "string"
          },
          "direction": {
            "type": "string"
          },
          "distanceToNextManeuver": {
            "type": "integer",
            "format": "int32"
          },
          "firstPoint": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string"
          },
          "instruction": {
            "type": "string",
            "description": "tagged driver instruction text in the requested language"
          },
          "instructionAfter": {
            "type": "string"
          },
          "instructionBefore": {
            "type": "string"
          },
          "lanes": {
            "type": "string",
            "description": "List of lane infos, viewed into driving direction, from left to right. Applicable lanes marked '*', n = not allowed for vehicle or direction, numbers denote arrows, see Map Attributes layer LANE_FCn attribute DIRECTION_CATEGORY."
          },
          "lastPoint": {
            "type": "integer",
            "format": "int32"
          },
          "length": {
            "type": "integer",
            "description": "Distance [meter] to drive until to this maneuver point",
            "format": "int32"
          },
          "nextRoadName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoadName"
            }
          },
          "orientation": {
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/ManeuverPosition"
          },
          "roadName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoadName"
            }
          },
          "routeLinkIndex": {
            "type": "integer",
            "format": "int32"
          },
          "travelTime": {
            "type": "integer",
            "description": "Time [sec] to drive until to this maneuver point",
            "format": "int32"
          }
        }
      },
      "UnassignedJob": {
        "title": "UnassignedJob",
        "required": [
          "jobId",
          "reasons"
        ],
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "description": "A unique identifier of an entity. Avoid referencing any confidential or personal information as part of the `Id`. ",
            "example": "7f3423c2-784a-4983-b472-e14107d5a54a"
          },
          "reasons": {
            "type": "array",
            "description": "List of possible reasons why job is unassigned.",
            "items": {
              "$ref": "#/components/schemas/UnassignedJobReason"
            }
          }
        },
        "description": "Specifies unassigned job with possible reasons why it is unassigned."
      },
      "UnassignedJobReason": {
        "title": "UnassignedJobReason",
        "required": [
          "code",
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Reason code.",
            "example": "MAX_DISTANCE_CONSTRAINT"
          },
          "description": {
            "type": "string",
            "description": "Reason description.",
            "example": "cannot serve required skill"
          }
        },
        "description": "A possible reason why job is not assigned.  | Code  | Reason                                                                             | | ------| ---------------------------------------------------------------------------------- | | `NO_REASON_FOUND`         | no reason found                                                | | `SKILL_CONSTRAINT`        | cannot serve required skill                                    | | `TIME_WINDOW_CONSTRAINT`  | cannot be visited within time window                           | | `CAPACITY_CONSTRAINT`     | does not fit into any vehicle due to capacity                  | | `REACHABLE_CONSTRAINT`    | location unreachable                                           | | `MAX_DISTANCE_CONSTRAINT` | cannot be assigned due to max distance constraint of vehicle   | | `SHIFT_TIME_CONSTRAINT`   | cannot be assigned due to shift time constraint of vehicle     | "
      },
      "VehicleBreak": {
        "title": "VehicleBreak",
        "required": [
          "duration",
          "times"
        ],
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "description": "Represents duration in seconds.",
            "format": "int32",
            "example": 180
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "times": {
            "type": "array",
            "description": "Represents multiple time windows.",
            "example": "[[\"2020-07-04T08:00:00Z\",\"2020-07-04T10:00:00Z\"],[\"2020-07-04T16:00:00Z\",\"2020-07-04T18:00:00Z\"]]",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "description": "A vehicle break time."
      },
      "VehicleCosts": {
        "title": "VehicleCosts",
        "required": [
          "distance",
          "time"
        ],
        "type": "object",
        "properties": {
          "distance": {
            "type": "number",
            "description": "A cost per meter.",
            "format": "double",
            "example": 0.0001
          },
          "fixed": {
            "type": "number",
            "description": "A fixed cost to start using vehicle of this type.",
            "format": "double",
            "example": 22
          },
          "time": {
            "type": "number",
            "description": "A cost per second.",
            "format": "double",
            "example": 0.0048
          }
        },
        "description": "Defines different vehicle costs per unit."
      },
      "VehicleLimits": {
        "title": "VehicleLimits",
        "type": "object",
        "properties": {
          "maxDistance": {
            "type": "number",
            "description": "Max distance in meters per shift.",
            "format": "double",
            "example": 20000
          },
          "shiftTime": {
            "type": "number",
            "description": "The property shiftTime defines the maximum allowed working time of a vehicle type. In case a break is defined for this particular vehicle type, the duration of the break should be added to the shiftTime. For instance, if a vehicle type has a shift of 8 hours and a 30 minutes break, the total shiftTime should be defined as 8 hours 30 minutes. The properties `start.time` and `end.time` on the VehicleShift define the lower and upper bounds of the time interval in which the vehicle's shift must lie. Under no circumstances may a vehicle start working before `start.time` or finish working after `end.time`. The `start.time` and `end.time` can be imagined as the opening and closing times of a depot where the vehicle starts and ends its tour. `start.time` and `end.time` can override the defined `shiftTime`. That means, in case the time defined by the `shiftTime` property is longer than the time interval between `start.time` and `end.time` the maximum working time of the vehicle will be reduced and will not exceed that time interval. ",
            "format": "double",
            "example": 21600
          }
        },
        "description": "Contains constraints applied to a vehicle type."
      },
      "VehiclePlace": {
        "title": "VehiclePlace",
        "required": [
          "location",
          "time"
        ],
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "time": {
            "type": "string",
            "description": "Represents date-time unit as defined by RFC3339.",
            "format": "date-time",
            "example": {
              "offset": {
                "totalSeconds": 0,
                "id": "Z",
                "rules": {
                  "fixedOffset": true,
                  "transitions": [

                  ],
                  "transitionRules": [

                  ]
                }
              },
              "nano": 0,
              "year": 2020,
              "monthValue": 7,
              "dayOfMonth": 4,
              "hour": 0,
              "minute": 0,
              "second": 0,
              "month": "JULY",
              "dayOfWeek": "SATURDAY",
              "dayOfYear": 186
            }
          }
        },
        "description": "Represents a depot: a place where a vehicle starts or ends."
      },
      "VehicleShift": {
        "title": "VehicleShift",
        "required": [
          "start"
        ],
        "type": "object",
        "properties": {
          "breaks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VehicleBreak"
            }
          },
          "end": {
            "$ref": "#/components/schemas/VehiclePlace"
          },
          "start": {
            "$ref": "#/components/schemas/VehiclePlace"
          }
        },
        "description": "Specifies how vehicle should operate in one work shift."
      },
      "VehicleSpecification": {
        "title": "VehicleSpecification",
        "type": "object",
        "properties": {
          "commercial": {
            "type": "boolean"
          },
          "disabledEquipped": {
            "type": "boolean"
          },
          "emissionType": {
            "type": "string"
          },
          "fuelType": {
            "type": "string"
          },
          "heightAbove1stAxleMax": {
            "type": "integer",
            "format": "int32"
          },
          "heightAbove1stAxleMin": {
            "type": "integer",
            "format": "int32"
          },
          "heightMax": {
            "type": "integer",
            "format": "int32"
          },
          "heightMin": {
            "type": "integer",
            "format": "int32"
          },
          "hov": {
            "type": "boolean"
          },
          "hybrid": {
            "type": "boolean"
          },
          "lengthMax": {
            "type": "integer",
            "format": "int32"
          },
          "lengthMin": {
            "type": "integer",
            "format": "int32"
          },
          "limitedWeightMax": {
            "type": "integer",
            "format": "int32"
          },
          "limitedWeightMin": {
            "type": "integer",
            "format": "int32"
          },
          "minimalPollution": {
            "type": "boolean"
          },
          "passengersCountMax": {
            "type": "integer",
            "format": "int32"
          },
          "passengersCountMin": {
            "type": "integer",
            "format": "int32"
          },
          "personFee": {
            "type": "boolean"
          },
          "shippedHazardousGoods": {
            "type": "string"
          },
          "tiresCountMax": {
            "type": "integer",
            "format": "int32"
          },
          "tiresCountMin": {
            "type": "integer",
            "format": "int32"
          },
          "tollVehicleType": {
            "type": "string"
          },
          "trailerHeightMax": {
            "type": "integer",
            "format": "int32"
          },
          "trailerHeightMin": {
            "type": "integer",
            "format": "int32"
          },
          "trailerNumberAxlesMax": {
            "type": "integer",
            "format": "int32"
          },
          "trailerNumberAxlesMin": {
            "type": "integer",
            "format": "int32"
          },
          "trailerType": {
            "type": "string"
          },
          "trailersCount": {
            "type": "integer",
            "format": "int32"
          },
          "vehicleNumberAxlesMax": {
            "type": "integer",
            "format": "int32"
          },
          "vehicleNumberAxlesMin": {
            "type": "integer",
            "format": "int32"
          },
          "vehicleWeightMax": {
            "type": "integer",
            "format": "int32"
          },
          "vehicleWeightMin": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "VehicleType": {
        "title": "VehicleType",
        "required": [
          "amount",
          "capacity",
          "costs",
          "id",
          "profile",
          "shifts"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "Amount of vehicles available.",
            "format": "int32",
            "example": 1
          },
          "capacity": {
            "type": "array",
            "description": "Unit of measure, e.g. volume, mass, size, etc.",
            "example": "[10,5]",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "costs": {
            "$ref": "#/components/schemas/VehicleCosts"
          },
          "id": {
            "type": "string",
            "description": "Specifies id of profile. Avoid referencing any confidential or personal information as part of the vehicle's `Id`. "
          },
          "limits": {
            "$ref": "#/components/schemas/VehicleLimits"
          },
          "profile": {
            "type": "string",
            "description": "Specifies name of profile. Avoid assigning real-life identifiers, such as for instance a vehicle license plate Id as the `profileName` of the routing profile. ",
            "example": "normal_car"
          },
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VehicleShift"
            }
          },
          "skills": {
            "type": "array",
            "description": "A list of skills for a vehicle or a job.",
            "example": "[\"fridge\"]",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Represents a vehicle type."
      },
      "WayPoint": {
        "title": "WayPoint",
        "type": "object",
        "properties": {
          "globalWayPointSeqNr": {
            "type": "integer",
            "format": "int32"
          },
          "linkId": {
            "type": "string"
          },
          "mappedPosition": {
            "description": "map matched coordinate",
            "$ref": "#/components/schemas/Coordinate"
          },
          "mappedRoadName": {
            "type": "string",
            "description": "Base name of the road. Empty means unknown or valid unnamed."
          },
          "originalPosition": {
            "description": "from request",
            "$ref": "#/components/schemas/Coordinate"
          },
          "seqNrOnRoute": {
            "type": "integer",
            "description": "index of the link in the route (duplicate link entries at start/end of a leg are counted only once)",
            "format": "int32"
          },
          "shapeIndex": {
            "type": "integer",
            "description": "index of the first shape coordinate in the shape array",
            "format": "int32"
          },
          "sideOfStreet": {
            "type": "string",
            "description": "indicates whether the waypoint is on the left or right side of the link in the direction of driving. Possible values are left|right|neither. The value 'neither' means that the waypoint is within 3 meters range away from the link"
          },
          "spot": {
            "type": "number",
            "description": "0...1 relative matched offset on link from reference node",
            "format": "double"
          },
          "type": {
            "type": "string",
            "description": "indicate whether waypoint is passThrough or stopOver"
          },
          "userLabel": {
            "type": "string",
            "description": "Waypoint label specified by user."
          },
          "waypointType": {
            "type": "string",
            "description": "indicate whether waypoint is planned waypoint, learned stop or last tracepoint from RME"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "name": "apiKey",
        "in": "query"
      },
      "bearerTokenAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}